{"version":3,"sources":["horizontal-timeline.js"],"names":[],"mappingsfile":"elix_timeline.js","sourcesContent":["jQuery(document).ready(function($){\r\n\tvar timelines = $('.cd-horizontal-timeline');\r\n\tvar eventsMinDistance;\r\n\r\n\t(timelines.length > 0) && initTimeline(timelines);\r\n\r\n\tfunction initTimeline(timelines) {\r\n\t\ttimelines.each(function(){\r\n\t\t\teventsMinDistance = $(this).data('spacing');\r\n\t\t\tvar timeline = $(this),\r\n\t\t\t\ttimelineComponents = {};\r\n\t\t\t//cache timeline components \r\n\t\t\ttimelineComponents['timelineWrapper'] = timeline.find('.events-wrapper');\r\n\t\t\ttimelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.events');\r\n\t\t\ttimelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.filling-line');\r\n\t\t\ttimelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\r\n\t\t\ttimelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\r\n\t\t\ttimelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\r\n\t\t\ttimelineComponents['timelineNavigation'] = timeline.find('.cd-timeline-navigation');\r\n\t\t\ttimelineComponents['eventsContent'] = timeline.children('.events-content');\r\n\r\n\t\t\t//assign a left postion to the single events along the timeline\r\n\t\t\tsetDatePosition(timelineComponents, eventsMinDistance);\r\n\t\t\t//assign a width to the timeline\r\n\t\t\tvar timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\r\n\t\t\t//the timeline has been initialize - show it\r\n\t\t\ttimeline.addClass('loaded');\r\n\r\n\t\t\t//detect click on the next arrow\r\n\t\t\ttimelineComponents['timelineNavigation'].on('click', '.next', function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tupdateSlide(timelineComponents, timelineTotWidth, 'next');\r\n\t\t\t});\r\n\t\t\t//detect click on the prev arrow\r\n\t\t\ttimelineComponents['timelineNavigation'].on('click', '.prev', function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tupdateSlide(timelineComponents, timelineTotWidth, 'prev');\r\n\t\t\t});\r\n\t\t\t//detect click on the a single event - show new event content\r\n\t\t\ttimelineComponents['eventsWrapper'].on('click', 'a', function(event){\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\ttimelineComponents['timelineEvents'].removeClass('selected');\r\n\t\t\t\t$(this).addClass('selected');\r\n\t\t\t\tupdateOlderEvents($(this));\r\n\t\t\t\tupdateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\r\n\t\t\t\tupdateVisibleContent($(this), timelineComponents['eventsContent']);\r\n\t\t\t});\r\n\r\n\t\t\t//on swipe, show next/prev event content\r\n\t\t\ttimelineComponents['eventsContent'].on('swipeleft', function(){\r\n\t\t\t\tvar mq = checkMQ();\r\n\t\t\t\t( mq == 'mobile' ) && showNewContent(timelineComponents, timelineTotWidth, 'next');\r\n\t\t\t});\r\n\t\t\ttimelineComponents['eventsContent'].on('swiperight', function(){\r\n\t\t\t\tvar mq = checkMQ();\r\n\t\t\t\t( mq == 'mobile' ) && showNewContent(timelineComponents, timelineTotWidth, 'prev');\r\n\t\t\t});\r\n\r\n\t\t\t//keyboard navigation\r\n\t\t\t$(document).keyup(function(event){\r\n\t\t\t\tif(event.which=='37' && elementInViewport(timeline.get(0)) ) {\r\n\t\t\t\t\tshowNewContent(timelineComponents, timelineTotWidth, 'prev');\r\n\t\t\t\t} else if( event.which=='39' && elementInViewport(timeline.get(0))) {\r\n\t\t\t\t\tshowNewContent(timelineComponents, timelineTotWidth, 'next');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tfunction updateSlide(timelineComponents, timelineTotWidth, string) {\r\n\t\t//retrieve translateX value of timelineComponents['eventsWrapper']\r\n\t\tvar translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\r\n\t\t\twrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\r\n\t\t//translate the timeline to the left('next')/right('prev') \r\n\t\t(string == 'next') \r\n\t\t\t? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\r\n\t\t\t: translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\r\n\t}\r\n\r\n\tfunction showNewContent(timelineComponents, timelineTotWidth, string) {\r\n\t\t//go from one event to the next/previous one\r\n\t\tvar visibleContent =  timelineComponents['eventsContent'].find('.selected'),\r\n\t\t\tnewContent = ( string == 'next' ) ? visibleContent.next() : visibleContent.prev();\r\n\r\n\t\tif ( newContent.length > 0 ) { //if there's a next/prev event - show it\r\n\t\t\tvar selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\r\n\t\t\t\tnewEvent = ( string == 'next' ) ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\r\n\t\t\t\r\n\t\t\tupdateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\r\n\t\t\tupdateVisibleContent(newEvent, timelineComponents['eventsContent']);\r\n\t\t\tnewEvent.addClass('selected');\r\n\t\t\tselectedDate.removeClass('selected');\r\n\t\t\tupdateOlderEvents(newEvent);\r\n\t\t\tupdateTimelinePosition(string, newEvent, timelineComponents);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateTimelinePosition(string, event, timelineComponents) {\r\n\t\t//translate timeline to the left/right according to the position of the selected event\r\n\t\tvar eventStyle = window.getComputedStyle(event.get(0), null),\r\n\t\t\teventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\r\n\t\t\ttimelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', '')),\r\n\t\t\ttimelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\r\n\t\tvar timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\r\n\r\n        if( (string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < - timelineTranslate) ) {\r\n        \ttranslateTimeline(timelineComponents, - eventLeft + timelineWidth/2, timelineWidth - timelineTotWidth);\r\n        }\r\n\t}\r\n\r\n\tfunction translateTimeline(timelineComponents, value, totWidth) {\r\n\t\tvar eventsWrapper = timelineComponents['eventsWrapper'].get(0);\r\n\t\tvalue = (value > 0) ? 0 : value; //only negative translate value\r\n\t\tvalue = ( !(typeof totWidth === 'undefined') &&  value < totWidth ) ? totWidth : value; //do not translate more than timeline width\r\n\t\tsetTransformValue(eventsWrapper, 'translateX', value+'px');\r\n\t\t//update navigation arrows visibility\r\n\t\t(value == 0 ) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\r\n\t\t(value == totWidth ) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\r\n\t}\r\n\r\n\tfunction updateFilling(selectedEvent, filling, totWidth) {\r\n\t\t//change .filling-line length according to the selected event\r\n\t\tvar eventStyle = window.getComputedStyle(selectedEvent.get(0), null),\r\n\t\t\teventLeft = eventStyle.getPropertyValue(\"left\"),\r\n\t\t\teventWidth = eventStyle.getPropertyValue(\"width\");\r\n\t\teventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', ''))/2;\r\n\t\tvar scaleValue = eventLeft/totWidth;\r\n\t\tsetTransformValue(filling.get(0), 'scaleX', scaleValue);\r\n\t}\r\n\r\n\tfunction setDatePosition(timelineComponents, min) {\r\n\t\tfor (i = 0; i < timelineComponents['timelineDates'].length; i++) { \r\n\t\t    var distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\r\n\t\t    \tdistanceNorm = Math.round(distance/timelineComponents['eventsMinLapse']) + 2;\r\n\t\t    timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm*min+'px');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setTimelineWidth(timelineComponents, width) {\r\n\t\tvar timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length-1]),\r\n\t\t\ttimeSpanNorm = timeSpan/timelineComponents['eventsMinLapse'],\r\n\t\t\ttimeSpanNorm = Math.round(timeSpanNorm) + 4,\r\n\t\t\ttotalWidth = timeSpanNorm*width;\r\n\t\ttimelineComponents['eventsWrapper'].css('width', totalWidth+'px');\r\n\t\tupdateFilling(timelineComponents['eventsWrapper'].find('a.selected'), timelineComponents['fillingLine'], totalWidth);\r\n\t\tupdateTimelinePosition('next', timelineComponents['eventsWrapper'].find('a.selected'), timelineComponents);\r\n\t\r\n\t\treturn totalWidth;\r\n\t}\r\n\r\n\tfunction updateVisibleContent(event, eventsContent) {\r\n\t\tvar eventDate = event.data('date'),\r\n\t\t\tvisibleContent = eventsContent.find('.selected'),\r\n\t\t\tselectedContent = eventsContent.find('[data-date=\"'+ eventDate +'\"]'),\r\n\t\t\tselectedContentHeight = selectedContent.height();\r\n\r\n\t\tif (selectedContent.index() > visibleContent.index()) {\r\n\t\t\tvar classEnetering = 'selected enter-right',\r\n\t\t\t\tclassLeaving = 'leave-left';\r\n\t\t} else {\r\n\t\t\tvar classEnetering = 'selected enter-left',\r\n\t\t\t\tclassLeaving = 'leave-right';\r\n\t\t}\r\n\r\n\t\tselectedContent.attr('class', classEnetering);\r\n\t\tvisibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function(){\r\n\t\t\tvisibleContent.removeClass('leave-right leave-left');\r\n\t\t\tselectedContent.removeClass('enter-left enter-right');\r\n\t\t});\r\n\t\teventsContent.css('height', selectedContentHeight+'px');\r\n\t}\r\n\r\n\tfunction updateOlderEvents(event) {\r\n\t\tevent.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\r\n\t}\r\n\r\n\tfunction getTranslateValue(timeline) {\r\n\t\tvar timelineStyle = window.getComputedStyle(timeline.get(0), null),\r\n\t\t\ttimelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\r\n         \t\ttimelineStyle.getPropertyValue(\"-moz-transform\") ||\r\n         \t\ttimelineStyle.getPropertyValue(\"-ms-transform\") ||\r\n         \t\ttimelineStyle.getPropertyValue(\"-o-transform\") ||\r\n         \t\ttimelineStyle.getPropertyValue(\"transform\");\r\n\r\n        if( timelineTranslate.indexOf('(') >=0 ) {\r\n        \tvar timelineTranslate = timelineTranslate.split('(')[1];\r\n    \t\ttimelineTranslate = timelineTranslate.split(')')[0];\r\n    \t\ttimelineTranslate = timelineTranslate.split(',');\r\n    \t\tvar translateValue = timelineTranslate[4];\r\n        } else {\r\n        \tvar translateValue = 0;\r\n        }\r\n\r\n        return Number(translateValue);\r\n\t}\r\n\r\n\tfunction setTransformValue(element, property, value) {\r\n\t\telement.style[\"-webkit-transform\"] = property+\"(\"+value+\")\";\r\n\t\telement.style[\"-moz-transform\"] = property+\"(\"+value+\")\";\r\n\t\telement.style[\"-ms-transform\"] = property+\"(\"+value+\")\";\r\n\t\telement.style[\"-o-transform\"] = property+\"(\"+value+\")\";\r\n\t\telement.style[\"transform\"] = property+\"(\"+value+\")\";\r\n\t}\r\n\r\n\t//based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript\r\n\tfunction parseDate(events) {\r\n\t\tvar dateArrays = [];\r\n\t\tevents.each(function(){\r\n\t\t\tvar singleDate = $(this),\r\n\t\t\t\tdateComp = singleDate.data('date').split('T');\r\n\t\t\tif( dateComp.length > 1 ) { //both DD/MM/YEAR and time are provided\r\n\t\t\t\tvar dayComp = dateComp[0].split('/'),\r\n\t\t\t\t\ttimeComp = dateComp[1].split(':');\r\n\t\t\t} else if( dateComp[0].indexOf(':') >=0 ) { //only time is provide\r\n\t\t\t\tvar dayComp = [\"2000\", \"0\", \"0\"],\r\n\t\t\t\t\ttimeComp = dateComp[0].split(':');\r\n\t\t\t} else { //only DD/MM/YEAR\r\n\t\t\t\tvar dayComp = dateComp[0].split('/'),\r\n\t\t\t\t\ttimeComp = [\"0\", \"0\"];\r\n\t\t\t}\r\n\t\t\tvar\tnewDate = new Date(dayComp[2], dayComp[1]-1, dayComp[0], timeComp[0], timeComp[1]);\r\n\t\t\tdateArrays.push(newDate);\r\n\t\t});\r\n\t    return dateArrays;\r\n\t}\r\n\r\n\tfunction daydiff(first, second) {\r\n\t    return Math.round((second-first));\r\n\t}\r\n\r\n\tfunction minLapse(dates) {\r\n\t\t//determine the minimum distance among events\r\n\t\tvar dateDistances = [];\r\n\t\tfor (i = 1; i < dates.length; i++) { \r\n\t\t    var distance = daydiff(dates[i-1], dates[i]);\r\n\t\t    dateDistances.push(distance);\r\n\t\t}\r\n\t\treturn Math.min.apply(null, dateDistances);\r\n\t}\r\n\r\n\t/*\r\n\t\tHow to tell if a DOM element is visible in the current viewport?\r\n\t\thttp://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\r\n\t*/\r\n\tfunction elementInViewport(el) {\r\n\t\tvar top = el.offsetTop;\r\n\t\tvar left = el.offsetLeft;\r\n\t\tvar width = el.offsetWidth;\r\n\t\tvar height = el.offsetHeight;\r\n\r\n\t\twhile(el.offsetParent) {\r\n\t\t    el = el.offsetParent;\r\n\t\t    top += el.offsetTop;\r\n\t\t    left += el.offsetLeft;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t    top < (window.pageYOffset + window.innerHeight) &&\r\n\t\t    left < (window.pageXOffset + window.innerWidth) &&\r\n\t\t    (top + height) > window.pageYOffset &&\r\n\t\t    (left + width) > window.pageXOffset\r\n\t\t);\r\n\t}\r\n\r\n\tfunction checkMQ() {\r\n\t\t//check if mobile or desktop device\r\n\t\treturn window.getComputedStyle(document.querySelector('.cd-horizontal-timeline'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\r\n\t}\r\n});"]}