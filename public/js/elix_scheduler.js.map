{"version":3,"sources":["scheduler.js","dx_scheduler.js","jquery.contextMenu.js"],"names":[],"mappingsnxfile":"elix_scheduler.js","sourcesContent":["\r\n/*!\r\nFullCalendar Scheduler v1.6.2\r\nDocs & License: https://fullcalendar.io/scheduler/\r\n(c) 2017 Adam Shaw\r\n */\r\n(function(factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine([ 'jquery', 'moment', 'fullcalendar' ], factory);\r\n\t}\r\n\telse if (typeof exports === 'object') { // Node/CommonJS\r\n\t\tmodule.exports = factory(\r\n\t\t\trequire('jquery'),\r\n\t\t\trequire('moment'),\r\n\t\t\trequire('fullcalendar')\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\tfactory(jQuery, moment);\r\n\t}\r\n})(function($, moment) {;\r\nvar COL_MIN_WIDTH, Calendar, CalendarExtension, Class, ClippedScroller, CoordCache, DEFAULT_GRID_DURATION, DragListener, EmitterMixin, EnhancedScroller, EventRow, FC, Grid, HRowGroup, LICENSE_INFO_URL, ListenerMixin, MAX_AUTO_CELLS, MAX_AUTO_SLOTS_PER_LABEL, MAX_CELLS, MIN_AUTO_LABELS, PRESET_LICENSE_KEYS, Promise, RELEASE_DATE, ResourceAgendaView, ResourceBasicView, ResourceDayGrid, ResourceDayTableMixin, ResourceGridMixin, ResourceManager, ResourceMonthView, ResourceRow, ResourceTimeGrid, ResourceTimelineGrid, ResourceTimelineView, ResourceViewMixin, RowGroup, RowParent, STOCK_SUB_DURATIONS, ScrollFollower, ScrollFollowerSprite, ScrollJoiner, ScrollerCanvas, Spreadsheet, TaskQueue, TimelineGrid, TimelineView, UPGRADE_WINDOW, VRowGroup, VertResourceViewMixin, View, _filterResourcesWithEvents, applyAll, capitaliseFirstLetter, compareByFieldSpecs, computeGreatestUnit, computeOffsetForSeg, computeOffsetForSegs, copyRect, createObject, cssToStr, debounce, detectWarningInContainer, divideDurationByDuration, divideRangeByDuration, durationHasTime, flexibleCompare, getContentRect, getOuterRect, getOwnCells, getRectHeight, getRectWidth, getScrollbarWidths, hContainRect, htmlEscape, intersectRanges, intersectRects, isImmuneUrl, isInt, isValidKey, joinRects, multiplyDuration, origGetSegCustomClasses, origGetSegDefaultBackgroundColor, origGetSegDefaultBorderColor, origGetSegDefaultTextColor, origOnBaseRender, origRemoveElement, origSetElement, parseFieldSpecs, processLicenseKey, proxy, renderingWarningInContainer, testRectContains, testRectHContains, testRectVContains, timeRowSegsCollide, vContainRect,\r\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\r\n  hasProp = {}.hasOwnProperty,\r\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\r\n  slice = [].slice;\r\n\r\nFC = $.fullCalendar;\r\n\r\nFC.schedulerVersion = \"1.6.2\";\r\n\r\nif (FC.internalApiVersion !== 9) {\r\n  FC.warn('v' + FC.schedulerVersion + ' of FullCalendar Scheduler ' + 'is incompatible with v' + FC.version + ' of the core.\\n' + 'Please see http://fullcalendar.io/support/ for more information.');\r\n  return;\r\n}\r\n\r\nCalendar = FC.Calendar;\r\n\r\nClass = FC.Class;\r\n\r\nView = FC.View;\r\n\r\nGrid = FC.Grid;\r\n\r\nintersectRanges = FC.intersectRanges;\r\n\r\ndebounce = FC.debounce;\r\n\r\nisInt = FC.isInt;\r\n\r\ngetScrollbarWidths = FC.getScrollbarWidths;\r\n\r\nDragListener = FC.DragListener;\r\n\r\nhtmlEscape = FC.htmlEscape;\r\n\r\ncomputeGreatestUnit = FC.computeGreatestUnit;\r\n\r\nproxy = FC.proxy;\r\n\r\ncapitaliseFirstLetter = FC.capitaliseFirstLetter;\r\n\r\napplyAll = FC.applyAll;\r\n\r\nEmitterMixin = FC.EmitterMixin;\r\n\r\nListenerMixin = FC.ListenerMixin;\r\n\r\ndurationHasTime = FC.durationHasTime;\r\n\r\ndivideRangeByDuration = FC.divideRangeByDuration;\r\n\r\ndivideDurationByDuration = FC.divideDurationByDuration;\r\n\r\nmultiplyDuration = FC.multiplyDuration;\r\n\r\nparseFieldSpecs = FC.parseFieldSpecs;\r\n\r\ncompareByFieldSpecs = FC.compareByFieldSpecs;\r\n\r\nflexibleCompare = FC.flexibleCompare;\r\n\r\nintersectRects = FC.intersectRects;\r\n\r\nCoordCache = FC.CoordCache;\r\n\r\ngetContentRect = FC.getContentRect;\r\n\r\ngetOuterRect = FC.getOuterRect;\r\n\r\ncreateObject = FC.createObject;\r\n\r\nPromise = FC.Promise;\r\n\r\nTaskQueue = FC.TaskQueue;\r\n\r\n\r\n/*\r\nGiven a jQuery <tr> set, returns the <td>'s that do not have multi-line rowspans.\r\nWould use the [rowspan] selector, but never not defined in IE8.\r\n */\r\n\r\ngetOwnCells = function(trs) {\r\n  return trs.find('> td').filter(function(i, tdNode) {\r\n    return tdNode.rowSpan <= 1;\r\n  });\r\n};\r\n\r\n\r\n/*\r\nA Scroller with additional functionality:\r\n- optional ScrollerCanvas for content\r\n- fired events for scroll start/end\r\n- cross-browser normalization of horizontal scroll for RTL\r\n */\r\n\r\nEnhancedScroller = (function(superClass) {\r\n  var detectRtlScrollSystem, rtlScrollSystem;\r\n\r\n  extend(EnhancedScroller, superClass);\r\n\r\n  EnhancedScroller.mixin(EmitterMixin);\r\n\r\n  EnhancedScroller.mixin(ListenerMixin);\r\n\r\n  EnhancedScroller.prototype.canvas = null;\r\n\r\n  EnhancedScroller.prototype.isScrolling = false;\r\n\r\n  EnhancedScroller.prototype.isTouching = false;\r\n\r\n  EnhancedScroller.prototype.isTouchedEver = false;\r\n\r\n  EnhancedScroller.prototype.isMoving = false;\r\n\r\n  EnhancedScroller.prototype.isTouchScrollEnabled = true;\r\n\r\n  EnhancedScroller.prototype.preventTouchScrollHandler = null;\r\n\r\n  function EnhancedScroller() {\r\n    EnhancedScroller.__super__.constructor.apply(this, arguments);\r\n    this.requestMovingEnd = debounce(this.reportMovingEnd, 500);\r\n  }\r\n\r\n  EnhancedScroller.prototype.render = function() {\r\n    EnhancedScroller.__super__.render.apply(this, arguments);\r\n    if (this.canvas) {\r\n      this.canvas.render();\r\n      this.canvas.el.appendTo(this.scrollEl);\r\n    }\r\n    return this.bindHandlers();\r\n  };\r\n\r\n  EnhancedScroller.prototype.destroy = function() {\r\n    EnhancedScroller.__super__.destroy.apply(this, arguments);\r\n    return this.unbindHandlers();\r\n  };\r\n\r\n  EnhancedScroller.prototype.disableTouchScroll = function() {\r\n    this.isTouchScrollEnabled = false;\r\n    return this.bindPreventTouchScroll();\r\n  };\r\n\r\n  EnhancedScroller.prototype.enableTouchScroll = function() {\r\n    this.isTouchScrollEnabled = true;\r\n    if (!this.isTouching) {\r\n      return this.unbindPreventTouchScroll();\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.bindPreventTouchScroll = function() {\r\n    if (!this.preventTouchScrollHandler) {\r\n      return this.scrollEl.on('touchmove', this.preventTouchScrollHandler = FC.preventDefault);\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.unbindPreventTouchScroll = function() {\r\n    if (this.preventTouchScrollHandler) {\r\n      this.scrollEl.off('touchmove', this.preventTouchScrollHandler);\r\n      return this.preventTouchScrollHandler = null;\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.bindHandlers = function() {\r\n    return this.listenTo(this.scrollEl, {\r\n      scroll: this.reportScroll,\r\n      touchstart: this.reportTouchStart,\r\n      touchend: this.reportTouchEnd\r\n    });\r\n  };\r\n\r\n  EnhancedScroller.prototype.unbindHandlers = function() {\r\n    return this.stopListeningTo(this.scrollEl);\r\n  };\r\n\r\n  EnhancedScroller.prototype.reportScroll = function() {\r\n    if (!this.isScrolling) {\r\n      this.reportScrollStart();\r\n    }\r\n    this.trigger('scroll');\r\n    this.isMoving = true;\r\n    return this.requestMovingEnd();\r\n  };\r\n\r\n  EnhancedScroller.prototype.reportScrollStart = function() {\r\n    if (!this.isScrolling) {\r\n      this.isScrolling = true;\r\n      return this.trigger('scrollStart', this.isTouching);\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.requestMovingEnd = null;\r\n\r\n  EnhancedScroller.prototype.reportMovingEnd = function() {\r\n    this.isMoving = false;\r\n    if (!this.isTouching) {\r\n      return this.reportScrollEnd();\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.reportScrollEnd = function() {\r\n    if (this.isScrolling) {\r\n      this.trigger('scrollEnd');\r\n      return this.isScrolling = false;\r\n    }\r\n  };\r\n\r\n  EnhancedScroller.prototype.reportTouchStart = function() {\r\n    this.isTouching = true;\r\n    return this.isTouchedEver = true;\r\n  };\r\n\r\n  EnhancedScroller.prototype.reportTouchEnd = function() {\r\n    if (this.isTouching) {\r\n      this.isTouching = false;\r\n      if (this.isTouchScrollEnabled) {\r\n        this.unbindPreventTouchScroll();\r\n      }\r\n      if (!this.isMoving) {\r\n        return this.reportScrollEnd();\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tIf RTL, and scrolled to the left, returns NEGATIVE value (like Firefox)\r\n   */\r\n\r\n  EnhancedScroller.prototype.getScrollLeft = function() {\r\n    var direction, node, val;\r\n    direction = this.scrollEl.css('direction');\r\n    node = this.scrollEl[0];\r\n    val = node.scrollLeft;\r\n    if (direction === 'rtl') {\r\n      switch (rtlScrollSystem) {\r\n        case 'positive':\r\n          val = val + node.clientWidth - node.scrollWidth;\r\n          break;\r\n        case 'reverse':\r\n          val = -val;\r\n      }\r\n    }\r\n    return val;\r\n  };\r\n\r\n\r\n  /*\r\n  \tAccepts a NEGATIVE value for when scrolled in RTL\r\n   */\r\n\r\n  EnhancedScroller.prototype.setScrollLeft = function(val) {\r\n    var direction, node;\r\n    direction = this.scrollEl.css('direction');\r\n    node = this.scrollEl[0];\r\n    if (direction === 'rtl') {\r\n      switch (rtlScrollSystem) {\r\n        case 'positive':\r\n          val = val - node.clientWidth + node.scrollWidth;\r\n          break;\r\n        case 'reverse':\r\n          val = -val;\r\n      }\r\n    }\r\n    return node.scrollLeft = val;\r\n  };\r\n\r\n\r\n  /*\r\n  \tAlways returns the number of pixels scrolled from the leftmost position (even if RTL).\r\n  \tAlways positive.\r\n   */\r\n\r\n  EnhancedScroller.prototype.getScrollFromLeft = function() {\r\n    var direction, node, val;\r\n    direction = this.scrollEl.css('direction');\r\n    node = this.scrollEl[0];\r\n    val = node.scrollLeft;\r\n    if (direction === 'rtl') {\r\n      switch (rtlScrollSystem) {\r\n        case 'negative':\r\n          val = val - node.clientWidth + node.scrollWidth;\r\n          break;\r\n        case 'reverse':\r\n          val = -val - node.clientWidth + node.scrollWidth;\r\n      }\r\n    }\r\n    return val;\r\n  };\r\n\r\n  EnhancedScroller.prototype.getNativeScrollLeft = function() {\r\n    return this.scrollEl[0].scrollLeft;\r\n  };\r\n\r\n  EnhancedScroller.prototype.setNativeScrollLeft = function(val) {\r\n    return this.scrollEl[0].scrollLeft = val;\r\n  };\r\n\r\n  rtlScrollSystem = null;\r\n\r\n  detectRtlScrollSystem = function() {\r\n    var el, node, system;\r\n    el = $('<div style=\" position: absolute top: -1000px; width: 1px; height: 1px; overflow: scroll; direction: rtl; font-size: 14px; \">A</div>').appendTo('body');\r\n    node = el[0];\r\n    system = node.scrollLeft > 0 ? 'positive' : (node.scrollLeft = 1, el.scrollLeft > 0 ? 'reverse' : 'negative');\r\n    el.remove();\r\n    return system;\r\n  };\r\n\r\n  $(function() {\r\n    return rtlScrollSystem = detectRtlScrollSystem();\r\n  });\r\n\r\n  return EnhancedScroller;\r\n\r\n})(FC.Scroller);\r\n\r\n\r\n/*\r\nA Scroller, but with a wrapping div that allows \"clipping\" away of native scrollbars,\r\ngiving the appearance that there are no scrollbars.\r\n */\r\n\r\nClippedScroller = (function(superClass) {\r\n  extend(ClippedScroller, superClass);\r\n\r\n  ClippedScroller.prototype.isHScrollbarsClipped = false;\r\n\r\n  ClippedScroller.prototype.isVScrollbarsClipped = false;\r\n\r\n\r\n  /*\r\n  \tReceived overflows can be set to 'clipped', meaning scrollbars shouldn't be visible\r\n  \tto the user, but the area should still scroll.\r\n   */\r\n\r\n  function ClippedScroller() {\r\n    ClippedScroller.__super__.constructor.apply(this, arguments);\r\n    if (this.overflowX === 'clipped-scroll') {\r\n      this.overflowX = 'scroll';\r\n      this.isHScrollbarsClipped = true;\r\n    }\r\n    if (this.overflowY === 'clipped-scroll') {\r\n      this.overflowY = 'scroll';\r\n      this.isVScrollbarsClipped = true;\r\n    }\r\n  }\r\n\r\n  ClippedScroller.prototype.renderEl = function() {\r\n    var scrollEl;\r\n    scrollEl = ClippedScroller.__super__.renderEl.apply(this, arguments);\r\n    return $('<div class=\"fc-scroller-clip\" />').append(scrollEl);\r\n  };\r\n\r\n  ClippedScroller.prototype.updateSize = function() {\r\n    var cssProps, scrollEl, scrollbarWidths;\r\n    scrollEl = this.scrollEl;\r\n    scrollbarWidths = getScrollbarWidths(scrollEl);\r\n    cssProps = {\r\n      marginLeft: 0,\r\n      marginRight: 0,\r\n      marginTop: 0,\r\n      marginBottom: 0\r\n    };\r\n    if (this.isHScrollbarsClipped) {\r\n      cssProps.marginTop = -scrollbarWidths.top;\r\n      cssProps.marginBottom = -scrollbarWidths.bottom;\r\n    }\r\n    if (this.isVScrollbarsClipped) {\r\n      cssProps.marginLeft = -scrollbarWidths.left;\r\n      cssProps.marginRight = -scrollbarWidths.right;\r\n    }\r\n    scrollEl.css(cssProps);\r\n    return scrollEl.toggleClass('fc-no-scrollbars', (this.isHScrollbarsClipped || this.overflowX === 'hidden') && (this.isVScrollbarsClipped || this.overflowY === 'hidden') && !(scrollbarWidths.top || scrollbarWidths.bottom || scrollbarWidths.left || scrollbarWidths.right));\r\n  };\r\n\r\n\r\n  /*\r\n  \tAccounts for 'clipped' scrollbars\r\n   */\r\n\r\n  ClippedScroller.prototype.getScrollbarWidths = function() {\r\n    var widths;\r\n    widths = getScrollbarWidths(this.scrollEl);\r\n    if (this.isHScrollbarsClipped) {\r\n      widths.top = 0;\r\n      widths.bottom = 0;\r\n    }\r\n    if (this.isVScrollbarsClipped) {\r\n      widths.left = 0;\r\n      widths.right = 0;\r\n    }\r\n    return widths;\r\n  };\r\n\r\n  return ClippedScroller;\r\n\r\n})(EnhancedScroller);\r\n\r\n\r\n/*\r\nA rectangular area of content that lives within a Scroller.\r\nCan have \"gutters\", areas of dead spacing around the perimeter.\r\nAlso very useful for forcing a width, which a Scroller cannot do alone.\r\nHas a content area that lives above a background area.\r\n */\r\n\r\nScrollerCanvas = (function() {\r\n  ScrollerCanvas.prototype.el = null;\r\n\r\n  ScrollerCanvas.prototype.contentEl = null;\r\n\r\n  ScrollerCanvas.prototype.bgEl = null;\r\n\r\n  ScrollerCanvas.prototype.gutters = null;\r\n\r\n  ScrollerCanvas.prototype.width = null;\r\n\r\n  ScrollerCanvas.prototype.minWidth = null;\r\n\r\n  function ScrollerCanvas() {\r\n    this.gutters = {};\r\n  }\r\n\r\n  ScrollerCanvas.prototype.render = function() {\r\n    this.el = $('<div class=\"fc-scroller-canvas\"> <div class=\"fc-content\"></div> <div class=\"fc-bg\"></div> </div>');\r\n    this.contentEl = this.el.find('.fc-content');\r\n    return this.bgEl = this.el.find('.fc-bg');\r\n  };\r\n\r\n\r\n  /*\r\n  \tIf falsy, resets all the gutters to 0\r\n   */\r\n\r\n  ScrollerCanvas.prototype.setGutters = function(gutters) {\r\n    if (!gutters) {\r\n      this.gutters = {};\r\n    } else {\r\n      $.extend(this.gutters, gutters);\r\n    }\r\n    return this.updateSize();\r\n  };\r\n\r\n  ScrollerCanvas.prototype.setWidth = function(width1) {\r\n    this.width = width1;\r\n    return this.updateSize();\r\n  };\r\n\r\n  ScrollerCanvas.prototype.setMinWidth = function(minWidth1) {\r\n    this.minWidth = minWidth1;\r\n    return this.updateSize();\r\n  };\r\n\r\n  ScrollerCanvas.prototype.clearWidth = function() {\r\n    this.width = null;\r\n    this.minWidth = null;\r\n    return this.updateSize();\r\n  };\r\n\r\n  ScrollerCanvas.prototype.updateSize = function() {\r\n    var gutters;\r\n    gutters = this.gutters;\r\n    this.el.toggleClass('fc-gutter-left', Boolean(gutters.left)).toggleClass('fc-gutter-right', Boolean(gutters.right)).toggleClass('fc-gutter-top', Boolean(gutters.top)).toggleClass('fc-gutter-bottom', Boolean(gutters.bottom)).css({\r\n      paddingLeft: gutters.left || '',\r\n      paddingRight: gutters.right || '',\r\n      paddingTop: gutters.top || '',\r\n      paddingBottom: gutters.bottom || '',\r\n      width: this.width != null ? this.width + (gutters.left || 0) + (gutters.right || 0) : '',\r\n      minWidth: this.minWidth != null ? this.minWidth + (gutters.left || 0) + (gutters.right || 0) : ''\r\n    });\r\n    return this.bgEl.css({\r\n      left: gutters.left || '',\r\n      right: gutters.right || '',\r\n      top: gutters.top || '',\r\n      bottom: gutters.bottom || ''\r\n    });\r\n  };\r\n\r\n  return ScrollerCanvas;\r\n\r\n})();\r\n\r\nScrollJoiner = (function() {\r\n  ScrollJoiner.prototype.axis = null;\r\n\r\n  ScrollJoiner.prototype.scrollers = null;\r\n\r\n  ScrollJoiner.prototype.masterScroller = null;\r\n\r\n  function ScrollJoiner(axis, scrollers) {\r\n    var j, len, ref, scroller;\r\n    this.axis = axis;\r\n    this.scrollers = scrollers;\r\n    ref = this.scrollers;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      scroller = ref[j];\r\n      this.initScroller(scroller);\r\n    }\r\n    return;\r\n  }\r\n\r\n  ScrollJoiner.prototype.initScroller = function(scroller) {\r\n    scroller.scrollEl.on('wheel mousewheel DomMouseScroll MozMousePixelScroll', (function(_this) {\r\n      return function() {\r\n        _this.assignMasterScroller(scroller);\r\n      };\r\n    })(this));\r\n    return scroller.on('scrollStart', (function(_this) {\r\n      return function() {\r\n        if (!_this.masterScroller) {\r\n          return _this.assignMasterScroller(scroller);\r\n        }\r\n      };\r\n    })(this)).on('scroll', (function(_this) {\r\n      return function() {\r\n        var j, len, otherScroller, ref, results;\r\n        if (scroller === _this.masterScroller) {\r\n          ref = _this.scrollers;\r\n          results = [];\r\n          for (j = 0, len = ref.length; j < len; j++) {\r\n            otherScroller = ref[j];\r\n            if (otherScroller !== scroller) {\r\n              switch (_this.axis) {\r\n                case 'horizontal':\r\n                  results.push(otherScroller.setNativeScrollLeft(scroller.getNativeScrollLeft()));\r\n                  break;\r\n                case 'vertical':\r\n                  results.push(otherScroller.setScrollTop(scroller.getScrollTop()));\r\n                  break;\r\n                default:\r\n                  results.push(void 0);\r\n              }\r\n            } else {\r\n              results.push(void 0);\r\n            }\r\n          }\r\n          return results;\r\n        }\r\n      };\r\n    })(this)).on('scrollEnd', (function(_this) {\r\n      return function() {\r\n        if (scroller === _this.masterScroller) {\r\n          return _this.unassignMasterScroller();\r\n        }\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ScrollJoiner.prototype.assignMasterScroller = function(scroller) {\r\n    var j, len, otherScroller, ref;\r\n    this.unassignMasterScroller();\r\n    this.masterScroller = scroller;\r\n    ref = this.scrollers;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      otherScroller = ref[j];\r\n      if (otherScroller !== scroller) {\r\n        otherScroller.disableTouchScroll();\r\n      }\r\n    }\r\n  };\r\n\r\n  ScrollJoiner.prototype.unassignMasterScroller = function() {\r\n    var j, len, otherScroller, ref;\r\n    if (this.masterScroller) {\r\n      ref = this.scrollers;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        otherScroller = ref[j];\r\n        otherScroller.enableTouchScroll();\r\n      }\r\n      this.masterScroller = null;\r\n    }\r\n  };\r\n\r\n  ScrollJoiner.prototype.update = function() {\r\n    var allWidths, i, j, k, len, len1, maxBottom, maxLeft, maxRight, maxTop, ref, scroller, widths;\r\n    allWidths = (function() {\r\n      var j, len, ref, results;\r\n      ref = this.scrollers;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        scroller = ref[j];\r\n        results.push(scroller.getScrollbarWidths());\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    maxLeft = maxRight = maxTop = maxBottom = 0;\r\n    for (j = 0, len = allWidths.length; j < len; j++) {\r\n      widths = allWidths[j];\r\n      maxLeft = Math.max(maxLeft, widths.left);\r\n      maxRight = Math.max(maxRight, widths.right);\r\n      maxTop = Math.max(maxTop, widths.top);\r\n      maxBottom = Math.max(maxBottom, widths.bottom);\r\n    }\r\n    ref = this.scrollers;\r\n    for (i = k = 0, len1 = ref.length; k < len1; i = ++k) {\r\n      scroller = ref[i];\r\n      widths = allWidths[i];\r\n      scroller.canvas.setGutters(this.axis === 'horizontal' ? {\r\n        left: maxLeft - widths.left,\r\n        right: maxRight - widths.right\r\n      } : {\r\n        top: maxTop - widths.top,\r\n        bottom: maxBottom - widths.bottom\r\n      });\r\n    }\r\n  };\r\n\r\n  return ScrollJoiner;\r\n\r\n})();\r\n\r\nScrollFollower = (function() {\r\n  ScrollFollower.prototype.scroller = null;\r\n\r\n  ScrollFollower.prototype.scrollbarWidths = null;\r\n\r\n  ScrollFollower.prototype.sprites = null;\r\n\r\n  ScrollFollower.prototype.viewportRect = null;\r\n\r\n  ScrollFollower.prototype.contentOffset = null;\r\n\r\n  ScrollFollower.prototype.isHFollowing = true;\r\n\r\n  ScrollFollower.prototype.isVFollowing = false;\r\n\r\n  ScrollFollower.prototype.allowPointerEvents = false;\r\n\r\n  ScrollFollower.prototype.containOnNaturalLeft = false;\r\n\r\n  ScrollFollower.prototype.containOnNaturalRight = false;\r\n\r\n  ScrollFollower.prototype.minTravel = 0;\r\n\r\n  ScrollFollower.prototype.isTouch = false;\r\n\r\n  ScrollFollower.prototype.isForcedRelative = false;\r\n\r\n  function ScrollFollower(scroller, allowPointerEvents) {\r\n    this.allowPointerEvents = allowPointerEvents != null ? allowPointerEvents : false;\r\n    this.scroller = scroller;\r\n    this.sprites = [];\r\n    scroller.on('scroll', (function(_this) {\r\n      return function() {\r\n        if (scroller.isTouchedEver) {\r\n          _this.isTouch = true;\r\n          return _this.isForcedRelative = true;\r\n        } else {\r\n          _this.isTouch = false;\r\n          _this.isForcedRelative = false;\r\n          return _this.handleScroll();\r\n        }\r\n      };\r\n    })(this));\r\n    scroller.on('scrollEnd', (function(_this) {\r\n      return function() {\r\n        return _this.handleScroll();\r\n      };\r\n    })(this));\r\n  }\r\n\r\n  ScrollFollower.prototype.setSprites = function(sprites) {\r\n    var j, len, sprite;\r\n    this.clearSprites();\r\n    if (sprites instanceof $) {\r\n      return this.sprites = (function() {\r\n        var j, len, results;\r\n        results = [];\r\n        for (j = 0, len = sprites.length; j < len; j++) {\r\n          sprite = sprites[j];\r\n          results.push(new ScrollFollowerSprite($(sprite), this));\r\n        }\r\n        return results;\r\n      }).call(this);\r\n    } else {\r\n      for (j = 0, len = sprites.length; j < len; j++) {\r\n        sprite = sprites[j];\r\n        sprite.follower = this;\r\n      }\r\n      return this.sprites = sprites;\r\n    }\r\n  };\r\n\r\n  ScrollFollower.prototype.clearSprites = function() {\r\n    var j, len, ref, sprite;\r\n    ref = this.sprites;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      sprite = ref[j];\r\n      sprite.clear();\r\n    }\r\n    return this.sprites = [];\r\n  };\r\n\r\n  ScrollFollower.prototype.handleScroll = function() {\r\n    this.updateViewport();\r\n    return this.updatePositions();\r\n  };\r\n\r\n  ScrollFollower.prototype.cacheDimensions = function() {\r\n    var j, len, ref, sprite;\r\n    this.updateViewport();\r\n    this.scrollbarWidths = this.scroller.getScrollbarWidths();\r\n    this.contentOffset = this.scroller.canvas.el.offset();\r\n    ref = this.sprites;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      sprite = ref[j];\r\n      sprite.cacheDimensions();\r\n    }\r\n  };\r\n\r\n  ScrollFollower.prototype.updateViewport = function() {\r\n    var left, scroller, top;\r\n    scroller = this.scroller;\r\n    left = scroller.getScrollFromLeft();\r\n    top = scroller.getScrollTop();\r\n    return this.viewportRect = {\r\n      left: left,\r\n      right: left + scroller.getClientWidth(),\r\n      top: top,\r\n      bottom: top + scroller.getClientHeight()\r\n    };\r\n  };\r\n\r\n  ScrollFollower.prototype.forceRelative = function() {\r\n    var j, len, ref, results, sprite;\r\n    if (!this.isForcedRelative) {\r\n      this.isForcedRelative = true;\r\n      ref = this.sprites;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        sprite = ref[j];\r\n        if (sprite.doAbsolute) {\r\n          results.push(sprite.assignPosition());\r\n        } else {\r\n          results.push(void 0);\r\n        }\r\n      }\r\n      return results;\r\n    }\r\n  };\r\n\r\n  ScrollFollower.prototype.clearForce = function() {\r\n    var j, len, ref, results, sprite;\r\n    if (this.isForcedRelative && !this.isTouch) {\r\n      this.isForcedRelative = false;\r\n      ref = this.sprites;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        sprite = ref[j];\r\n        results.push(sprite.assignPosition());\r\n      }\r\n      return results;\r\n    }\r\n  };\r\n\r\n  ScrollFollower.prototype.update = function() {\r\n    this.cacheDimensions();\r\n    return this.updatePositions();\r\n  };\r\n\r\n  ScrollFollower.prototype.updatePositions = function() {\r\n    var j, len, ref, sprite;\r\n    ref = this.sprites;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      sprite = ref[j];\r\n      sprite.updatePosition();\r\n    }\r\n  };\r\n\r\n  ScrollFollower.prototype.getContentRect = function(el) {\r\n    return getContentRect(el, this.contentOffset);\r\n  };\r\n\r\n  ScrollFollower.prototype.getBoundingRect = function(el) {\r\n    return getOuterRect(el, this.contentOffset);\r\n  };\r\n\r\n  return ScrollFollower;\r\n\r\n})();\r\n\r\nScrollFollowerSprite = (function() {\r\n  ScrollFollowerSprite.prototype.follower = null;\r\n\r\n  ScrollFollowerSprite.prototype.el = null;\r\n\r\n  ScrollFollowerSprite.prototype.absoluteEl = null;\r\n\r\n  ScrollFollowerSprite.prototype.naturalRect = null;\r\n\r\n  ScrollFollowerSprite.prototype.parentRect = null;\r\n\r\n  ScrollFollowerSprite.prototype.containerRect = null;\r\n\r\n  ScrollFollowerSprite.prototype.isEnabled = true;\r\n\r\n  ScrollFollowerSprite.prototype.isHFollowing = false;\r\n\r\n  ScrollFollowerSprite.prototype.isVFollowing = false;\r\n\r\n  ScrollFollowerSprite.prototype.doAbsolute = false;\r\n\r\n  ScrollFollowerSprite.prototype.isAbsolute = false;\r\n\r\n  ScrollFollowerSprite.prototype.isCentered = false;\r\n\r\n  ScrollFollowerSprite.prototype.rect = null;\r\n\r\n  ScrollFollowerSprite.prototype.isBlock = false;\r\n\r\n  ScrollFollowerSprite.prototype.naturalWidth = null;\r\n\r\n  function ScrollFollowerSprite(el1, follower1) {\r\n    this.el = el1;\r\n    this.follower = follower1 != null ? follower1 : null;\r\n    this.isBlock = this.el.css('display') === 'block';\r\n    this.el.css('position', 'relative');\r\n  }\r\n\r\n  ScrollFollowerSprite.prototype.disable = function() {\r\n    if (this.isEnabled) {\r\n      this.isEnabled = false;\r\n      this.resetPosition();\r\n      return this.unabsolutize();\r\n    }\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.enable = function() {\r\n    if (!this.isEnabled) {\r\n      this.isEnabled = true;\r\n      return this.assignPosition();\r\n    }\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.clear = function() {\r\n    this.disable();\r\n    this.follower = null;\r\n    return this.absoluteEl = null;\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.cacheDimensions = function() {\r\n    var containerRect, follower, isCentered, isHFollowing, isVFollowing, minTravel, naturalRect, parentEl;\r\n    isHFollowing = false;\r\n    isVFollowing = false;\r\n    isCentered = false;\r\n    this.naturalWidth = this.el.width();\r\n    this.resetPosition();\r\n    follower = this.follower;\r\n    naturalRect = this.naturalRect = follower.getBoundingRect(this.el);\r\n    parentEl = this.el.parent();\r\n    this.parentRect = follower.getBoundingRect(parentEl);\r\n    containerRect = this.containerRect = joinRects(follower.getContentRect(parentEl), naturalRect);\r\n    minTravel = follower.minTravel;\r\n    if (follower.containOnNaturalLeft) {\r\n      containerRect.left = naturalRect.left;\r\n    }\r\n    if (follower.containOnNaturalRight) {\r\n      containerRect.right = naturalRect.right;\r\n    }\r\n    if (follower.isHFollowing) {\r\n      if (getRectWidth(containerRect) - getRectWidth(naturalRect) >= minTravel) {\r\n        isCentered = this.el.css('text-align') === 'center';\r\n        isHFollowing = true;\r\n      }\r\n    }\r\n    if (follower.isVFollowing) {\r\n      if (getRectHeight(containerRect) - getRectHeight(naturalRect) >= minTravel) {\r\n        isVFollowing = true;\r\n      }\r\n    }\r\n    this.isHFollowing = isHFollowing;\r\n    this.isVFollowing = isVFollowing;\r\n    return this.isCentered = isCentered;\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.updatePosition = function() {\r\n    this.computePosition();\r\n    return this.assignPosition();\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.resetPosition = function() {\r\n    return this.el.css({\r\n      top: '',\r\n      left: ''\r\n    });\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.computePosition = function() {\r\n    var containerRect, doAbsolute, parentRect, rect, rectWidth, subjectRect, viewportRect, visibleParentRect;\r\n    viewportRect = this.follower.viewportRect;\r\n    parentRect = this.parentRect;\r\n    containerRect = this.containerRect;\r\n    visibleParentRect = intersectRects(viewportRect, parentRect);\r\n    rect = null;\r\n    doAbsolute = false;\r\n    if (visibleParentRect) {\r\n      rect = copyRect(this.naturalRect);\r\n      subjectRect = intersectRects(rect, parentRect);\r\n      if ((this.isCentered && !testRectContains(viewportRect, parentRect)) || (subjectRect && !testRectContains(viewportRect, subjectRect))) {\r\n        doAbsolute = true;\r\n        if (this.isHFollowing) {\r\n          if (this.isCentered) {\r\n            rectWidth = getRectWidth(rect);\r\n            rect.left = (visibleParentRect.left + visibleParentRect.right) / 2 - rectWidth / 2;\r\n            rect.right = rect.left + rectWidth;\r\n          } else {\r\n            if (!hContainRect(rect, viewportRect)) {\r\n              doAbsolute = false;\r\n            }\r\n          }\r\n          if (hContainRect(rect, containerRect)) {\r\n            doAbsolute = false;\r\n          }\r\n        }\r\n        if (this.isVFollowing) {\r\n          if (!vContainRect(rect, viewportRect)) {\r\n            doAbsolute = false;\r\n          }\r\n          if (vContainRect(rect, containerRect)) {\r\n            doAbsolute = false;\r\n          }\r\n        }\r\n        if (!testRectContains(viewportRect, rect)) {\r\n          doAbsolute = false;\r\n        }\r\n      }\r\n    }\r\n    this.rect = rect;\r\n    return this.doAbsolute = doAbsolute;\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.assignPosition = function() {\r\n    var left, top;\r\n    if (this.isEnabled) {\r\n      if (!this.rect) {\r\n        return this.unabsolutize();\r\n      } else if (this.doAbsolute && !this.follower.isForcedRelative) {\r\n        this.absolutize();\r\n        return this.absoluteEl.css({\r\n          top: this.rect.top - this.follower.viewportRect.top + this.follower.scrollbarWidths.top,\r\n          left: this.rect.left - this.follower.viewportRect.left + this.follower.scrollbarWidths.left,\r\n          width: this.isBlock ? this.naturalWidth : ''\r\n        });\r\n      } else {\r\n        top = this.rect.top - this.naturalRect.top;\r\n        left = this.rect.left - this.naturalRect.left;\r\n        this.unabsolutize();\r\n        return this.el.toggleClass('fc-following', Boolean(top || left)).css({\r\n          top: top,\r\n          left: left\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.absolutize = function() {\r\n    if (!this.isAbsolute) {\r\n      if (!this.absoluteEl) {\r\n        this.absoluteEl = this.buildAbsoluteEl();\r\n      }\r\n      this.absoluteEl.appendTo(this.follower.scroller.el);\r\n      this.el.css('visibility', 'hidden');\r\n      return this.isAbsolute = true;\r\n    }\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.unabsolutize = function() {\r\n    if (this.isAbsolute) {\r\n      this.absoluteEl.detach();\r\n      this.el.css('visibility', '');\r\n      return this.isAbsolute = false;\r\n    }\r\n  };\r\n\r\n  ScrollFollowerSprite.prototype.buildAbsoluteEl = function() {\r\n    var el;\r\n    el = this.el.clone().addClass('fc-following');\r\n    el.css({\r\n      'position': 'absolute',\r\n      'z-index': 1000,\r\n      'font-weight': this.el.css('font-weight'),\r\n      'font-size': this.el.css('font-size'),\r\n      'font-family': this.el.css('font-family'),\r\n      'text-decoration': this.el.css('text-decoration'),\r\n      'color': this.el.css('color'),\r\n      'padding-top': this.el.css('padding-top'),\r\n      'padding-bottom': this.el.css('padding-bottom'),\r\n      'padding-left': this.el.css('padding-left'),\r\n      'padding-right': this.el.css('padding-right')\r\n    });\r\n    if (!this.follower.allowPointerEvents) {\r\n      el.css('pointer-events', 'none');\r\n    }\r\n    return el;\r\n  };\r\n\r\n  return ScrollFollowerSprite;\r\n\r\n})();\r\n\r\ncopyRect = function(rect) {\r\n  return {\r\n    left: rect.left,\r\n    right: rect.right,\r\n    top: rect.top,\r\n    bottom: rect.bottom\r\n  };\r\n};\r\n\r\ngetRectWidth = function(rect) {\r\n  return rect.right - rect.left;\r\n};\r\n\r\ngetRectHeight = function(rect) {\r\n  return rect.bottom - rect.top;\r\n};\r\n\r\ntestRectContains = function(rect, innerRect) {\r\n  return testRectHContains(rect, innerRect) && testRectVContains(rect, innerRect);\r\n};\r\n\r\ntestRectHContains = function(rect, innerRect) {\r\n  return innerRect.left >= rect.left && innerRect.right <= rect.right;\r\n};\r\n\r\ntestRectVContains = function(rect, innerRect) {\r\n  return innerRect.top >= rect.top && innerRect.bottom <= rect.bottom;\r\n};\r\n\r\nhContainRect = function(rect, outerRect) {\r\n  if (rect.left < outerRect.left) {\r\n    rect.right = outerRect.left + getRectWidth(rect);\r\n    rect.left = outerRect.left;\r\n    return true;\r\n  } else if (rect.right > outerRect.right) {\r\n    rect.left = outerRect.right - getRectWidth(rect);\r\n    rect.right = outerRect.right;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nvContainRect = function(rect, outerRect) {\r\n  if (rect.top < outerRect.top) {\r\n    rect.bottom = outerRect.top + getRectHeight(rect);\r\n    rect.top = outerRect.top;\r\n    return true;\r\n  } else if (rect.bottom > outerRect.bottom) {\r\n    rect.top = outerRect.bottom - getRectHeight(rect);\r\n    rect.bottom = outerRect.bottom;\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\njoinRects = function(rect1, rect2) {\r\n  return {\r\n    left: Math.min(rect1.left, rect2.left),\r\n    right: Math.max(rect1.right, rect2.right),\r\n    top: Math.min(rect1.top, rect2.top),\r\n    bottom: Math.max(rect1.bottom, rect2.bottom)\r\n  };\r\n};\r\n\r\nCalendarExtension = (function(superClass) {\r\n  extend(CalendarExtension, superClass);\r\n\r\n  function CalendarExtension() {\r\n    return CalendarExtension.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  CalendarExtension.prototype.resourceManager = null;\r\n\r\n  CalendarExtension.prototype.initialize = function() {\r\n    return this.resourceManager = new ResourceManager(this);\r\n  };\r\n\r\n  CalendarExtension.prototype.instantiateView = function(viewType) {\r\n    var spec, viewClass;\r\n    spec = this.getViewSpec(viewType);\r\n    viewClass = spec['class'];\r\n    if (this.opt('resources') && spec.options.resources !== false) {\r\n      if (spec.queryResourceClass) {\r\n        viewClass = spec.queryResourceClass(spec) || viewClass;\r\n      } else if (spec.resourceClass) {\r\n        viewClass = spec.resourceClass;\r\n      }\r\n    }\r\n    return new viewClass(this, spec);\r\n  };\r\n\r\n  CalendarExtension.prototype.getResources = function() {\r\n    return Array.prototype.slice.call(this.resourceManager.topLevelResources);\r\n  };\r\n\r\n  CalendarExtension.prototype.addResource = function(resourceInput, scroll) {\r\n    var promise;\r\n    if (scroll == null) {\r\n      scroll = false;\r\n    }\r\n    promise = this.resourceManager.addResource(resourceInput);\r\n    if (scroll && this.view.scrollToResource) {\r\n      promise.then((function(_this) {\r\n        return function(resource) {\r\n          return _this.view.scrollToResource(resource);\r\n        };\r\n      })(this));\r\n    }\r\n  };\r\n\r\n  CalendarExtension.prototype.removeResource = function(idOrResource) {\r\n    return this.resourceManager.removeResource(idOrResource);\r\n  };\r\n\r\n  CalendarExtension.prototype.refetchResources = function() {\r\n    this.resourceManager.clear();\r\n    this.view.flash('initialResources');\r\n  };\r\n\r\n  CalendarExtension.prototype.rerenderResources = function() {\r\n    this.resourceManager.resetCurrentResources();\r\n  };\r\n\r\n  CalendarExtension.prototype.isSpanAllowed = function(span, constraint) {\r\n    var constrainToResourceIds, ref;\r\n    if (typeof constraint === 'object') {\r\n      constrainToResourceIds = this.getEventResourceIds(constraint);\r\n      if (constrainToResourceIds.length && (!span.resourceId || !(ref = span.resourceId, indexOf.call(constrainToResourceIds, ref) >= 0))) {\r\n        return false;\r\n      }\r\n    }\r\n    return CalendarExtension.__super__.isSpanAllowed.apply(this, arguments);\r\n  };\r\n\r\n  CalendarExtension.prototype.mutateSeg = function(span, newProps, largeUnit) {\r\n    var mutatedResourceIds, newResourceId, oldResourceId, ref;\r\n    if (newProps.resourceId) {\r\n      oldResourceId = ((ref = span.resource) != null ? ref.id : void 0) || span.resourceId;\r\n      newResourceId = newProps.resourceId;\r\n      mutatedResourceIds = this.getEventResourceIds(span.event);\r\n      if (oldResourceId !== newResourceId) {\r\n        mutatedResourceIds = mutatedResourceIds.filter(function(resourceId) {\r\n          return resourceId !== oldResourceId && resourceId !== newResourceId;\r\n        });\r\n        mutatedResourceIds.push(newResourceId);\r\n      }\r\n      newProps = $.extend({}, newProps);\r\n      this.setEventResourceIds(newProps, mutatedResourceIds);\r\n    }\r\n    return this.mutateEvent(span.event, newProps, largeUnit);\r\n  };\r\n\r\n  CalendarExtension.prototype.getPeerEvents = function(span, event) {\r\n    var filteredPeerEvents, isPeer, j, k, l, len, len1, len2, newResourceId, newResourceIds, peerEvent, peerEvents, peerResourceId, peerResourceIds;\r\n    peerEvents = CalendarExtension.__super__.getPeerEvents.apply(this, arguments);\r\n    newResourceIds = span.resourceId ? [span.resourceId] : event ? this.getEventResourceIds(event) : [];\r\n    filteredPeerEvents = [];\r\n    for (j = 0, len = peerEvents.length; j < len; j++) {\r\n      peerEvent = peerEvents[j];\r\n      isPeer = false;\r\n      peerResourceIds = this.getEventResourceIds(peerEvent);\r\n      if (!peerResourceIds.length || !newResourceIds.length) {\r\n        isPeer = true;\r\n      } else {\r\n        for (k = 0, len1 = peerResourceIds.length; k < len1; k++) {\r\n          peerResourceId = peerResourceIds[k];\r\n          for (l = 0, len2 = newResourceIds.length; l < len2; l++) {\r\n            newResourceId = newResourceIds[l];\r\n            if (newResourceId === peerResourceId) {\r\n              isPeer = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (isPeer) {\r\n        filteredPeerEvents.push(peerEvent);\r\n      }\r\n    }\r\n    return filteredPeerEvents;\r\n  };\r\n\r\n  CalendarExtension.prototype.spanContainsSpan = function(outerSpan, innerSpan) {\r\n    if (outerSpan.resourceId && outerSpan.resourceId !== innerSpan.resourceId) {\r\n      return false;\r\n    } else {\r\n      return CalendarExtension.__super__.spanContainsSpan.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  CalendarExtension.prototype.getCurrentBusinessHourEvents = function(wholeDay) {\r\n    var allEvents, anyCustomBusinessHours, event, events, flatResources, j, k, l, len, len1, len2, resource;\r\n    flatResources = this.resourceManager.getFlatResources();\r\n    anyCustomBusinessHours = false;\r\n    for (j = 0, len = flatResources.length; j < len; j++) {\r\n      resource = flatResources[j];\r\n      if (resource.businessHours) {\r\n        anyCustomBusinessHours = true;\r\n      }\r\n    }\r\n    if (anyCustomBusinessHours) {\r\n      allEvents = [];\r\n      for (k = 0, len1 = flatResources.length; k < len1; k++) {\r\n        resource = flatResources[k];\r\n        events = this.computeBusinessHourEvents(wholeDay, resource.businessHours || this.opt('businessHours'));\r\n        for (l = 0, len2 = events.length; l < len2; l++) {\r\n          event = events[l];\r\n          event.resourceId = resource.id;\r\n          allEvents.push(event);\r\n        }\r\n      }\r\n      return allEvents;\r\n    } else {\r\n      return CalendarExtension.__super__.getCurrentBusinessHourEvents.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  CalendarExtension.prototype.buildSelectSpan = function(startInput, endInput, resourceId) {\r\n    var span;\r\n    span = CalendarExtension.__super__.buildSelectSpan.apply(this, arguments);\r\n    if (resourceId) {\r\n      span.resourceId = resourceId;\r\n    }\r\n    return span;\r\n  };\r\n\r\n  CalendarExtension.prototype.getResourceById = function(id) {\r\n    return this.resourceManager.getResourceById(id);\r\n  };\r\n\r\n  CalendarExtension.prototype.normalizeEvent = function(event) {\r\n    CalendarExtension.__super__.normalizeEvent.apply(this, arguments);\r\n    if (event.resourceId == null) {\r\n      event.resourceId = null;\r\n    }\r\n    return event.resourceIds != null ? event.resourceIds : event.resourceIds = null;\r\n  };\r\n\r\n  CalendarExtension.prototype.getEventResourceId = function(event) {\r\n    return this.getEventResourceIds(event)[0];\r\n  };\r\n\r\n  CalendarExtension.prototype.getEventResourceIds = function(event) {\r\n    var j, len, normalResourceId, normalResourceIds, ref, ref1, ref2, resourceId;\r\n    resourceId = String((ref = (ref1 = event[this.getEventResourceField()]) != null ? ref1 : event.resourceId) != null ? ref : '');\r\n    if (resourceId) {\r\n      return [resourceId];\r\n    } else if (event.resourceIds) {\r\n      normalResourceIds = [];\r\n      ref2 = event.resourceIds;\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        resourceId = ref2[j];\r\n        normalResourceId = String(resourceId != null ? resourceId : '');\r\n        if (normalResourceId) {\r\n          normalResourceIds.push(normalResourceId);\r\n        }\r\n      }\r\n      return normalResourceIds;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  CalendarExtension.prototype.setEventResourceId = function(event, resourceId) {\r\n    return this.setEventResourceIds(event, resourceId ? [resourceId] : []);\r\n  };\r\n\r\n  CalendarExtension.prototype.setEventResourceIds = function(event, resourceIds) {\r\n    event[this.getEventResourceField()] = resourceIds.length === 1 ? resourceIds[0] : null;\r\n    return event.resourceIds = resourceIds.length > 1 ? resourceIds : null;\r\n  };\r\n\r\n  CalendarExtension.prototype.getEventResourceField = function() {\r\n    return this.opt('eventResourceField') || 'resourceId';\r\n  };\r\n\r\n  CalendarExtension.prototype.getResourceEvents = function(idOrResource) {\r\n    var resource;\r\n    resource = typeof idOrResource === 'object' ? idOrResource : this.getResourceById(idOrResource);\r\n    if (resource) {\r\n      return this.clientEvents((function(_this) {\r\n        return function(event) {\r\n          return $.inArray(resource.id, _this.getEventResourceIds(event)) !== -1;\r\n        };\r\n      })(this));\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  CalendarExtension.prototype.getEventResource = function(idOrEvent) {\r\n    return this.getEventResources(idOrEvent)[0];\r\n  };\r\n\r\n  CalendarExtension.prototype.getEventResources = function(idOrEvent) {\r\n    var event, j, len, ref, resource, resourceId, resources;\r\n    event = typeof idOrEvent === 'object' ? idOrEvent : this.clientEvents(idOrEvent)[0];\r\n    resources = [];\r\n    if (event) {\r\n      ref = this.getEventResourceIds(event);\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        resourceId = ref[j];\r\n        resource = this.getResourceById(resourceId);\r\n        if (resource) {\r\n          resources.push(resource);\r\n        }\r\n      }\r\n    }\r\n    return resources;\r\n  };\r\n\r\n  return CalendarExtension;\r\n\r\n})(Calendar);\r\n\r\nCalendar.prototype = CalendarExtension.prototype;\r\n\r\norigSetElement = View.prototype.setElement;\r\n\r\norigRemoveElement = View.prototype.removeElement;\r\n\r\norigOnBaseRender = View.prototype.onBaseRender;\r\n\r\nCalendar.defaults.refetchResourcesOnNavigate = false;\r\n\r\nView.prototype.canHandleSpecificResources = false;\r\n\r\nView.prototype.isDestroying = false;\r\n\r\nView.prototype.setElement = function() {\r\n  origSetElement.apply(this, arguments);\r\n  return this.watchResources();\r\n};\r\n\r\nView.prototype.removeElement = function() {\r\n  this.isDestroying = true;\r\n  this.unwatchResources();\r\n  origRemoveElement.apply(this, arguments);\r\n  return this.isDestroying = false;\r\n};\r\n\r\nView.prototype.onBaseRender = function() {\r\n  processLicenseKey(this.calendar.opt('schedulerLicenseKey'), this.el);\r\n  return origOnBaseRender.apply(this, arguments);\r\n};\r\n\r\nView.prototype.watchResources = function() {\r\n  var bindingDepNames, initialDepNames;\r\n  initialDepNames = [];\r\n  bindingDepNames = ['initialResources'];\r\n  if (this.opt('refetchResourcesOnNavigate')) {\r\n    initialDepNames.push('dateProfile');\r\n  }\r\n  if (this.opt('filterResourcesWithEvents')) {\r\n    bindingDepNames.push('currentEvents');\r\n  }\r\n  this.watch('initialResources', initialDepNames, (function(_this) {\r\n    return function(deps) {\r\n      return _this.getInitialResources(deps.dateProfile);\r\n    };\r\n  })(this));\r\n  return this.watch('bindingResources', bindingDepNames, (function(_this) {\r\n    return function(deps) {\r\n      _this.bindResourceChanges(deps.currentEvents);\r\n      _this.setResources(deps.initialResources, deps.currentEvents);\r\n    };\r\n  })(this), (function(_this) {\r\n    return function() {\r\n      _this.unbindResourceChanges();\r\n      _this.unsetResources();\r\n    };\r\n  })(this));\r\n};\r\n\r\nView.prototype.unwatchResources = function() {\r\n  this.unwatch('initialResources');\r\n  return this.unwatch('bindingResources');\r\n};\r\n\r\nView.prototype.getInitialResources = function(dateProfile) {\r\n  if (dateProfile) {\r\n    return this.calendar.resourceManager.getResources(dateProfile.activeRange.start, dateProfile.activeRange.end);\r\n  } else {\r\n    return this.calendar.resourceManager.getResources();\r\n  }\r\n};\r\n\r\nView.prototype.bindResourceChanges = function(currentEvents) {\r\n  return this.listenTo(this.calendar.resourceManager, {\r\n    set: (function(_this) {\r\n      return function(resources) {\r\n        return _this.setResources(resources, currentEvents);\r\n      };\r\n    })(this),\r\n    unset: (function(_this) {\r\n      return function() {\r\n        return _this.unsetResources();\r\n      };\r\n    })(this),\r\n    reset: (function(_this) {\r\n      return function(resources) {\r\n        return _this.resetResources(resources, currentEvents);\r\n      };\r\n    })(this),\r\n    add: (function(_this) {\r\n      return function(resource, allResources) {\r\n        return _this.addResource(resource, allResources, currentEvents);\r\n      };\r\n    })(this),\r\n    remove: (function(_this) {\r\n      return function(resource, allResources) {\r\n        return _this.removeResource(resource, allResources, currentEvents);\r\n      };\r\n    })(this)\r\n  });\r\n};\r\n\r\nView.prototype.unbindResourceChanges = function() {\r\n  return this.stopListeningTo(this.calendar.resourceManager);\r\n};\r\n\r\nView.watch('displayingEvents', ['displayingDates', 'hasEvents', 'currentResources'], function(deps) {\r\n  return this.requestEventsRender(this.get('currentEvents'));\r\n}, function() {\r\n  return this.requestEventsUnrender();\r\n});\r\n\r\nView.prototype.setResources = function(resources, currentEvents) {\r\n  if (currentEvents) {\r\n    resources = this.filterResourcesWithEvents(resources, currentEvents);\r\n  }\r\n  this.set('currentResources', resources);\r\n  this.set('hasResources', true);\r\n  return this.handleResourcesSet(resources);\r\n};\r\n\r\nView.prototype.unsetResources = function() {\r\n  this.unset('currentResources');\r\n  this.unset('hasResources');\r\n  return this.handleResourcesUnset();\r\n};\r\n\r\nView.prototype.resetResources = function(resources, currentEvents) {\r\n  this.startBatchRender();\r\n  this.unsetResources();\r\n  this.setResources(resources, currentEvents);\r\n  return this.stopBatchRender();\r\n};\r\n\r\nView.prototype.addResource = function(resource, allResources, currentEvents) {\r\n  var a;\r\n  if (!this.canHandleSpecificResources) {\r\n    return this.resetResources(allResources, currentEvents);\r\n  }\r\n  if (currentEvents) {\r\n    a = this.filterResourcesWithEvents([resource], currentEvents);\r\n    if (!a.length) {\r\n      resource = null;\r\n    }\r\n  }\r\n  if (resource) {\r\n    this.set('currentResources', allResources);\r\n    return this.handleResourceAdd(resource);\r\n  }\r\n};\r\n\r\nView.prototype.removeResource = function(resource, allResources, currentEvents) {\r\n  if (!this.canHandleSpecificResources) {\r\n    return this.resetResources(allResources, currentEvents);\r\n  }\r\n  this.set('currentResources', allResources);\r\n  return this.handleResourceRemove(resource);\r\n};\r\n\r\nView.prototype.handleResourcesSet = function(resources) {};\r\n\r\nView.prototype.handleResourcesUnset = function(resources) {};\r\n\r\nView.prototype.handleResourceAdd = function(resource) {};\r\n\r\nView.prototype.handleResourceRemove = function(resource) {};\r\n\r\nView.prototype.filterResourcesWithEvents = function(resources, events) {\r\n  var event, j, k, len, len1, ref, resourceId, resourceIdHits;\r\n  resourceIdHits = {};\r\n  for (j = 0, len = events.length; j < len; j++) {\r\n    event = events[j];\r\n    ref = this.calendar.getEventResourceIds(event);\r\n    for (k = 0, len1 = ref.length; k < len1; k++) {\r\n      resourceId = ref[k];\r\n      resourceIdHits[resourceId] = true;\r\n    }\r\n  }\r\n  return _filterResourcesWithEvents(resources, resourceIdHits);\r\n};\r\n\r\n_filterResourcesWithEvents = function(sourceResources, resourceIdHits) {\r\n  var filteredChildren, filteredResource, filteredResources, j, len, sourceResource;\r\n  filteredResources = [];\r\n  for (j = 0, len = sourceResources.length; j < len; j++) {\r\n    sourceResource = sourceResources[j];\r\n    if (sourceResource.children.length) {\r\n      filteredChildren = _filterResourcesWithEvents(sourceResource.children, resourceIdHits);\r\n      if (filteredChildren.length || resourceIdHits[sourceResource.id]) {\r\n        filteredResource = createObject(sourceResource);\r\n        filteredResource.children = filteredChildren;\r\n        filteredResources.push(filteredResource);\r\n      }\r\n    } else {\r\n      if (resourceIdHits[sourceResource.id]) {\r\n        filteredResources.push(sourceResource);\r\n      }\r\n    }\r\n  }\r\n  return filteredResources;\r\n};\r\n\r\norigGetSegCustomClasses = Grid.prototype.getSegCustomClasses;\r\n\r\norigGetSegDefaultBackgroundColor = Grid.prototype.getSegDefaultBackgroundColor;\r\n\r\norigGetSegDefaultBorderColor = Grid.prototype.getSegDefaultBorderColor;\r\n\r\norigGetSegDefaultTextColor = Grid.prototype.getSegDefaultTextColor;\r\n\r\nGrid.prototype.getSegCustomClasses = function(seg) {\r\n  var classes, j, len, ref, resource;\r\n  classes = origGetSegCustomClasses.apply(this, arguments);\r\n  ref = this.getSegResources(seg);\r\n  for (j = 0, len = ref.length; j < len; j++) {\r\n    resource = ref[j];\r\n    classes = classes.concat(resource.eventClassName || []);\r\n  }\r\n  return classes;\r\n};\r\n\r\nGrid.prototype.getSegDefaultBackgroundColor = function(seg) {\r\n  var currentResource, j, len, resources, val;\r\n  resources = this.getSegResources(seg);\r\n  for (j = 0, len = resources.length; j < len; j++) {\r\n    currentResource = resources[j];\r\n    while (currentResource) {\r\n      val = currentResource.eventBackgroundColor || currentResource.eventColor;\r\n      if (val) {\r\n        return val;\r\n      }\r\n      currentResource = currentResource._parent;\r\n    }\r\n  }\r\n  return origGetSegDefaultBackgroundColor.apply(this, arguments);\r\n};\r\n\r\nGrid.prototype.getSegDefaultBorderColor = function(seg) {\r\n  var currentResource, j, len, resources, val;\r\n  resources = this.getSegResources(seg);\r\n  for (j = 0, len = resources.length; j < len; j++) {\r\n    currentResource = resources[j];\r\n    while (currentResource) {\r\n      val = currentResource.eventBorderColor || currentResource.eventColor;\r\n      if (val) {\r\n        return val;\r\n      }\r\n      currentResource = currentResource._parent;\r\n    }\r\n  }\r\n  return origGetSegDefaultBorderColor.apply(this, arguments);\r\n};\r\n\r\nGrid.prototype.getSegDefaultTextColor = function(seg) {\r\n  var currentResource, j, len, resources, val;\r\n  resources = this.getSegResources(seg);\r\n  for (j = 0, len = resources.length; j < len; j++) {\r\n    currentResource = resources[j];\r\n    while (currentResource) {\r\n      val = currentResource.eventTextColor;\r\n      if (val) {\r\n        return val;\r\n      }\r\n      currentResource = currentResource._parent;\r\n    }\r\n  }\r\n  return origGetSegDefaultTextColor.apply(this, arguments);\r\n};\r\n\r\nGrid.prototype.getSegResources = function(seg) {\r\n  if (seg.resource) {\r\n    return [seg.resource];\r\n  } else {\r\n    return this.view.calendar.getEventResources(seg.event);\r\n  }\r\n};\r\n\r\nResourceManager = (function(superClass) {\r\n  extend(ResourceManager, superClass);\r\n\r\n  ResourceManager.mixin(EmitterMixin);\r\n\r\n  ResourceManager.resourceGuid = 1;\r\n\r\n  ResourceManager.ajaxDefaults = {\r\n    dataType: 'json',\r\n    cache: false\r\n  };\r\n\r\n  ResourceManager.prototype.calendar = null;\r\n\r\n  ResourceManager.prototype.fetchId = 0;\r\n\r\n  ResourceManager.prototype.topLevelResources = null;\r\n\r\n  ResourceManager.prototype.resourcesById = null;\r\n\r\n  ResourceManager.prototype.fetching = null;\r\n\r\n  ResourceManager.prototype.currentStart = null;\r\n\r\n  ResourceManager.prototype.currentEnd = null;\r\n\r\n  function ResourceManager(calendar1) {\r\n    this.calendar = calendar1;\r\n    this.initializeCache();\r\n  }\r\n\r\n\r\n  /*\r\n  \tLike fetchResources, but won't refetch if already fetched.\r\n   */\r\n\r\n  ResourceManager.prototype.getResources = function(start, end) {\r\n    var isSameRange;\r\n    isSameRange = (!start && !this.currentStart) || (start && this.currentStart && start.isSame(this.currentStart) && end.isSame(this.currentEnd));\r\n    if (!this.fetching || !isSameRange) {\r\n      return this.fetchResources(start, end);\r\n    } else {\r\n      return this.fetching;\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tWill always fetch, even if done previously.\r\n  \tAccepts optional chrono-related params to pass on to the raw resource sources.\r\n  \tReturns a promise.\r\n   */\r\n\r\n  ResourceManager.prototype.fetchResources = function(start, end) {\r\n    var currentFetchId;\r\n    currentFetchId = (this.fetchId += 1);\r\n    return this.fetching = Promise.construct((function(_this) {\r\n      return function(resolve, reject) {\r\n        return _this.fetchResourceInputs(function(resourceInputs) {\r\n          if (currentFetchId === _this.fetchId) {\r\n            _this.setResources(resourceInputs);\r\n            return resolve(_this.topLevelResources);\r\n          } else {\r\n            return reject();\r\n          }\r\n        }, start, end);\r\n      };\r\n    })(this));\r\n  };\r\n\r\n\r\n  /*\r\n  \tAccepts optional chrono-related params to pass on to the raw resource sources.\r\n  \tCalls callback when done.\r\n   */\r\n\r\n  ResourceManager.prototype.fetchResourceInputs = function(callback, start, end) {\r\n    var calendar, requestParams, source, timezone;\r\n    calendar = this.calendar;\r\n    source = calendar.opt('resources');\r\n    timezone = calendar.opt('timezone');\r\n    if ($.type(source) === 'string') {\r\n      source = {\r\n        url: source\r\n      };\r\n    }\r\n    switch ($.type(source)) {\r\n      case 'function':\r\n        this.calendar.pushLoading();\r\n        return source((function(_this) {\r\n          return function(resourceInputs) {\r\n            _this.calendar.popLoading();\r\n            return callback(resourceInputs);\r\n          };\r\n        })(this), start, end, calendar.opt('timezone'));\r\n      case 'object':\r\n        calendar.pushLoading();\r\n        requestParams = {};\r\n        if (start && end) {\r\n          requestParams[calendar.opt('startParam')] = start.format();\r\n          requestParams[calendar.opt('endParam')] = end.format();\r\n          if (timezone && timezone !== 'local') {\r\n            requestParams[calendar.opt('timezoneParam')] = timezone;\r\n          }\r\n        }\r\n        return $.ajax($.extend({\r\n          data: requestParams\r\n        }, ResourceManager.ajaxDefaults, source)).then((function(_this) {\r\n          return function(resourceInputs) {\r\n            calendar.popLoading();\r\n            return callback(resourceInputs);\r\n          };\r\n        })(this));\r\n      case 'array':\r\n        return callback(source);\r\n      default:\r\n        return callback([]);\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.getResourceById = function(id) {\r\n    return this.resourcesById[id];\r\n  };\r\n\r\n  ResourceManager.prototype.getFlatResources = function() {\r\n    var id, results;\r\n    results = [];\r\n    for (id in this.resourcesById) {\r\n      results.push(this.resourcesById[id]);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  ResourceManager.prototype.initializeCache = function() {\r\n    this.topLevelResources = [];\r\n    return this.resourcesById = {};\r\n  };\r\n\r\n  ResourceManager.prototype.setResources = function(resourceInputs) {\r\n    var j, len, resource, resourceInput, resources, validResources, wasSet;\r\n    wasSet = Boolean(this.topLevelResources);\r\n    this.initializeCache();\r\n    resources = (function() {\r\n      var j, len, results;\r\n      results = [];\r\n      for (j = 0, len = resourceInputs.length; j < len; j++) {\r\n        resourceInput = resourceInputs[j];\r\n        results.push(this.buildResource(resourceInput));\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    validResources = (function() {\r\n      var j, len, results;\r\n      results = [];\r\n      for (j = 0, len = resources.length; j < len; j++) {\r\n        resource = resources[j];\r\n        if (this.addResourceToIndex(resource)) {\r\n          results.push(resource);\r\n        }\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    for (j = 0, len = validResources.length; j < len; j++) {\r\n      resource = validResources[j];\r\n      this.addResourceToTree(resource);\r\n    }\r\n    if (wasSet) {\r\n      this.trigger('reset', this.topLevelResources);\r\n    } else {\r\n      this.trigger('set', this.topLevelResources);\r\n    }\r\n    return this.calendar.publiclyTrigger('resourcesSet', null, this.topLevelResources);\r\n  };\r\n\r\n  ResourceManager.prototype.resetCurrentResources = function() {\r\n    if (this.topLevelResources) {\r\n      return this.trigger('reset', this.topLevelResources);\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.clear = function() {\r\n    this.topLevelResources = null;\r\n    return this.fetching = null;\r\n  };\r\n\r\n  ResourceManager.prototype.addResource = function(resourceInput) {\r\n    if (this.fetching) {\r\n      return this.fetching.then((function(_this) {\r\n        return function() {\r\n          var resource;\r\n          resource = _this.buildResource(resourceInput);\r\n          if (_this.addResourceToIndex(resource)) {\r\n            _this.addResourceToTree(resource);\r\n            _this.trigger('add', resource, _this.topLevelResources);\r\n            return resource;\r\n          } else {\r\n            return false;\r\n          }\r\n        };\r\n      })(this));\r\n    } else {\r\n      return Promise.reject();\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.addResourceToIndex = function(resource) {\r\n    var child, j, len, ref;\r\n    if (this.resourcesById[resource.id]) {\r\n      return false;\r\n    } else {\r\n      this.resourcesById[resource.id] = resource;\r\n      ref = resource.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        this.addResourceToIndex(child);\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.addResourceToTree = function(resource) {\r\n    var parent, parentId, ref, siblings;\r\n    if (!resource.parent) {\r\n      parentId = String((ref = resource['parentId']) != null ? ref : '');\r\n      if (parentId) {\r\n        parent = this.resourcesById[parentId];\r\n        if (parent) {\r\n          resource.parent = parent;\r\n          siblings = parent.children;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        siblings = this.topLevelResources;\r\n      }\r\n      siblings.push(resource);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  ResourceManager.prototype.removeResource = function(idOrResource) {\r\n    var id;\r\n    id = typeof idOrResource === 'object' ? idOrResource.id : idOrResource;\r\n    if (this.fetching) {\r\n      return this.fetching.then((function(_this) {\r\n        return function() {\r\n          var resource;\r\n          resource = _this.removeResourceFromIndex(id);\r\n          if (resource) {\r\n            _this.removeResourceFromTree(resource);\r\n            _this.trigger('remove', resource, _this.topLevelResources);\r\n          }\r\n          return resource;\r\n        };\r\n      })(this));\r\n    } else {\r\n      return Promise.reject();\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.removeResourceFromIndex = function(resourceId) {\r\n    var child, j, len, ref, resource;\r\n    resource = this.resourcesById[resourceId];\r\n    if (resource) {\r\n      delete this.resourcesById[resourceId];\r\n      ref = resource.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        this.removeResourceFromIndex(child.id);\r\n      }\r\n      return resource;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  ResourceManager.prototype.removeResourceFromTree = function(resource, siblings) {\r\n    var i, j, len, sibling;\r\n    if (siblings == null) {\r\n      siblings = this.topLevelResources;\r\n    }\r\n    for (i = j = 0, len = siblings.length; j < len; i = ++j) {\r\n      sibling = siblings[i];\r\n      if (sibling === resource) {\r\n        resource.parent = null;\r\n        siblings.splice(i, 1);\r\n        return true;\r\n      }\r\n      if (this.removeResourceFromTree(resource, sibling.children)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  ResourceManager.prototype.buildResource = function(resourceInput) {\r\n    var child, childInput, rawClassName, ref, resource;\r\n    resource = $.extend({}, resourceInput);\r\n    resource.id = String((ref = resourceInput.id) != null ? ref : '_fc' + ResourceManager.resourceGuid++);\r\n    rawClassName = resourceInput.eventClassName;\r\n    resource.eventClassName = (function() {\r\n      switch ($.type(rawClassName)) {\r\n        case 'string':\r\n          return rawClassName.split(/\\s+/);\r\n        case 'array':\r\n          return rawClassName;\r\n        default:\r\n          return [];\r\n      }\r\n    })();\r\n    resource.children = (function() {\r\n      var j, len, ref1, ref2, results;\r\n      ref2 = (ref1 = resourceInput.children) != null ? ref1 : [];\r\n      results = [];\r\n      for (j = 0, len = ref2.length; j < len; j++) {\r\n        childInput = ref2[j];\r\n        child = this.buildResource(childInput);\r\n        child.parent = resource;\r\n        results.push(child);\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    return resource;\r\n  };\r\n\r\n  return ResourceManager;\r\n\r\n})(Class);\r\n\r\nCalendar.defaults.filterResourcesWithEvents = false;\r\n\r\n\r\n/*\r\nA view that structurally distinguishes events by resource\r\n */\r\n\r\nResourceViewMixin = {\r\n  isResourcesRendered: false,\r\n  resourceTextFunc: null,\r\n  setElement: function() {\r\n    View.prototype.setElement.apply(this, arguments);\r\n    this.watch('displayingResources', ['hasResources'], (function(_this) {\r\n      return function() {\r\n        return _this.requestResourcesRender(_this.get('currentResources'));\r\n      };\r\n    })(this), (function(_this) {\r\n      return function() {\r\n        return _this.requestResourcesUnrender();\r\n      };\r\n    })(this));\r\n    return this.watch('displayingEvents', ['displayingDates', 'hasEvents', 'displayingResources'], (function(_this) {\r\n      return function() {\r\n        return _this.requestEventsRender(_this.get('currentEvents'));\r\n      };\r\n    })(this), (function(_this) {\r\n      return function() {\r\n        return _this.requestEventsUnrender();\r\n      };\r\n    })(this));\r\n  },\r\n  queryScroll: function() {\r\n    var scroll;\r\n    scroll = View.prototype.queryScroll.apply(this, arguments);\r\n    if (this.isResourcesRendered) {\r\n      $.extend(scroll, this.queryResourceScroll());\r\n    }\r\n    return scroll;\r\n  },\r\n  applyScroll: function(scroll) {\r\n    View.prototype.applyScroll.apply(this, arguments);\r\n    if (this.isResourcesRendered) {\r\n      return this.applyResourceScroll(scroll);\r\n    }\r\n  },\r\n  queryResourceScroll: function() {\r\n    return {};\r\n  },\r\n  applyResourceScroll: function() {},\r\n  bindBaseRenderHandlers: function() {\r\n    var isDatesRendered, isResourcesRendered;\r\n    isResourcesRendered = false;\r\n    isDatesRendered = false;\r\n    this.on('resourcesRendered.baseHandler', function() {\r\n      if (!isResourcesRendered) {\r\n        isResourcesRendered = true;\r\n        if (isDatesRendered) {\r\n          return this.onBaseRender();\r\n        }\r\n      }\r\n    });\r\n    this.on('datesRendered.baseHandler', function() {\r\n      if (!isDatesRendered) {\r\n        isDatesRendered = true;\r\n        if (isResourcesRendered) {\r\n          return this.onBaseRender();\r\n        }\r\n      }\r\n    });\r\n    this.on('before:resourcesUnrendered.baseHandler', function() {\r\n      if (isResourcesRendered) {\r\n        return isResourcesRendered = false;\r\n      }\r\n    });\r\n    return this.on('before:datesUnrendered.baseHandler', function() {\r\n      if (isDatesRendered) {\r\n        isDatesRendered = false;\r\n        return this.onBeforeBaseUnrender();\r\n      }\r\n    });\r\n  },\r\n  handleResourcesSet: function(resources) {},\r\n  handleResourcesUnset: function() {},\r\n  handleResourceAdd: function(resource) {\r\n    return this.requestResourceRender(resource);\r\n  },\r\n  handleResourceRemove: function(resource) {\r\n    return this.requestResourceUnrender(resource);\r\n  },\r\n  requestResourcesRender: function(resources) {\r\n    return this.renderQueue.queue((function(_this) {\r\n      return function() {\r\n        return _this.executeResourcesRender(resources);\r\n      };\r\n    })(this), 'resource', 'init');\r\n  },\r\n  requestResourcesUnrender: function() {\r\n    return this.renderQueue.queue((function(_this) {\r\n      return function() {\r\n        return _this.executeResourcesUnrender();\r\n      };\r\n    })(this), 'resource', 'destroy');\r\n  },\r\n  requestResourceRender: function(resource) {\r\n    return this.renderQueue.queue((function(_this) {\r\n      return function() {\r\n        return _this.executeResourceRender(resource);\r\n      };\r\n    })(this), 'resource', 'add');\r\n  },\r\n  requestResourceUnrender: function(resource) {\r\n    return this.renderQueue.queue((function(_this) {\r\n      return function() {\r\n        return _this.executeResourceUnrender(resource);\r\n      };\r\n    })(this), 'resource', 'remove');\r\n  },\r\n  executeResourcesRender: function(resources) {\r\n    this.renderResources(resources);\r\n    this.isResourcesRendered = true;\r\n    return this.trigger('resourcesRendered');\r\n  },\r\n  executeResourcesUnrender: function() {\r\n    this.trigger('before:resourcesUnrendered');\r\n    this.unrenderResources();\r\n    return this.isResourcesRendered = false;\r\n  },\r\n  executeResourceRender: function(resource) {\r\n    return this.renderResource(resource);\r\n  },\r\n  executeResourceUnrender: function(resource) {\r\n    return this.unrenderResource(resource);\r\n  },\r\n  renderResources: function(resources) {},\r\n  unrenderResources: function() {},\r\n  renderResource: function(resource) {},\r\n  unrenderResource: function(resource) {},\r\n  isEventDraggable: function(event) {\r\n    return this.isEventResourceEditable(event) || View.prototype.isEventDraggable.call(this, event);\r\n  },\r\n  isEventResourceEditable: function(event) {\r\n    var ref, ref1, ref2;\r\n    return (ref = (ref1 = (ref2 = event.resourceEditable) != null ? ref2 : (event.source || {}).resourceEditable) != null ? ref1 : this.opt('eventResourceEditable')) != null ? ref : this.isEventGenerallyEditable(event);\r\n  },\r\n  getResourceText: function(resource) {\r\n    return this.getResourceTextFunc()(resource);\r\n  },\r\n  getResourceTextFunc: function() {\r\n    var func;\r\n    if (this.resourceTextFunc) {\r\n      return this.resourceTextFunc;\r\n    } else {\r\n      func = this.opt('resourceText');\r\n      if (typeof func !== 'function') {\r\n        func = function(resource) {\r\n          return resource.title || resource.id;\r\n        };\r\n      }\r\n      return this.resourceTextFunc = func;\r\n    }\r\n  },\r\n  triggerDayClick: function(span, dayEl, ev) {\r\n    var resourceManager;\r\n    resourceManager = this.calendar.resourceManager;\r\n    return this.publiclyTrigger('dayClick', dayEl, this.calendar.applyTimezone(span.start), ev, this, resourceManager.getResourceById(span.resourceId));\r\n  },\r\n  triggerSelect: function(span, ev) {\r\n    var resourceManager;\r\n    resourceManager = this.calendar.resourceManager;\r\n    return this.publiclyTrigger('select', null, this.calendar.applyTimezone(span.start), this.calendar.applyTimezone(span.end), ev, this, resourceManager.getResourceById(span.resourceId));\r\n  },\r\n  triggerExternalDrop: function(event, dropLocation, el, ev, ui) {\r\n    this.publiclyTrigger('drop', el[0], dropLocation.start, ev, ui, dropLocation.resourceId);\r\n    if (event) {\r\n      return this.publiclyTrigger('eventReceive', null, event);\r\n    }\r\n  },\r\n\r\n  /* Hacks\r\n  \t * ------------------------------------------------------------------------------------------------------------------\r\n  \tThese triggers usually call mutateEvent with dropLocation, which causes an event modification and rerender.\r\n  \tBut mutateEvent isn't aware of eventResourceField, so it might be setting the wrong property. Workaround.\r\n  \tTODO: normalize somewhere else. maybe make a hook in core.\r\n   */\r\n  reportExternalDrop: function() {\r\n    var dropLocation, meta, otherArgs, ref;\r\n    meta = arguments[0], dropLocation = arguments[1], otherArgs = 3 <= arguments.length ? slice.call(arguments, 2) : [];\r\n    dropLocation = this.normalizeDropLocation(dropLocation);\r\n    return (ref = View.prototype.reportExternalDrop).call.apply(ref, [this, meta, dropLocation].concat(slice.call(otherArgs)));\r\n  },\r\n  normalizeDropLocation: function(dropLocation) {\r\n    var out;\r\n    out = $.extend({}, dropLocation);\r\n    delete out.resourceId;\r\n    this.calendar.setEventResourceId(out, dropLocation.resourceId);\r\n    return out;\r\n  }\r\n};\r\n\r\n\r\n/*\r\nFor vertical resource view.\r\nFor views that rely on grids that render their resources and dates in the same pass.\r\n */\r\n\r\nVertResourceViewMixin = $.extend({}, ResourceViewMixin, {\r\n  setElement: function() {\r\n    var isDisplayingBoth, isDisplayingDatesOnly, needsScroll;\r\n    ResourceViewMixin.setElement.apply(this, arguments);\r\n    isDisplayingDatesOnly = false;\r\n    isDisplayingBoth = false;\r\n    needsScroll = false;\r\n    this.watch('dateProfileOnly', ['dateProfile'], (function(_this) {\r\n      return function() {\r\n        return needsScroll = true;\r\n      };\r\n    })(this));\r\n    this.watch('displayingDatesOnly', ['dateProfile', '?currentResources'], (function(_this) {\r\n      return function(deps) {\r\n        if (!deps.currentResources && !_this.isDestroying) {\r\n          isDisplayingDatesOnly = true;\r\n          return _this.renderQueue.queue(function() {\r\n            _this.executeDateRender(deps.dateProfile, !needsScroll);\r\n            return needsScroll = false;\r\n          }, 'date', 'init');\r\n        }\r\n      };\r\n    })(this), (function(_this) {\r\n      return function() {\r\n        if (isDisplayingDatesOnly) {\r\n          isDisplayingDatesOnly = false;\r\n          return _this.renderQueue.queue(function() {\r\n            return _this.executeDateUnrender();\r\n          }, 'date', 'destroy');\r\n        }\r\n      };\r\n    })(this));\r\n    this.watch('displayingDates', ['dateProfile', 'currentResources'], (function(_this) {\r\n      return function(deps) {\r\n        if (!_this.isDestroying) {\r\n          isDisplayingBoth = true;\r\n          return _this.renderQueue.queue(function() {\r\n            _this.setResourcesOnGrids(deps.currentResources);\r\n            _this.executeDateRender(deps.dateProfile, !needsScroll);\r\n            needsScroll = false;\r\n            return _this.trigger('resourcesRendered');\r\n          }, 'resource', 'init');\r\n        }\r\n      };\r\n    })(this), (function(_this) {\r\n      return function() {\r\n        if (isDisplayingBoth) {\r\n          isDisplayingBoth = false;\r\n          return _this.renderQueue.queue(function() {\r\n            _this.trigger('before:resourcesUnrendered');\r\n            _this.unsetResourcesOnGrids();\r\n            return _this.executeDateUnrender();\r\n          }, 'resource', 'destroy');\r\n        }\r\n      };\r\n    })(this));\r\n    return this.watch('displayingResources', ['displayingDates'], (function(_this) {\r\n      return function() {\r\n        return true;\r\n      };\r\n    })(this));\r\n  },\r\n  setResourcesOnGrids: function(resources) {},\r\n  unsetResourcesOnGrids: function() {}\r\n});\r\n\r\nResourceGridMixin = {\r\n  allowCrossResource: true,\r\n  eventRangeToSpans: function(eventRange, event) {\r\n    var j, len, resourceId, resourceIds, results;\r\n    resourceIds = this.view.calendar.getEventResourceIds(event);\r\n    if (resourceIds.length) {\r\n      results = [];\r\n      for (j = 0, len = resourceIds.length; j < len; j++) {\r\n        resourceId = resourceIds[j];\r\n        results.push($.extend({}, eventRange, {\r\n          resourceId: resourceId\r\n        }));\r\n      }\r\n      return results;\r\n    } else if (FC.isBgEvent(event)) {\r\n      return Grid.prototype.eventRangeToSpans.apply(this, arguments);\r\n    } else {\r\n      return [];\r\n    }\r\n  },\r\n  fabricateHelperEvent: function(eventLocation, seg) {\r\n    var event;\r\n    event = Grid.prototype.fabricateHelperEvent.apply(this, arguments);\r\n    this.view.calendar.setEventResourceId(event, eventLocation.resourceId);\r\n    return event;\r\n  },\r\n  computeEventDrop: function(startSpan, endSpan, event) {\r\n    var dropLocation;\r\n    if (this.view.isEventStartEditable(event)) {\r\n      dropLocation = Grid.prototype.computeEventDrop.apply(this, arguments);\r\n    } else {\r\n      dropLocation = FC.pluckEventDateProps(event);\r\n    }\r\n    if (dropLocation) {\r\n      if (this.view.isEventResourceEditable(event)) {\r\n        dropLocation.resourceId = endSpan.resourceId;\r\n      } else {\r\n        dropLocation.resourceId = startSpan.resourceId;\r\n      }\r\n    }\r\n    return dropLocation;\r\n  },\r\n  computeExternalDrop: function(span, meta) {\r\n    var dropLocation;\r\n    dropLocation = Grid.prototype.computeExternalDrop.apply(this, arguments);\r\n    if (dropLocation) {\r\n      dropLocation.resourceId = span.resourceId;\r\n    }\r\n    return dropLocation;\r\n  },\r\n  computeEventResize: function(type, startSpan, endSpan, event) {\r\n    var resizeLocation;\r\n    if (!this.allowCrossResource && startSpan.resourceId !== endSpan.resourceId) {\r\n      return;\r\n    }\r\n    resizeLocation = Grid.prototype.computeEventResize.apply(this, arguments);\r\n    if (resizeLocation) {\r\n      resizeLocation.resourceId = startSpan.resourceId;\r\n    }\r\n    return resizeLocation;\r\n  },\r\n  computeSelectionSpan: function(startSpan, endSpan) {\r\n    var selectionSpan;\r\n    if (!this.allowCrossResource && startSpan.resourceId !== endSpan.resourceId) {\r\n      return;\r\n    }\r\n    selectionSpan = Grid.prototype.computeSelectionSpan.apply(this, arguments);\r\n    if (selectionSpan) {\r\n      selectionSpan.resourceId = startSpan.resourceId;\r\n    }\r\n    return selectionSpan;\r\n  }\r\n};\r\n\r\n\r\n/*\r\nRequirements:\r\n- must be a Grid\r\n- grid must have a view that's a ResourceView\r\n- DayTableMixin must already be mixed in\r\n */\r\n\r\nResourceDayTableMixin = {\r\n  flattenedResources: null,\r\n  resourceCnt: 0,\r\n  datesAboveResources: false,\r\n  allowCrossResource: false,\r\n  setResources: function(resources) {\r\n    this.flattenedResources = this.flattenResources(resources);\r\n    this.resourceCnt = this.flattenedResources.length;\r\n    return this.updateDayTableCols();\r\n  },\r\n  unsetResources: function() {\r\n    this.flattenedResources = null;\r\n    this.resourceCnt = 0;\r\n    return this.updateDayTableCols();\r\n  },\r\n  flattenResources: function(resources) {\r\n    var orderSpecs, orderVal, res, sortFunc;\r\n    orderVal = this.view.opt('resourceOrder');\r\n    if (orderVal) {\r\n      orderSpecs = parseFieldSpecs(orderVal);\r\n      sortFunc = function(a, b) {\r\n        return compareByFieldSpecs(a, b, orderSpecs);\r\n      };\r\n    } else {\r\n      sortFunc = null;\r\n    }\r\n    res = [];\r\n    this.accumulateResources(resources, sortFunc, res);\r\n    return res;\r\n  },\r\n  accumulateResources: function(resources, sortFunc, res) {\r\n    var j, len, resource, results, sortedResources;\r\n    if (sortFunc) {\r\n      sortedResources = resources.slice(0);\r\n      sortedResources.sort(sortFunc);\r\n    } else {\r\n      sortedResources = resources;\r\n    }\r\n    results = [];\r\n    for (j = 0, len = sortedResources.length; j < len; j++) {\r\n      resource = sortedResources[j];\r\n      res.push(resource);\r\n      results.push(this.accumulateResources(resource.children, sortFunc, res));\r\n    }\r\n    return results;\r\n  },\r\n  updateDayTableCols: function() {\r\n    this.datesAboveResources = this.view.opt('groupByDateAndResource');\r\n    return FC.DayTableMixin.updateDayTableCols.call(this);\r\n  },\r\n  computeColCnt: function() {\r\n    return (this.resourceCnt || 1) * this.daysPerRow;\r\n  },\r\n  getColDayIndex: function(col) {\r\n    if (this.isRTL) {\r\n      col = this.colCnt - 1 - col;\r\n    }\r\n    if (this.datesAboveResources) {\r\n      return Math.floor(col / (this.resourceCnt || 1));\r\n    } else {\r\n      return col % this.daysPerRow;\r\n    }\r\n  },\r\n  getColResource: function(col) {\r\n    return this.flattenedResources[this.getColResourceIndex(col)];\r\n  },\r\n  getColResourceIndex: function(col) {\r\n    if (this.isRTL) {\r\n      col = this.colCnt - 1 - col;\r\n    }\r\n    if (this.datesAboveResources) {\r\n      return col % (this.resourceCnt || 1);\r\n    } else {\r\n      return Math.floor(col / this.daysPerRow);\r\n    }\r\n  },\r\n  indicesToCol: function(resourceIndex, dayIndex) {\r\n    var col;\r\n    col = this.datesAboveResources ? dayIndex * (this.resourceCnt || 1) + resourceIndex : resourceIndex * this.daysPerRow + dayIndex;\r\n    if (this.isRTL) {\r\n      col = this.colCnt - 1 - col;\r\n    }\r\n    return col;\r\n  },\r\n  renderHeadTrHtml: function() {\r\n    if (!this.resourceCnt) {\r\n      return FC.DayTableMixin.renderHeadTrHtml.call(this);\r\n    } else {\r\n      if (this.daysPerRow > 1) {\r\n        if (this.datesAboveResources) {\r\n          return this.renderHeadDateAndResourceHtml();\r\n        } else {\r\n          return this.renderHeadResourceAndDateHtml();\r\n        }\r\n      } else {\r\n        return this.renderHeadResourceHtml();\r\n      }\r\n    }\r\n  },\r\n  renderHeadResourceHtml: function() {\r\n    var j, len, ref, resource, resourceHtmls;\r\n    resourceHtmls = [];\r\n    ref = this.flattenedResources;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      resource = ref[j];\r\n      resourceHtmls.push(this.renderHeadResourceCellHtml(resource));\r\n    }\r\n    return this.wrapTr(resourceHtmls, 'renderHeadIntroHtml');\r\n  },\r\n  renderHeadResourceAndDateHtml: function() {\r\n    var date, dateHtmls, dayIndex, j, k, len, ref, ref1, resource, resourceHtmls;\r\n    resourceHtmls = [];\r\n    dateHtmls = [];\r\n    ref = this.flattenedResources;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      resource = ref[j];\r\n      resourceHtmls.push(this.renderHeadResourceCellHtml(resource, null, this.daysPerRow));\r\n      for (dayIndex = k = 0, ref1 = this.daysPerRow; k < ref1; dayIndex = k += 1) {\r\n        date = this.dayDates[dayIndex].clone();\r\n        dateHtmls.push(this.renderHeadResourceDateCellHtml(date, resource));\r\n      }\r\n    }\r\n    return this.wrapTr(resourceHtmls, 'renderHeadIntroHtml') + this.wrapTr(dateHtmls, 'renderHeadIntroHtml');\r\n  },\r\n  renderHeadDateAndResourceHtml: function() {\r\n    var date, dateHtmls, dayIndex, j, k, len, ref, ref1, resource, resourceHtmls;\r\n    dateHtmls = [];\r\n    resourceHtmls = [];\r\n    for (dayIndex = j = 0, ref = this.daysPerRow; j < ref; dayIndex = j += 1) {\r\n      date = this.dayDates[dayIndex].clone();\r\n      dateHtmls.push(this.renderHeadDateCellHtml(date, this.resourceCnt));\r\n      ref1 = this.flattenedResources;\r\n      for (k = 0, len = ref1.length; k < len; k++) {\r\n        resource = ref1[k];\r\n        resourceHtmls.push(this.renderHeadResourceCellHtml(resource, date));\r\n      }\r\n    }\r\n    return this.wrapTr(dateHtmls, 'renderHeadIntroHtml') + this.wrapTr(resourceHtmls, 'renderHeadIntroHtml');\r\n  },\r\n  renderHeadResourceCellHtml: function(resource, date, colspan) {\r\n    return '<th class=\"fc-resource-cell\"' + ' data-resource-id=\"' + resource.id + '\"' + (date ? ' data-date=\"' + date.format('YYYY-MM-DD') + '\"' : '') + (colspan > 1 ? ' colspan=\"' + colspan + '\"' : '') + '>' + htmlEscape(this.view.getResourceText(resource)) + '</th>';\r\n  },\r\n  renderHeadResourceDateCellHtml: function(date, resource, colspan) {\r\n    return this.renderHeadDateCellHtml(date, colspan, 'data-resource-id=\"' + resource.id + '\"');\r\n  },\r\n  processHeadResourceEls: function(containerEl) {\r\n    return containerEl.find('.fc-resource-cell').each((function(_this) {\r\n      return function(col, node) {\r\n        var resource;\r\n        if (_this.datesAboveResources) {\r\n          resource = _this.getColResource(col);\r\n        } else {\r\n          resource = _this.flattenedResources[_this.isRTL ? _this.flattenedResources.length - 1 - col : col];\r\n        }\r\n        return _this.view.publiclyTrigger('resourceRender', resource, resource, $(node), $());\r\n      };\r\n    })(this));\r\n  },\r\n  renderBgCellsHtml: function(row) {\r\n    var col, date, htmls, j, ref, resource;\r\n    if (!this.resourceCnt) {\r\n      return FC.DayTableMixin.renderBgCellsHtml.call(this, row);\r\n    } else {\r\n      htmls = [];\r\n      for (col = j = 0, ref = this.colCnt; j < ref; col = j += 1) {\r\n        date = this.getCellDate(row, col);\r\n        resource = this.getColResource(col);\r\n        htmls.push(this.renderResourceBgCellHtml(date, resource));\r\n      }\r\n      return htmls.join('');\r\n    }\r\n  },\r\n  renderResourceBgCellHtml: function(date, resource) {\r\n    return this.renderBgCellHtml(date, 'data-resource-id=\"' + resource.id + '\"');\r\n  },\r\n  wrapTr: function(cellHtmls, introMethodName) {\r\n    if (this.isRTL) {\r\n      cellHtmls.reverse();\r\n      return '<tr>' + cellHtmls.join('') + this[introMethodName]() + '</tr>';\r\n    } else {\r\n      return '<tr>' + this[introMethodName]() + cellHtmls.join('') + '</tr>';\r\n    }\r\n  },\r\n\r\n  /*\r\n  \tIf there are no per-resource business hour definitions, returns null.\r\n  \tOtherwise, returns a list of business hours segs for *every* resource.\r\n   */\r\n  computePerResourceBusinessHourSegs: function(wholeDay) {\r\n    var allSegs, anyCustomBusinessHours, businessHours, event, events, j, k, l, len, len1, len2, ref, ref1, resource, segs;\r\n    if (this.flattenedResources) {\r\n      anyCustomBusinessHours = false;\r\n      ref = this.flattenedResources;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        resource = ref[j];\r\n        if (resource.businessHours) {\r\n          anyCustomBusinessHours = true;\r\n        }\r\n      }\r\n      if (anyCustomBusinessHours) {\r\n        allSegs = [];\r\n        ref1 = this.flattenedResources;\r\n        for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n          resource = ref1[k];\r\n          businessHours = resource.businessHours || this.view.calendar.opt('businessHours');\r\n          events = this.buildBusinessHourEvents(wholeDay, businessHours);\r\n          for (l = 0, len2 = events.length; l < len2; l++) {\r\n            event = events[l];\r\n            event.resourceId = resource.id;\r\n          }\r\n          segs = this.eventsToSegs(events);\r\n          allSegs.push.apply(allSegs, segs);\r\n        }\r\n        return allSegs;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nResourceDayGrid = (function(superClass) {\r\n  extend(ResourceDayGrid, superClass);\r\n\r\n  function ResourceDayGrid() {\r\n    return ResourceDayGrid.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceDayGrid.mixin(ResourceGridMixin);\r\n\r\n  ResourceDayGrid.mixin(ResourceDayTableMixin);\r\n\r\n  ResourceDayGrid.prototype.getHitSpan = function(hit) {\r\n    var span;\r\n    span = ResourceDayGrid.__super__.getHitSpan.apply(this, arguments);\r\n    if (this.resourceCnt) {\r\n      span.resourceId = this.getColResource(hit.col).id;\r\n    }\r\n    return span;\r\n  };\r\n\r\n  ResourceDayGrid.prototype.spanToSegs = function(span) {\r\n    var copy, genericSegs, j, k, l, len, len1, ref, resourceCnt, resourceIndex, resourceObj, resourceSegs, seg;\r\n    resourceCnt = this.resourceCnt;\r\n    genericSegs = this.datesAboveResources ? this.sliceRangeByDay(span) : this.sliceRangeByRow(span);\r\n    if (!resourceCnt) {\r\n      for (j = 0, len = genericSegs.length; j < len; j++) {\r\n        seg = genericSegs[j];\r\n        if (this.isRTL) {\r\n          seg.leftCol = seg.lastRowDayIndex;\r\n          seg.rightCol = seg.firstRowDayIndex;\r\n        } else {\r\n          seg.leftCol = seg.firstRowDayIndex;\r\n          seg.rightCol = seg.lastRowDayIndex;\r\n        }\r\n      }\r\n      return genericSegs;\r\n    } else {\r\n      resourceSegs = [];\r\n      for (k = 0, len1 = genericSegs.length; k < len1; k++) {\r\n        seg = genericSegs[k];\r\n        for (resourceIndex = l = 0, ref = resourceCnt; l < ref; resourceIndex = l += 1) {\r\n          resourceObj = this.flattenedResources[resourceIndex];\r\n          if (!span.resourceId || span.resourceId === resourceObj.id) {\r\n            copy = $.extend({}, seg);\r\n            copy.resource = resourceObj;\r\n            if (this.isRTL) {\r\n              copy.leftCol = this.indicesToCol(resourceIndex, seg.lastRowDayIndex);\r\n              copy.rightCol = this.indicesToCol(resourceIndex, seg.firstRowDayIndex);\r\n            } else {\r\n              copy.leftCol = this.indicesToCol(resourceIndex, seg.firstRowDayIndex);\r\n              copy.rightCol = this.indicesToCol(resourceIndex, seg.lastRowDayIndex);\r\n            }\r\n            resourceSegs.push(copy);\r\n          }\r\n        }\r\n      }\r\n      return resourceSegs;\r\n    }\r\n  };\r\n\r\n  ResourceDayGrid.prototype.renderBusinessHours = function() {\r\n    var segs;\r\n    segs = this.computePerResourceBusinessHourSegs(true);\r\n    if (segs) {\r\n      return this.renderFill('businessHours', segs, 'bgevent');\r\n    } else {\r\n      return ResourceDayGrid.__super__.renderBusinessHours.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  return ResourceDayGrid;\r\n\r\n})(FC.DayGrid);\r\n\r\nResourceTimeGrid = (function(superClass) {\r\n  extend(ResourceTimeGrid, superClass);\r\n\r\n  function ResourceTimeGrid() {\r\n    return ResourceTimeGrid.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceTimeGrid.mixin(ResourceGridMixin);\r\n\r\n  ResourceTimeGrid.mixin(ResourceDayTableMixin);\r\n\r\n  ResourceTimeGrid.prototype.getHitSpan = function(hit) {\r\n    var span;\r\n    span = ResourceTimeGrid.__super__.getHitSpan.apply(this, arguments);\r\n    if (this.resourceCnt) {\r\n      span.resourceId = this.getColResource(hit.col).id;\r\n    }\r\n    return span;\r\n  };\r\n\r\n  ResourceTimeGrid.prototype.spanToSegs = function(span) {\r\n    var copy, genericSegs, j, k, l, len, len1, ref, resourceCnt, resourceIndex, resourceObj, resourceSegs, seg;\r\n    resourceCnt = this.resourceCnt;\r\n    genericSegs = this.sliceRangeByTimes(span);\r\n    if (!resourceCnt) {\r\n      for (j = 0, len = genericSegs.length; j < len; j++) {\r\n        seg = genericSegs[j];\r\n        seg.col = seg.dayIndex;\r\n      }\r\n      return genericSegs;\r\n    } else {\r\n      resourceSegs = [];\r\n      for (k = 0, len1 = genericSegs.length; k < len1; k++) {\r\n        seg = genericSegs[k];\r\n        for (resourceIndex = l = 0, ref = resourceCnt; l < ref; resourceIndex = l += 1) {\r\n          resourceObj = this.flattenedResources[resourceIndex];\r\n          if (!span.resourceId || span.resourceId === resourceObj.id) {\r\n            copy = $.extend({}, seg);\r\n            copy.resource = resourceObj;\r\n            copy.col = this.indicesToCol(resourceIndex, seg.dayIndex);\r\n            resourceSegs.push(copy);\r\n          }\r\n        }\r\n      }\r\n      return resourceSegs;\r\n    }\r\n  };\r\n\r\n  ResourceTimeGrid.prototype.renderBusinessHours = function() {\r\n    var segs;\r\n    segs = this.computePerResourceBusinessHourSegs(false);\r\n    if (segs) {\r\n      return this.renderBusinessSegs(segs);\r\n    } else {\r\n      return ResourceTimeGrid.__super__.renderBusinessHours.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  return ResourceTimeGrid;\r\n\r\n})(FC.TimeGrid);\r\n\r\nTimelineView = (function(superClass) {\r\n  extend(TimelineView, superClass);\r\n\r\n  function TimelineView() {\r\n    return TimelineView.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  TimelineView.prototype.timeGrid = null;\r\n\r\n  TimelineView.prototype.isScrolled = false;\r\n\r\n  TimelineView.prototype.usesMinMaxTime = true;\r\n\r\n  TimelineView.prototype.initialize = function() {\r\n    return this.timeGrid = this.instantiateGrid();\r\n  };\r\n\r\n  TimelineView.prototype.instantiateGrid = function() {\r\n    return new TimelineGrid(this);\r\n  };\r\n\r\n  TimelineView.prototype.setDateProfileForRendering = function(dateProfile) {\r\n    TimelineView.__super__.setDateProfileForRendering.apply(this, arguments);\r\n    this.timeGrid.initScaleProps();\r\n    return this.timeGrid.setRange(this.renderRange);\r\n  };\r\n\r\n  TimelineView.prototype.getFallbackDuration = function() {\r\n    return this.timeGrid.computeFallbackDuration();\r\n  };\r\n\r\n  TimelineView.prototype.renderSkeleton = function() {\r\n    this.el.addClass('fc-timeline');\r\n    if (this.opt('eventOverlap') === false) {\r\n      this.el.addClass('fc-no-overlap');\r\n    }\r\n    this.el.html(this.renderSkeletonHtml());\r\n    return this.renderTimeGridSkeleton();\r\n  };\r\n\r\n  TimelineView.prototype.renderSkeletonHtml = function() {\r\n    return '<table> <thead class=\"fc-head\"> <tr> <td class=\"fc-time-area ' + this.widgetHeaderClass + '\"></td> </tr> </thead> <tbody class=\"fc-body\"> <tr> <td class=\"fc-time-area ' + this.widgetContentClass + '\"></td> </tr> </tbody> </table>';\r\n  };\r\n\r\n  TimelineView.prototype.renderTimeGridSkeleton = function() {\r\n    this.timeGrid.setElement(this.el.find('tbody .fc-time-area'));\r\n    this.timeGrid.headEl = this.el.find('thead .fc-time-area');\r\n    this.timeGrid.renderSkeleton();\r\n    this.isScrolled = false;\r\n    return this.timeGrid.bodyScroller.on('scroll', proxy(this, 'handleBodyScroll'));\r\n  };\r\n\r\n  TimelineView.prototype.handleBodyScroll = function(top, left) {\r\n    if (top) {\r\n      if (!this.isScrolled) {\r\n        this.isScrolled = true;\r\n        return this.el.addClass('fc-scrolled');\r\n      }\r\n    } else {\r\n      if (this.isScrolled) {\r\n        this.isScrolled = false;\r\n        return this.el.removeClass('fc-scrolled');\r\n      }\r\n    }\r\n  };\r\n\r\n  TimelineView.prototype.unrenderSkeleton = function() {\r\n    this.timeGrid.removeElement();\r\n    this.handleBodyScroll(0);\r\n    return TimelineView.__super__.unrenderSkeleton.apply(this, arguments);\r\n  };\r\n\r\n  TimelineView.prototype.renderDates = function() {\r\n    return this.timeGrid.renderDates();\r\n  };\r\n\r\n  TimelineView.prototype.unrenderDates = function() {\r\n    return this.timeGrid.unrenderDates();\r\n  };\r\n\r\n  TimelineView.prototype.renderBusinessHours = function() {\r\n    return this.timeGrid.renderBusinessHours();\r\n  };\r\n\r\n  TimelineView.prototype.unrenderBusinessHours = function() {\r\n    return this.timeGrid.unrenderBusinessHours();\r\n  };\r\n\r\n  TimelineView.prototype.getNowIndicatorUnit = function() {\r\n    return this.timeGrid.getNowIndicatorUnit();\r\n  };\r\n\r\n  TimelineView.prototype.renderNowIndicator = function(date) {\r\n    return this.timeGrid.renderNowIndicator(date);\r\n  };\r\n\r\n  TimelineView.prototype.unrenderNowIndicator = function() {\r\n    return this.timeGrid.unrenderNowIndicator();\r\n  };\r\n\r\n  TimelineView.prototype.hitsNeeded = function() {\r\n    return this.timeGrid.hitsNeeded();\r\n  };\r\n\r\n  TimelineView.prototype.hitsNotNeeded = function() {\r\n    return this.timeGrid.hitsNotNeeded();\r\n  };\r\n\r\n  TimelineView.prototype.prepareHits = function() {\r\n    return this.timeGrid.prepareHits();\r\n  };\r\n\r\n  TimelineView.prototype.releaseHits = function() {\r\n    return this.timeGrid.releaseHits();\r\n  };\r\n\r\n  TimelineView.prototype.queryHit = function(leftOffset, topOffset) {\r\n    return this.timeGrid.queryHit(leftOffset, topOffset);\r\n  };\r\n\r\n  TimelineView.prototype.getHitSpan = function(hit) {\r\n    return this.timeGrid.getHitSpan(hit);\r\n  };\r\n\r\n  TimelineView.prototype.getHitEl = function(hit) {\r\n    return this.timeGrid.getHitEl(hit);\r\n  };\r\n\r\n  TimelineView.prototype.updateWidth = function() {\r\n    return this.timeGrid.updateWidth();\r\n  };\r\n\r\n  TimelineView.prototype.setHeight = function(totalHeight, isAuto) {\r\n    var bodyHeight;\r\n    if (isAuto) {\r\n      bodyHeight = 'auto';\r\n    } else {\r\n      bodyHeight = totalHeight - this.timeGrid.headHeight() - this.queryMiscHeight();\r\n    }\r\n    return this.timeGrid.bodyScroller.setHeight(bodyHeight);\r\n  };\r\n\r\n  TimelineView.prototype.queryMiscHeight = function() {\r\n    return this.el.outerHeight() - this.timeGrid.headScroller.el.outerHeight() - this.timeGrid.bodyScroller.el.outerHeight();\r\n  };\r\n\r\n  TimelineView.prototype.computeInitialDateScroll = function() {\r\n    var left, scrollTime;\r\n    left = 0;\r\n    if (this.timeGrid.isTimeScale) {\r\n      scrollTime = this.opt('scrollTime');\r\n      if (scrollTime) {\r\n        scrollTime = moment.duration(scrollTime);\r\n        left = this.timeGrid.dateToCoord(this.activeRange.start.clone().time(scrollTime));\r\n      }\r\n    }\r\n    return {\r\n      left: left\r\n    };\r\n  };\r\n\r\n  TimelineView.prototype.queryDateScroll = function() {\r\n    return {\r\n      left: this.timeGrid.bodyScroller.getScrollLeft()\r\n    };\r\n  };\r\n\r\n  TimelineView.prototype.applyDateScroll = function(scroll) {\r\n    if (scroll.left != null) {\r\n      this.timeGrid.headScroller.setScrollLeft(scroll.left);\r\n      return this.timeGrid.bodyScroller.setScrollLeft(scroll.left);\r\n    }\r\n  };\r\n\r\n  TimelineView.prototype.renderEvents = function(events) {\r\n    this.timeGrid.renderEvents(events);\r\n    return this.updateWidth();\r\n  };\r\n\r\n  TimelineView.prototype.unrenderEvents = function() {\r\n    this.timeGrid.unrenderEvents();\r\n    return this.updateWidth();\r\n  };\r\n\r\n  TimelineView.prototype.renderDrag = function(dropLocation, seg) {\r\n    return this.timeGrid.renderDrag(dropLocation, seg);\r\n  };\r\n\r\n  TimelineView.prototype.unrenderDrag = function() {\r\n    return this.timeGrid.unrenderDrag();\r\n  };\r\n\r\n  TimelineView.prototype.getEventSegs = function() {\r\n    return this.timeGrid.getEventSegs();\r\n  };\r\n\r\n  TimelineView.prototype.renderSelection = function(range) {\r\n    return this.timeGrid.renderSelection(range);\r\n  };\r\n\r\n  TimelineView.prototype.unrenderSelection = function() {\r\n    return this.timeGrid.unrenderSelection();\r\n  };\r\n\r\n  return TimelineView;\r\n\r\n})(View);\r\n\r\ncssToStr = FC.cssToStr;\r\n\r\nTimelineGrid = (function(superClass) {\r\n  extend(TimelineGrid, superClass);\r\n\r\n  TimelineGrid.prototype.slotDates = null;\r\n\r\n  TimelineGrid.prototype.slotCnt = null;\r\n\r\n  TimelineGrid.prototype.snapCnt = null;\r\n\r\n  TimelineGrid.prototype.snapsPerSlot = null;\r\n\r\n  TimelineGrid.prototype.snapDiffToIndex = null;\r\n\r\n  TimelineGrid.prototype.snapIndexToDiff = null;\r\n\r\n  TimelineGrid.prototype.headEl = null;\r\n\r\n  TimelineGrid.prototype.slatContainerEl = null;\r\n\r\n  TimelineGrid.prototype.slatEls = null;\r\n\r\n  TimelineGrid.prototype.containerCoordCache = null;\r\n\r\n  TimelineGrid.prototype.slatCoordCache = null;\r\n\r\n  TimelineGrid.prototype.slatInnerCoordCache = null;\r\n\r\n  TimelineGrid.prototype.headScroller = null;\r\n\r\n  TimelineGrid.prototype.bodyScroller = null;\r\n\r\n  TimelineGrid.prototype.joiner = null;\r\n\r\n  TimelineGrid.prototype.follower = null;\r\n\r\n  TimelineGrid.prototype.eventTitleFollower = null;\r\n\r\n  TimelineGrid.prototype.timeWindowMs = null;\r\n\r\n  TimelineGrid.prototype.slotDuration = null;\r\n\r\n  TimelineGrid.prototype.snapDuration = null;\r\n\r\n  TimelineGrid.prototype.duration = null;\r\n\r\n  TimelineGrid.prototype.labelInterval = null;\r\n\r\n  TimelineGrid.prototype.headerFormats = null;\r\n\r\n  TimelineGrid.prototype.isTimeScale = null;\r\n\r\n  TimelineGrid.prototype.largeUnit = null;\r\n\r\n  TimelineGrid.prototype.emphasizeWeeks = false;\r\n\r\n  TimelineGrid.prototype.titleFollower = null;\r\n\r\n  TimelineGrid.prototype.segContainerEl = null;\r\n\r\n  TimelineGrid.prototype.segContainerHeight = null;\r\n\r\n  TimelineGrid.prototype.bgSegContainerEl = null;\r\n\r\n  TimelineGrid.prototype.helperEls = null;\r\n\r\n  TimelineGrid.prototype.innerEl = null;\r\n\r\n  function TimelineGrid() {\r\n    TimelineGrid.__super__.constructor.apply(this, arguments);\r\n    this.slotWidth = this.opt('slotWidth');\r\n  }\r\n\r\n  TimelineGrid.prototype.opt = function(name) {\r\n    return this.view.opt(name);\r\n  };\r\n\r\n  TimelineGrid.prototype.isValidDate = function(date) {\r\n    var ms;\r\n    if (this.view.isHiddenDay(date)) {\r\n      return false;\r\n    } else if (this.isTimeScale) {\r\n      ms = date.time() - this.view.minTime;\r\n      ms = ((ms % 86400000) + 86400000) % 86400000;\r\n      return ms < this.timeWindowMs;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.computeDisplayEventTime = function() {\r\n    return !this.isTimeScale;\r\n  };\r\n\r\n  TimelineGrid.prototype.computeDisplayEventEnd = function() {\r\n    return false;\r\n  };\r\n\r\n  TimelineGrid.prototype.computeEventTimeFormat = function() {\r\n    return this.opt('extraSmallTimeFormat');\r\n  };\r\n\r\n\r\n  /*\r\n  \tMakes the given date consistent with isTimeScale/largeUnit,\r\n  \tso, either removes the times, ensures a time, or makes it the startOf largeUnit.\r\n  \tStrips all timezones. Returns new copy.\r\n  \tTODO: should maybe be called \"normalizeRangeDate\".\r\n   */\r\n\r\n  TimelineGrid.prototype.normalizeGridDate = function(date) {\r\n    var normalDate;\r\n    if (this.isTimeScale) {\r\n      normalDate = date.clone();\r\n      if (!normalDate.hasTime()) {\r\n        normalDate.time(0);\r\n      }\r\n    } else {\r\n      normalDate = date.clone().stripTime();\r\n      if (this.largeUnit) {\r\n        normalDate.startOf(this.largeUnit);\r\n      }\r\n    }\r\n    return normalDate;\r\n  };\r\n\r\n  TimelineGrid.prototype.normalizeGridRange = function(range) {\r\n    var adjustedEnd, normalRange;\r\n    if (this.isTimeScale) {\r\n      normalRange = {\r\n        start: this.normalizeGridDate(range.start),\r\n        end: this.normalizeGridDate(range.end)\r\n      };\r\n    } else {\r\n      normalRange = this.view.computeDayRange(range);\r\n      if (this.largeUnit) {\r\n        normalRange.start.startOf(this.largeUnit);\r\n        adjustedEnd = normalRange.end.clone().startOf(this.largeUnit);\r\n        if (!adjustedEnd.isSame(normalRange.end) || !adjustedEnd.isAfter(normalRange.start)) {\r\n          adjustedEnd.add(this.slotDuration);\r\n        }\r\n        normalRange.end = adjustedEnd;\r\n      }\r\n    }\r\n    return normalRange;\r\n  };\r\n\r\n  TimelineGrid.prototype.rangeUpdated = function() {\r\n    var date, slotDates;\r\n    this.start = this.normalizeGridDate(this.start);\r\n    this.end = this.normalizeGridDate(this.end);\r\n    this.timeWindowMs = this.view.maxTime - this.view.minTime;\r\n    if (this.isTimeScale) {\r\n      this.start.add(this.view.minTime);\r\n      this.end.subtract(1, 'day').add(this.view.maxTime);\r\n    }\r\n    slotDates = [];\r\n    date = this.start.clone();\r\n    while (date < this.end) {\r\n      if (this.isValidDate(date)) {\r\n        slotDates.push(date.clone());\r\n      }\r\n      date.add(this.slotDuration);\r\n    }\r\n    this.slotDates = slotDates;\r\n    return this.updateGridDates();\r\n  };\r\n\r\n  TimelineGrid.prototype.updateGridDates = function() {\r\n    var date, snapDiff, snapDiffToIndex, snapIndex, snapIndexToDiff;\r\n    snapIndex = -1;\r\n    snapDiff = 0;\r\n    snapDiffToIndex = [];\r\n    snapIndexToDiff = [];\r\n    date = this.start.clone();\r\n    while (date < this.end) {\r\n      if (this.isValidDate(date)) {\r\n        snapIndex++;\r\n        snapDiffToIndex.push(snapIndex);\r\n        snapIndexToDiff.push(snapDiff);\r\n      } else {\r\n        snapDiffToIndex.push(snapIndex + 0.5);\r\n      }\r\n      date.add(this.snapDuration);\r\n      snapDiff++;\r\n    }\r\n    this.snapDiffToIndex = snapDiffToIndex;\r\n    this.snapIndexToDiff = snapIndexToDiff;\r\n    this.snapCnt = snapIndex + 1;\r\n    return this.slotCnt = this.snapCnt / this.snapsPerSlot;\r\n  };\r\n\r\n  TimelineGrid.prototype.spanToSegs = function(span) {\r\n    var normalRange, seg;\r\n    normalRange = this.normalizeGridRange(span);\r\n    if (this.computeDateSnapCoverage(span.start) < this.computeDateSnapCoverage(span.end)) {\r\n      seg = intersectRanges(normalRange, this);\r\n      if (seg) {\r\n        if (seg.isStart && !this.isValidDate(seg.start)) {\r\n          seg.isStart = false;\r\n        }\r\n        if (seg.isEnd && seg.end && !this.isValidDate(seg.end.clone().subtract(1))) {\r\n          seg.isEnd = false;\r\n        }\r\n        return [seg];\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  TimelineGrid.prototype.prepareHits = function() {\r\n    return this.buildCoords();\r\n  };\r\n\r\n  TimelineGrid.prototype.queryHit = function(leftOffset, topOffset) {\r\n    var containerCoordCache, localSnapIndex, partial, slatCoordCache, slatIndex, slatLeft, slatRight, slatWidth, snapIndex, snapLeft, snapRight, snapsPerSlot;\r\n    snapsPerSlot = this.snapsPerSlot;\r\n    slatCoordCache = this.slatCoordCache;\r\n    containerCoordCache = this.containerCoordCache;\r\n    if (containerCoordCache.isPointInBounds(leftOffset, topOffset)) {\r\n      slatIndex = slatCoordCache.getHorizontalIndex(leftOffset);\r\n      if (slatIndex != null) {\r\n        slatWidth = slatCoordCache.getWidth(slatIndex);\r\n        if (this.isRTL) {\r\n          slatRight = slatCoordCache.getRightOffset(slatIndex);\r\n          partial = (slatRight - leftOffset) / slatWidth;\r\n          localSnapIndex = Math.floor(partial * snapsPerSlot);\r\n          snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\r\n          snapRight = slatRight - (localSnapIndex / snapsPerSlot) * slatWidth;\r\n          snapLeft = snapRight - ((localSnapIndex + 1) / snapsPerSlot) * slatWidth;\r\n        } else {\r\n          slatLeft = slatCoordCache.getLeftOffset(slatIndex);\r\n          partial = (leftOffset - slatLeft) / slatWidth;\r\n          localSnapIndex = Math.floor(partial * snapsPerSlot);\r\n          snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\r\n          snapLeft = slatLeft + (localSnapIndex / snapsPerSlot) * slatWidth;\r\n          snapRight = slatLeft + ((localSnapIndex + 1) / snapsPerSlot) * slatWidth;\r\n        }\r\n        return {\r\n          snap: snapIndex,\r\n          component: this,\r\n          left: snapLeft,\r\n          right: snapRight,\r\n          top: containerCoordCache.getTopOffset(0),\r\n          bottom: containerCoordCache.getBottomOffset(0)\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.getHitSpan = function(hit) {\r\n    return this.getSnapRange(hit.snap);\r\n  };\r\n\r\n  TimelineGrid.prototype.getHitEl = function(hit) {\r\n    return this.getSnapEl(hit.snap);\r\n  };\r\n\r\n  TimelineGrid.prototype.getSnapRange = function(snapIndex) {\r\n    var end, start;\r\n    start = this.start.clone();\r\n    start.add(multiplyDuration(this.snapDuration, this.snapIndexToDiff[snapIndex]));\r\n    end = start.clone().add(this.snapDuration);\r\n    return {\r\n      start: start,\r\n      end: end\r\n    };\r\n  };\r\n\r\n  TimelineGrid.prototype.getSnapEl = function(snapIndex) {\r\n    return this.slatEls.eq(Math.floor(snapIndex / this.snapsPerSlot));\r\n  };\r\n\r\n  TimelineGrid.prototype.renderSkeleton = function() {\r\n    this.headScroller = new ClippedScroller({\r\n      overflowX: 'clipped-scroll',\r\n      overflowY: 'hidden'\r\n    });\r\n    this.headScroller.canvas = new ScrollerCanvas();\r\n    this.headScroller.render();\r\n    this.headEl.append(this.headScroller.el);\r\n    this.bodyScroller = new ClippedScroller();\r\n    this.bodyScroller.canvas = new ScrollerCanvas();\r\n    this.bodyScroller.render();\r\n    this.el.append(this.bodyScroller.el);\r\n    this.innerEl = this.bodyScroller.canvas.contentEl;\r\n    this.slatContainerEl = $('<div class=\"fc-slats\"/>').appendTo(this.bodyScroller.canvas.bgEl);\r\n    this.segContainerEl = $('<div class=\"fc-event-container\"/>').appendTo(this.bodyScroller.canvas.contentEl);\r\n    this.bgSegContainerEl = this.bodyScroller.canvas.bgEl;\r\n    this.containerCoordCache = new CoordCache({\r\n      els: this.bodyScroller.canvas.el,\r\n      isHorizontal: true,\r\n      isVertical: true\r\n    });\r\n    this.joiner = new ScrollJoiner('horizontal', [this.headScroller, this.bodyScroller]);\r\n    if (true) {\r\n      this.follower = new ScrollFollower(this.headScroller, true);\r\n    }\r\n    if (true) {\r\n      this.eventTitleFollower = new ScrollFollower(this.bodyScroller);\r\n      this.eventTitleFollower.minTravel = 50;\r\n      if (this.isRTL) {\r\n        this.eventTitleFollower.containOnNaturalRight = true;\r\n      } else {\r\n        this.eventTitleFollower.containOnNaturalLeft = true;\r\n      }\r\n    }\r\n    return TimelineGrid.__super__.renderSkeleton.apply(this, arguments);\r\n  };\r\n\r\n  TimelineGrid.prototype.headColEls = null;\r\n\r\n  TimelineGrid.prototype.slatColEls = null;\r\n\r\n  TimelineGrid.prototype.renderDates = function() {\r\n    var date, i, j, len, ref;\r\n    this.headScroller.canvas.contentEl.html(this.renderHeadHtml());\r\n    this.headColEls = this.headScroller.canvas.contentEl.find('col');\r\n    this.slatContainerEl.html(this.renderSlatHtml());\r\n    this.slatColEls = this.slatContainerEl.find('col');\r\n    this.slatEls = this.slatContainerEl.find('td');\r\n    this.slatCoordCache = new CoordCache({\r\n      els: this.slatEls,\r\n      isHorizontal: true\r\n    });\r\n    this.slatInnerCoordCache = new CoordCache({\r\n      els: this.slatEls.find('> div'),\r\n      isHorizontal: true,\r\n      offsetParent: this.bodyScroller.canvas.el\r\n    });\r\n    ref = this.slotDates;\r\n    for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n      date = ref[i];\r\n      this.view.publiclyTrigger('dayRender', null, date, this.slatEls.eq(i));\r\n    }\r\n    if (this.follower) {\r\n      return this.follower.setSprites(this.headEl.find('tr:not(:last-child) .fc-cell-text'));\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderDates = function() {\r\n    if (this.follower) {\r\n      this.follower.clearSprites();\r\n    }\r\n    this.headScroller.canvas.contentEl.empty();\r\n    this.slatContainerEl.empty();\r\n    this.headScroller.canvas.clearWidth();\r\n    return this.bodyScroller.canvas.clearWidth();\r\n  };\r\n\r\n  TimelineGrid.prototype.renderHeadHtml = function() {\r\n    var cell, cellRows, date, format, formats, headerCellClassNames, html, i, isChrono, isLast, isSingleDay, isSuperRow, isWeekStart, j, k, l, labelInterval, leadingCell, len, len1, len2, len3, len4, len5, len6, m, n, newCell, p, prevWeekNumber, q, row, rowCells, rowUnits, slatHtml, slotCells, slotDates, text, weekNumber;\r\n    labelInterval = this.labelInterval;\r\n    formats = this.headerFormats;\r\n    cellRows = (function() {\r\n      var j, len, results;\r\n      results = [];\r\n      for (j = 0, len = formats.length; j < len; j++) {\r\n        format = formats[j];\r\n        results.push([]);\r\n      }\r\n      return results;\r\n    })();\r\n    leadingCell = null;\r\n    prevWeekNumber = null;\r\n    slotDates = this.slotDates;\r\n    slotCells = [];\r\n    rowUnits = (function() {\r\n      var j, len, results;\r\n      results = [];\r\n      for (j = 0, len = formats.length; j < len; j++) {\r\n        format = formats[j];\r\n        results.push(FC.queryMostGranularFormatUnit(format));\r\n      }\r\n      return results;\r\n    })();\r\n    for (j = 0, len = slotDates.length; j < len; j++) {\r\n      date = slotDates[j];\r\n      weekNumber = date.week();\r\n      isWeekStart = this.emphasizeWeeks && prevWeekNumber !== null && prevWeekNumber !== weekNumber;\r\n      for (row = k = 0, len1 = formats.length; k < len1; row = ++k) {\r\n        format = formats[row];\r\n        rowCells = cellRows[row];\r\n        leadingCell = rowCells[rowCells.length - 1];\r\n        isSuperRow = formats.length > 1 && row < formats.length - 1;\r\n        newCell = null;\r\n        if (isSuperRow) {\r\n          text = date.format(format);\r\n          if (!leadingCell || leadingCell.text !== text) {\r\n            newCell = this.buildCellObject(date, text, rowUnits[row]);\r\n          } else {\r\n            leadingCell.colspan += 1;\r\n          }\r\n        } else {\r\n          if (!leadingCell || isInt(divideRangeByDuration(this.start, date, labelInterval))) {\r\n            text = date.format(format);\r\n            newCell = this.buildCellObject(date, text, rowUnits[row]);\r\n          } else {\r\n            leadingCell.colspan += 1;\r\n          }\r\n        }\r\n        if (newCell) {\r\n          newCell.weekStart = isWeekStart;\r\n          rowCells.push(newCell);\r\n        }\r\n      }\r\n      slotCells.push({\r\n        weekStart: isWeekStart\r\n      });\r\n      prevWeekNumber = weekNumber;\r\n    }\r\n    isChrono = labelInterval > this.slotDuration;\r\n    isSingleDay = this.slotDuration.as('days') === 1;\r\n    html = '<table>';\r\n    html += '<colgroup>';\r\n    for (l = 0, len2 = slotDates.length; l < len2; l++) {\r\n      date = slotDates[l];\r\n      html += '<col/>';\r\n    }\r\n    html += '</colgroup>';\r\n    html += '<tbody>';\r\n    for (i = m = 0, len3 = cellRows.length; m < len3; i = ++m) {\r\n      rowCells = cellRows[i];\r\n      isLast = i === cellRows.length - 1;\r\n      html += '<tr' + (isChrono && isLast ? ' class=\"fc-chrono\"' : '') + '>';\r\n      for (n = 0, len4 = rowCells.length; n < len4; n++) {\r\n        cell = rowCells[n];\r\n        headerCellClassNames = [this.view.widgetHeaderClass];\r\n        if (cell.weekStart) {\r\n          headerCellClassNames.push('fc-em-cell');\r\n        }\r\n        if (isSingleDay) {\r\n          headerCellClassNames = headerCellClassNames.concat(this.getDayClasses(cell.date, true));\r\n        }\r\n        html += '<th class=\"' + headerCellClassNames.join(' ') + '\"' + ' data-date=\"' + cell.date.format() + '\"' + (cell.colspan > 1 ? ' colspan=\"' + cell.colspan + '\"' : '') + '>' + '<div class=\"fc-cell-content\">' + cell.spanHtml + '</div>' + '</th>';\r\n      }\r\n      html += '</tr>';\r\n    }\r\n    html += '</tbody></table>';\r\n    slatHtml = '<table>';\r\n    slatHtml += '<colgroup>';\r\n    for (p = 0, len5 = slotCells.length; p < len5; p++) {\r\n      cell = slotCells[p];\r\n      slatHtml += '<col/>';\r\n    }\r\n    slatHtml += '</colgroup>';\r\n    slatHtml += '<tbody><tr>';\r\n    for (i = q = 0, len6 = slotCells.length; q < len6; i = ++q) {\r\n      cell = slotCells[i];\r\n      date = slotDates[i];\r\n      slatHtml += this.slatCellHtml(date, cell.weekStart);\r\n    }\r\n    slatHtml += '</tr></tbody></table>';\r\n    this._slatHtml = slatHtml;\r\n    return html;\r\n  };\r\n\r\n  TimelineGrid.prototype.buildCellObject = function(date, text, rowUnit) {\r\n    var spanHtml;\r\n    date = date.clone();\r\n    spanHtml = this.view.buildGotoAnchorHtml({\r\n      date: date,\r\n      type: rowUnit,\r\n      forceOff: !rowUnit\r\n    }, {\r\n      'class': 'fc-cell-text'\r\n    }, htmlEscape(text));\r\n    return {\r\n      text: text,\r\n      spanHtml: spanHtml,\r\n      date: date,\r\n      colspan: 1\r\n    };\r\n  };\r\n\r\n  TimelineGrid.prototype.renderSlatHtml = function() {\r\n    return this._slatHtml;\r\n  };\r\n\r\n  TimelineGrid.prototype.slatCellHtml = function(date, isEm) {\r\n    var classes;\r\n    if (this.isTimeScale) {\r\n      classes = [];\r\n      classes.push(isInt(divideRangeByDuration(this.start, date, this.labelInterval)) ? 'fc-major' : 'fc-minor');\r\n    } else {\r\n      classes = this.getDayClasses(date);\r\n      classes.push('fc-day');\r\n    }\r\n    classes.unshift(this.view.widgetContentClass);\r\n    if (isEm) {\r\n      classes.push('fc-em-cell');\r\n    }\r\n    return '<td class=\"' + classes.join(' ') + '\"' + ' data-date=\"' + date.format() + '\"' + '><div /></td>';\r\n  };\r\n\r\n  TimelineGrid.prototype.businessHourSegs = null;\r\n\r\n  TimelineGrid.prototype.renderBusinessHours = function() {\r\n    var segs;\r\n    if (!this.largeUnit) {\r\n      segs = this.businessHourSegs = this.buildBusinessHourSegs(!this.isTimeScale);\r\n      return this.renderFill('businessHours', segs, 'bgevent');\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderBusinessHours = function() {\r\n    return this.unrenderFill('businessHours');\r\n  };\r\n\r\n  TimelineGrid.prototype.nowIndicatorEls = null;\r\n\r\n  TimelineGrid.prototype.getNowIndicatorUnit = function() {\r\n    if (this.isTimeScale) {\r\n      return computeGreatestUnit(this.slotDuration);\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.renderNowIndicator = function(date) {\r\n    var coord, css, nodes;\r\n    nodes = [];\r\n    date = this.normalizeGridDate(date);\r\n    if (date >= this.start && date < this.end) {\r\n      coord = this.dateToCoord(date);\r\n      css = this.isRTL ? {\r\n        right: -coord\r\n      } : {\r\n        left: coord\r\n      };\r\n      nodes.push($(\"<div class='fc-now-indicator fc-now-indicator-arrow'></div>\").css(css).appendTo(this.headScroller.canvas.el)[0]);\r\n      nodes.push($(\"<div class='fc-now-indicator fc-now-indicator-line'></div>\").css(css).appendTo(this.bodyScroller.canvas.el)[0]);\r\n    }\r\n    return this.nowIndicatorEls = $(nodes);\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderNowIndicator = function() {\r\n    if (this.nowIndicatorEls) {\r\n      this.nowIndicatorEls.remove();\r\n      return this.nowIndicatorEls = null;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.explicitSlotWidth = null;\r\n\r\n  TimelineGrid.prototype.defaultSlotWidth = null;\r\n\r\n  TimelineGrid.prototype.updateWidth = function() {\r\n    var availableWidth, containerMinWidth, containerWidth, isDatesRendered, nonLastSlotWidth, slotWidth;\r\n    isDatesRendered = this.headColEls;\r\n    if (isDatesRendered) {\r\n      slotWidth = Math.round(this.slotWidth || (this.slotWidth = this.computeSlotWidth()));\r\n      containerWidth = slotWidth * this.slotDates.length;\r\n      containerMinWidth = '';\r\n      nonLastSlotWidth = slotWidth;\r\n      availableWidth = this.bodyScroller.getClientWidth();\r\n      if (availableWidth > containerWidth) {\r\n        containerMinWidth = availableWidth;\r\n        containerWidth = '';\r\n        nonLastSlotWidth = Math.floor(availableWidth / this.slotDates.length);\r\n      }\r\n    } else {\r\n      containerWidth = '';\r\n      containerMinWidth = '';\r\n    }\r\n    this.headScroller.canvas.setWidth(containerWidth);\r\n    this.headScroller.canvas.setMinWidth(containerMinWidth);\r\n    this.bodyScroller.canvas.setWidth(containerWidth);\r\n    this.bodyScroller.canvas.setMinWidth(containerMinWidth);\r\n    if (isDatesRendered) {\r\n      this.headColEls.slice(0, -1).add(this.slatColEls.slice(0, -1)).width(nonLastSlotWidth);\r\n    }\r\n    this.headScroller.updateSize();\r\n    this.bodyScroller.updateSize();\r\n    this.joiner.update();\r\n    if (isDatesRendered) {\r\n      this.buildCoords();\r\n      this.updateSegPositions();\r\n      this.view.updateNowIndicator();\r\n    }\r\n    if (this.follower) {\r\n      this.follower.update();\r\n    }\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.update();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.computeSlotWidth = function() {\r\n    var headerWidth, innerEls, maxInnerWidth, minWidth, slotWidth, slotsPerLabel;\r\n    maxInnerWidth = 0;\r\n    innerEls = this.headEl.find('tr:last-child th .fc-cell-text');\r\n    innerEls.each(function(i, node) {\r\n      var innerWidth;\r\n      innerWidth = $(node).outerWidth();\r\n      return maxInnerWidth = Math.max(maxInnerWidth, innerWidth);\r\n    });\r\n    headerWidth = maxInnerWidth + 1;\r\n    slotsPerLabel = divideDurationByDuration(this.labelInterval, this.slotDuration);\r\n    slotWidth = Math.ceil(headerWidth / slotsPerLabel);\r\n    minWidth = this.headColEls.eq(0).css('min-width');\r\n    if (minWidth) {\r\n      minWidth = parseInt(minWidth, 10);\r\n      if (minWidth) {\r\n        slotWidth = Math.max(slotWidth, minWidth);\r\n      }\r\n    }\r\n    return slotWidth;\r\n  };\r\n\r\n  TimelineGrid.prototype.buildCoords = function() {\r\n    this.containerCoordCache.build();\r\n    this.slatCoordCache.build();\r\n    return this.slatInnerCoordCache.build();\r\n  };\r\n\r\n  TimelineGrid.prototype.computeDateSnapCoverage = function(date) {\r\n    var snapCoverage, snapDiff, snapDiffInt;\r\n    snapDiff = divideRangeByDuration(this.start, date, this.snapDuration);\r\n    if (snapDiff < 0) {\r\n      return 0;\r\n    } else if (snapDiff >= this.snapDiffToIndex.length) {\r\n      return this.snapCnt;\r\n    } else {\r\n      snapDiffInt = Math.floor(snapDiff);\r\n      snapCoverage = this.snapDiffToIndex[snapDiffInt];\r\n      if (isInt(snapCoverage)) {\r\n        snapCoverage += snapDiff - snapDiffInt;\r\n      } else {\r\n        snapCoverage = Math.ceil(snapCoverage);\r\n      }\r\n      return snapCoverage;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.dateToCoord = function(date) {\r\n    var coordCache, partial, slotCoverage, slotIndex, snapCoverage;\r\n    snapCoverage = this.computeDateSnapCoverage(date);\r\n    slotCoverage = snapCoverage / this.snapsPerSlot;\r\n    slotIndex = Math.floor(slotCoverage);\r\n    slotIndex = Math.min(slotIndex, this.slotCnt - 1);\r\n    partial = slotCoverage - slotIndex;\r\n    coordCache = this.slatInnerCoordCache;\r\n    if (this.isRTL) {\r\n      return (coordCache.getRightPosition(slotIndex) - coordCache.getWidth(slotIndex) * partial) - this.containerCoordCache.getWidth(0);\r\n    } else {\r\n      return coordCache.getLeftPosition(slotIndex) + coordCache.getWidth(slotIndex) * partial;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.rangeToCoords = function(range) {\r\n    if (this.isRTL) {\r\n      return {\r\n        right: this.dateToCoord(range.start),\r\n        left: this.dateToCoord(range.end)\r\n      };\r\n    } else {\r\n      return {\r\n        left: this.dateToCoord(range.start),\r\n        right: this.dateToCoord(range.end)\r\n      };\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.headHeight = function() {\r\n    var table;\r\n    table = this.headScroller.canvas.contentEl.find('table');\r\n    return table.height.apply(table, arguments);\r\n  };\r\n\r\n  TimelineGrid.prototype.updateSegPositions = function() {\r\n    var coords, j, len, seg, segs;\r\n    segs = (this.segs || []).concat(this.businessHourSegs || []);\r\n    for (j = 0, len = segs.length; j < len; j++) {\r\n      seg = segs[j];\r\n      coords = this.rangeToCoords(seg);\r\n      seg.el.css({\r\n        left: (seg.left = coords.left),\r\n        right: -(seg.right = coords.right)\r\n      });\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.renderFgSegs = function(segs) {\r\n    segs = this.renderFgSegEls(segs);\r\n    this.renderFgSegsInContainers([[this, segs]]);\r\n    this.updateSegFollowers(segs);\r\n    return segs;\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderFgSegs = function() {\r\n    this.clearSegFollowers();\r\n    return this.unrenderFgContainers([this]);\r\n  };\r\n\r\n  TimelineGrid.prototype.renderFgSegsInContainers = function(pairs) {\r\n    var container, coords, j, k, l, len, len1, len2, len3, len4, len5, len6, len7, m, n, p, q, r, ref, ref1, ref2, ref3, results, seg, segs;\r\n    for (j = 0, len = pairs.length; j < len; j++) {\r\n      ref = pairs[j], container = ref[0], segs = ref[1];\r\n      for (k = 0, len1 = segs.length; k < len1; k++) {\r\n        seg = segs[k];\r\n        coords = this.rangeToCoords(seg);\r\n        seg.el.css({\r\n          left: (seg.left = coords.left),\r\n          right: -(seg.right = coords.right)\r\n        });\r\n      }\r\n    }\r\n    for (l = 0, len2 = pairs.length; l < len2; l++) {\r\n      ref1 = pairs[l], container = ref1[0], segs = ref1[1];\r\n      for (m = 0, len3 = segs.length; m < len3; m++) {\r\n        seg = segs[m];\r\n        seg.el.appendTo(container.segContainerEl);\r\n      }\r\n    }\r\n    for (n = 0, len4 = pairs.length; n < len4; n++) {\r\n      ref2 = pairs[n], container = ref2[0], segs = ref2[1];\r\n      for (p = 0, len5 = segs.length; p < len5; p++) {\r\n        seg = segs[p];\r\n        seg.height = seg.el.outerHeight(true);\r\n      }\r\n      this.buildSegLevels(segs);\r\n      container.segContainerHeight = computeOffsetForSegs(segs);\r\n    }\r\n    results = [];\r\n    for (q = 0, len6 = pairs.length; q < len6; q++) {\r\n      ref3 = pairs[q], container = ref3[0], segs = ref3[1];\r\n      for (r = 0, len7 = segs.length; r < len7; r++) {\r\n        seg = segs[r];\r\n        seg.el.css('top', seg.top);\r\n      }\r\n      results.push(container.segContainerEl.height(container.segContainerHeight));\r\n    }\r\n    return results;\r\n  };\r\n\r\n  TimelineGrid.prototype.buildSegLevels = function(segs) {\r\n    var belowSeg, isLevelCollision, j, k, l, len, len1, len2, level, placedSeg, ref, ref1, segLevels, unplacedSeg;\r\n    segLevels = [];\r\n    this.sortEventSegs(segs);\r\n    for (j = 0, len = segs.length; j < len; j++) {\r\n      unplacedSeg = segs[j];\r\n      unplacedSeg.above = [];\r\n      level = 0;\r\n      while (level < segLevels.length) {\r\n        isLevelCollision = false;\r\n        ref = segLevels[level];\r\n        for (k = 0, len1 = ref.length; k < len1; k++) {\r\n          placedSeg = ref[k];\r\n          if (timeRowSegsCollide(unplacedSeg, placedSeg)) {\r\n            unplacedSeg.above.push(placedSeg);\r\n            isLevelCollision = true;\r\n          }\r\n        }\r\n        if (isLevelCollision) {\r\n          level += 1;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      (segLevels[level] || (segLevels[level] = [])).push(unplacedSeg);\r\n      level += 1;\r\n      while (level < segLevels.length) {\r\n        ref1 = segLevels[level];\r\n        for (l = 0, len2 = ref1.length; l < len2; l++) {\r\n          belowSeg = ref1[l];\r\n          if (timeRowSegsCollide(unplacedSeg, belowSeg)) {\r\n            belowSeg.above.push(unplacedSeg);\r\n          }\r\n        }\r\n        level += 1;\r\n      }\r\n    }\r\n    return segLevels;\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderFgContainers = function(containers) {\r\n    var container, j, len, results;\r\n    results = [];\r\n    for (j = 0, len = containers.length; j < len; j++) {\r\n      container = containers[j];\r\n      container.segContainerEl.empty();\r\n      container.segContainerEl.height('');\r\n      results.push(container.segContainerHeight = null);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  TimelineGrid.prototype.fgSegHtml = function(seg, disableResizing) {\r\n    var classes, event, isDraggable, isResizableFromEnd, isResizableFromStart, timeText;\r\n    event = seg.event;\r\n    isDraggable = this.view.isEventDraggable(event);\r\n    isResizableFromStart = seg.isStart && this.view.isEventResizableFromStart(event);\r\n    isResizableFromEnd = seg.isEnd && this.view.isEventResizableFromEnd(event);\r\n    classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\r\n    classes.unshift('fc-timeline-event', 'fc-h-event');\r\n    timeText = this.getEventTimeText(event);\r\n    return '<a class=\"' + classes.join(' ') + '\" style=\"' + cssToStr(this.getSegSkinCss(seg)) + '\"' + (event.url ? ' href=\"' + htmlEscape(event.url) + '\"' : '') + '>' + '<div class=\"fc-content\">' + (timeText ? '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>' : '') + '<span class=\"fc-title\">' + (event.title ? htmlEscape(event.title) : '&nbsp;') + '</span>' + '</div>' + '<div class=\"fc-bg\" />' + (isResizableFromStart ? '<div class=\"fc-resizer fc-start-resizer\"></div>' : '') + (isResizableFromEnd ? '<div class=\"fc-resizer fc-end-resizer\"></div>' : '') + '</a>';\r\n  };\r\n\r\n  TimelineGrid.prototype.updateSegFollowers = function(segs) {\r\n    var j, len, seg, sprites, titleEl;\r\n    if (this.eventTitleFollower) {\r\n      sprites = [];\r\n      for (j = 0, len = segs.length; j < len; j++) {\r\n        seg = segs[j];\r\n        titleEl = seg.el.find('.fc-title');\r\n        if (titleEl.length) {\r\n          sprites.push(new ScrollFollowerSprite(titleEl));\r\n        }\r\n      }\r\n      return this.eventTitleFollower.setSprites(sprites);\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.clearSegFollowers = function() {\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.clearSprites();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.segDragStart = function() {\r\n    TimelineGrid.__super__.segDragStart.apply(this, arguments);\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.forceRelative();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.segDragEnd = function() {\r\n    TimelineGrid.__super__.segDragEnd.apply(this, arguments);\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.clearForce();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.segResizeStart = function() {\r\n    TimelineGrid.__super__.segResizeStart.apply(this, arguments);\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.forceRelative();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.segResizeEnd = function() {\r\n    TimelineGrid.__super__.segResizeEnd.apply(this, arguments);\r\n    if (this.eventTitleFollower) {\r\n      return this.eventTitleFollower.clearForce();\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.renderHelper = function(event, sourceSeg) {\r\n    var segs;\r\n    segs = this.eventToSegs(event);\r\n    segs = this.renderFgSegEls(segs);\r\n    return this.renderHelperSegsInContainers([[this, segs]], sourceSeg);\r\n  };\r\n\r\n  TimelineGrid.prototype.renderHelperSegsInContainers = function(pairs, sourceSeg) {\r\n    var containerObj, coords, helperContainerEl, helperNodes, j, k, l, len, len1, len2, len3, m, ref, ref1, ref2, seg, segNodes, segs;\r\n    helperNodes = [];\r\n    segNodes = [];\r\n    for (j = 0, len = pairs.length; j < len; j++) {\r\n      ref = pairs[j], containerObj = ref[0], segs = ref[1];\r\n      for (k = 0, len1 = segs.length; k < len1; k++) {\r\n        seg = segs[k];\r\n        coords = this.rangeToCoords(seg);\r\n        seg.el.css({\r\n          left: (seg.left = coords.left),\r\n          right: -(seg.right = coords.right)\r\n        });\r\n        if (sourceSeg && sourceSeg.resourceId === ((ref1 = containerObj.resource) != null ? ref1.id : void 0)) {\r\n          seg.el.css('top', sourceSeg.el.css('top'));\r\n        } else {\r\n          seg.el.css('top', 0);\r\n        }\r\n      }\r\n    }\r\n    for (l = 0, len2 = pairs.length; l < len2; l++) {\r\n      ref2 = pairs[l], containerObj = ref2[0], segs = ref2[1];\r\n      helperContainerEl = $('<div class=\"fc-event-container fc-helper-container\"/>').appendTo(containerObj.innerEl);\r\n      helperNodes.push(helperContainerEl[0]);\r\n      for (m = 0, len3 = segs.length; m < len3; m++) {\r\n        seg = segs[m];\r\n        helperContainerEl.append(seg.el);\r\n        segNodes.push(seg.el[0]);\r\n      }\r\n    }\r\n    if (this.helperEls) {\r\n      this.helperEls = this.helperEls.add($(helperNodes));\r\n    } else {\r\n      this.helperEls = $(helperNodes);\r\n    }\r\n    return $(segNodes);\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderHelper = function() {\r\n    if (this.helperEls) {\r\n      this.helperEls.remove();\r\n      return this.helperEls = null;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.renderEventResize = function(resizeLocation, seg) {\r\n    var eventSpan, eventSpans, j, len;\r\n    eventSpans = this.eventToSpans(resizeLocation);\r\n    for (j = 0, len = eventSpans.length; j < len; j++) {\r\n      eventSpan = eventSpans[j];\r\n      this.renderHighlight(eventSpan);\r\n    }\r\n    return this.renderEventLocationHelper(resizeLocation, seg);\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderEventResize = function() {\r\n    this.unrenderHighlight();\r\n    return this.unrenderHelper();\r\n  };\r\n\r\n  TimelineGrid.prototype.renderFill = function(type, segs, className) {\r\n    segs = this.renderFillSegEls(type, segs);\r\n    this.renderFillInContainers(type, [[this, segs]], className);\r\n    return segs;\r\n  };\r\n\r\n  TimelineGrid.prototype.renderFillInContainers = function(type, pairs, className) {\r\n    var containerObj, j, len, ref, results, segs;\r\n    results = [];\r\n    for (j = 0, len = pairs.length; j < len; j++) {\r\n      ref = pairs[j], containerObj = ref[0], segs = ref[1];\r\n      results.push(this.renderFillInContainer(type, containerObj, segs, className));\r\n    }\r\n    return results;\r\n  };\r\n\r\n  TimelineGrid.prototype.renderFillInContainer = function(type, containerObj, segs, className) {\r\n    var containerEl, coords, j, len, seg;\r\n    if (segs.length) {\r\n      className || (className = type.toLowerCase());\r\n      containerEl = $('<div class=\"fc-' + className + '-container\" />').appendTo(containerObj.bgSegContainerEl);\r\n      for (j = 0, len = segs.length; j < len; j++) {\r\n        seg = segs[j];\r\n        coords = this.rangeToCoords(seg);\r\n        seg.el.css({\r\n          left: (seg.left = coords.left),\r\n          right: -(seg.right = coords.right)\r\n        });\r\n        seg.el.appendTo(containerEl);\r\n      }\r\n      if (this.elsByFill[type]) {\r\n        return this.elsByFill[type] = this.elsByFill[type].add(containerEl);\r\n      } else {\r\n        return this.elsByFill[type] = containerEl;\r\n      }\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.renderDrag = function(dropLocation, seg) {\r\n    var eventSpan, eventSpans, j, len;\r\n    if (seg) {\r\n      return this.renderEventLocationHelper(dropLocation, seg);\r\n    } else {\r\n      eventSpans = this.eventToSpans(dropLocation);\r\n      for (j = 0, len = eventSpans.length; j < len; j++) {\r\n        eventSpan = eventSpans[j];\r\n        this.renderHighlight(eventSpan);\r\n      }\r\n      return null;\r\n    }\r\n  };\r\n\r\n  TimelineGrid.prototype.unrenderDrag = function() {\r\n    this.unrenderHelper();\r\n    return this.unrenderHighlight();\r\n  };\r\n\r\n  return TimelineGrid;\r\n\r\n})(Grid);\r\n\r\ncomputeOffsetForSegs = function(segs) {\r\n  var j, len, max, seg;\r\n  max = 0;\r\n  for (j = 0, len = segs.length; j < len; j++) {\r\n    seg = segs[j];\r\n    max = Math.max(max, computeOffsetForSeg(seg));\r\n  }\r\n  return max;\r\n};\r\n\r\ncomputeOffsetForSeg = function(seg) {\r\n  if (seg.top == null) {\r\n    seg.top = computeOffsetForSegs(seg.above);\r\n  }\r\n  return seg.top + seg.height;\r\n};\r\n\r\ntimeRowSegsCollide = function(seg0, seg1) {\r\n  return seg0.left < seg1.right && seg0.right > seg1.left;\r\n};\r\n\r\nMIN_AUTO_LABELS = 18;\r\n\r\nMAX_AUTO_SLOTS_PER_LABEL = 6;\r\n\r\nMAX_AUTO_CELLS = 200;\r\n\r\nMAX_CELLS = 1000;\r\n\r\nDEFAULT_GRID_DURATION = {\r\n  months: 1\r\n};\r\n\r\nSTOCK_SUB_DURATIONS = [\r\n  {\r\n    years: 1\r\n  }, {\r\n    months: 1\r\n  }, {\r\n    days: 1\r\n  }, {\r\n    hours: 1\r\n  }, {\r\n    minutes: 30\r\n  }, {\r\n    minutes: 15\r\n  }, {\r\n    minutes: 10\r\n  }, {\r\n    minutes: 5\r\n  }, {\r\n    minutes: 1\r\n  }, {\r\n    seconds: 30\r\n  }, {\r\n    seconds: 15\r\n  }, {\r\n    seconds: 10\r\n  }, {\r\n    seconds: 5\r\n  }, {\r\n    seconds: 1\r\n  }, {\r\n    milliseconds: 500\r\n  }, {\r\n    milliseconds: 100\r\n  }, {\r\n    milliseconds: 10\r\n  }, {\r\n    milliseconds: 1\r\n  }\r\n];\r\n\r\nTimelineGrid.prototype.initScaleProps = function() {\r\n  var input, slotUnit, type;\r\n  this.labelInterval = this.queryDurationOption('slotLabelInterval');\r\n  this.slotDuration = this.queryDurationOption('slotDuration');\r\n  this.validateLabelAndSlot();\r\n  this.ensureLabelInterval();\r\n  this.ensureSlotDuration();\r\n  input = this.opt('slotLabelFormat');\r\n  type = $.type(input);\r\n  this.headerFormats = type === 'array' ? input : type === 'string' ? [input] : this.computeHeaderFormats();\r\n  this.isTimeScale = durationHasTime(this.slotDuration);\r\n  this.largeUnit = !this.isTimeScale ? (slotUnit = computeGreatestUnit(this.slotDuration), /year|month|week/.test(slotUnit) ? slotUnit : void 0) : void 0;\r\n  this.emphasizeWeeks = this.slotDuration.as('days') === 1 && this.view.currentRangeAs('weeks') >= 2 && !this.opt('businessHours');\r\n\r\n  /*\r\n  \tconsole.log('label interval =', @labelInterval.humanize())\r\n  \tconsole.log('slot duration =', @slotDuration.humanize())\r\n  \tconsole.log('header formats =', @headerFormats)\r\n  \tconsole.log('isTimeScale', @isTimeScale)\r\n  \tconsole.log('largeUnit', @largeUnit)\r\n   */\r\n  this.snapDuration = (input = this.opt('snapDuration')) ? moment.duration(input) : this.slotDuration;\r\n  this.minResizeDuration = this.snapDuration;\r\n  return this.snapsPerSlot = divideDurationByDuration(this.slotDuration, this.snapDuration);\r\n};\r\n\r\nTimelineGrid.prototype.queryDurationOption = function(name) {\r\n  var dur, input;\r\n  input = this.opt(name);\r\n  if (input != null) {\r\n    dur = moment.duration(input);\r\n    if (+dur) {\r\n      return dur;\r\n    }\r\n  }\r\n};\r\n\r\nTimelineGrid.prototype.validateLabelAndSlot = function() {\r\n  var currentRange, labelCnt, slotCnt, slotsPerLabel;\r\n  currentRange = this.view.currentRange;\r\n  if (this.labelInterval) {\r\n    labelCnt = divideRangeByDuration(currentRange.start, currentRange.end, this.labelInterval);\r\n    if (labelCnt > MAX_CELLS) {\r\n      FC.warn('slotLabelInterval results in too many cells');\r\n      this.labelInterval = null;\r\n    }\r\n  }\r\n  if (this.slotDuration) {\r\n    slotCnt = divideRangeByDuration(currentRange.start, currentRange.end, this.slotDuration);\r\n    if (slotCnt > MAX_CELLS) {\r\n      FC.warn('slotDuration results in too many cells');\r\n      this.slotDuration = null;\r\n    }\r\n  }\r\n  if (this.labelInterval && this.slotDuration) {\r\n    slotsPerLabel = divideDurationByDuration(this.labelInterval, this.slotDuration);\r\n    if (!isInt(slotsPerLabel) || slotsPerLabel < 1) {\r\n      FC.warn('slotLabelInterval must be a multiple of slotDuration');\r\n      return this.slotDuration = null;\r\n    }\r\n  }\r\n};\r\n\r\nTimelineGrid.prototype.computeFallbackDuration = function() {\r\n  var duration, input, j, labelCnt, labelInterval;\r\n  duration = null;\r\n  if (!this.labelInterval && !this.slotDuration) {\r\n    duration = moment.duration(DEFAULT_GRID_DURATION);\r\n  } else {\r\n    labelInterval = this.ensureLabelInterval();\r\n    for (j = STOCK_SUB_DURATIONS.length - 1; j >= 0; j += -1) {\r\n      input = STOCK_SUB_DURATIONS[j];\r\n      duration = moment.duration(input);\r\n      labelCnt = divideDurationByDuration(duration, labelInterval);\r\n      if (labelCnt >= MIN_AUTO_LABELS) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return duration;\r\n};\r\n\r\nTimelineGrid.prototype.ensureLabelInterval = function() {\r\n  var currentRange, input, j, k, labelCnt, labelInterval, len, len1, slotsPerLabel, tryLabelInterval;\r\n  currentRange = this.view.currentRange;\r\n  labelInterval = this.labelInterval;\r\n  if (!labelInterval) {\r\n    if (this.slotDuration) {\r\n      for (j = 0, len = STOCK_SUB_DURATIONS.length; j < len; j++) {\r\n        input = STOCK_SUB_DURATIONS[j];\r\n        tryLabelInterval = moment.duration(input);\r\n        slotsPerLabel = divideDurationByDuration(tryLabelInterval, this.slotDuration);\r\n        if (isInt(slotsPerLabel) && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\r\n          labelInterval = tryLabelInterval;\r\n          break;\r\n        }\r\n      }\r\n      if (!labelInterval) {\r\n        labelInterval = this.slotDuration;\r\n      }\r\n    } else {\r\n      for (k = 0, len1 = STOCK_SUB_DURATIONS.length; k < len1; k++) {\r\n        input = STOCK_SUB_DURATIONS[k];\r\n        labelInterval = moment.duration(input);\r\n        labelCnt = divideRangeByDuration(currentRange.start, currentRange.end, labelInterval);\r\n        if (labelCnt >= MIN_AUTO_LABELS) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.labelInterval = labelInterval;\r\n  }\r\n  return labelInterval;\r\n};\r\n\r\nTimelineGrid.prototype.ensureSlotDuration = function() {\r\n  var currentRange, input, j, labelInterval, len, slotCnt, slotDuration, slotsPerLabel, trySlotDuration;\r\n  currentRange = this.view.currentRange;\r\n  slotDuration = this.slotDuration;\r\n  if (!slotDuration) {\r\n    labelInterval = this.ensureLabelInterval();\r\n    for (j = 0, len = STOCK_SUB_DURATIONS.length; j < len; j++) {\r\n      input = STOCK_SUB_DURATIONS[j];\r\n      trySlotDuration = moment.duration(input);\r\n      slotsPerLabel = divideDurationByDuration(labelInterval, trySlotDuration);\r\n      if (isInt(slotsPerLabel) && slotsPerLabel > 1 && slotsPerLabel <= MAX_AUTO_SLOTS_PER_LABEL) {\r\n        slotDuration = trySlotDuration;\r\n        break;\r\n      }\r\n    }\r\n    if (slotDuration) {\r\n      slotCnt = divideRangeByDuration(currentRange.start, currentRange.end, slotDuration);\r\n      if (slotCnt > MAX_AUTO_CELLS) {\r\n        slotDuration = null;\r\n      }\r\n    }\r\n    if (!slotDuration) {\r\n      slotDuration = labelInterval;\r\n    }\r\n    this.slotDuration = slotDuration;\r\n  }\r\n  return slotDuration;\r\n};\r\n\r\nTimelineGrid.prototype.computeHeaderFormats = function() {\r\n  var format0, format1, format2, labelInterval, unit, view, weekNumbersVisible;\r\n  view = this.view;\r\n  labelInterval = this.labelInterval;\r\n  unit = computeGreatestUnit(labelInterval);\r\n  weekNumbersVisible = this.opt('weekNumbers');\r\n  format0 = format1 = format2 = null;\r\n  if (unit === 'week' && !weekNumbersVisible) {\r\n    unit = 'day';\r\n  }\r\n  switch (unit) {\r\n    case 'year':\r\n      format0 = 'YYYY';\r\n      break;\r\n    case 'month':\r\n      if (view.currentRangeAs('years') > 1) {\r\n        format0 = 'YYYY';\r\n      }\r\n      format1 = 'MMM';\r\n      break;\r\n    case 'week':\r\n      if (view.currentRangeAs('years') > 1) {\r\n        format0 = 'YYYY';\r\n      }\r\n      format1 = this.opt('shortWeekFormat');\r\n      break;\r\n    case 'day':\r\n      if (view.currentRangeAs('years') > 1) {\r\n        format0 = this.opt('monthYearFormat');\r\n      } else if (view.currentRangeAs('months') > 1) {\r\n        format0 = 'MMMM';\r\n      }\r\n      if (weekNumbersVisible) {\r\n        format1 = this.opt('weekFormat');\r\n      }\r\n      format2 = 'dd D';\r\n      break;\r\n    case 'hour':\r\n      if (weekNumbersVisible) {\r\n        format0 = this.opt('weekFormat');\r\n      }\r\n      if (view.currentRangeAs('days') > 1) {\r\n        format1 = this.opt('dayOfMonthFormat');\r\n      }\r\n      format2 = this.opt('smallTimeFormat');\r\n      break;\r\n    case 'minute':\r\n      if (labelInterval.asMinutes() / 60 >= MAX_AUTO_SLOTS_PER_LABEL) {\r\n        format0 = this.opt('hourFormat');\r\n        format1 = '[:]mm';\r\n      } else {\r\n        format0 = this.opt('mediumTimeFormat');\r\n      }\r\n      break;\r\n    case 'second':\r\n      if (labelInterval.asSeconds() / 60 >= MAX_AUTO_SLOTS_PER_LABEL) {\r\n        format0 = 'LT';\r\n        format1 = '[:]ss';\r\n      } else {\r\n        format0 = 'LTS';\r\n      }\r\n      break;\r\n    case 'millisecond':\r\n      format0 = 'LTS';\r\n      format1 = '[.]SSS';\r\n  }\r\n  return [].concat(format0 || [], format1 || [], format2 || []);\r\n};\r\n\r\nFC.views.timeline = {\r\n  \"class\": TimelineView,\r\n  defaults: {\r\n    eventResizableFromStart: true\r\n  }\r\n};\r\n\r\nFC.views.timelineDay = {\r\n  type: 'timeline',\r\n  duration: {\r\n    days: 1\r\n  }\r\n};\r\n\r\nFC.views.timelineWeek = {\r\n  type: 'timeline',\r\n  duration: {\r\n    weeks: 1\r\n  }\r\n};\r\n\r\nFC.views.timelineMonth = {\r\n  type: 'timeline',\r\n  duration: {\r\n    months: 1\r\n  }\r\n};\r\n\r\nFC.views.timelineYear = {\r\n  type: 'timeline',\r\n  duration: {\r\n    years: 1\r\n  }\r\n};\r\n\r\nResourceTimelineView = (function(superClass) {\r\n  extend(ResourceTimelineView, superClass);\r\n\r\n  function ResourceTimelineView() {\r\n    return ResourceTimelineView.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceTimelineView.mixin(ResourceViewMixin);\r\n\r\n  ResourceTimelineView.prototype.canHandleSpecificResources = true;\r\n\r\n  ResourceTimelineView.prototype.resourceGrid = null;\r\n\r\n  ResourceTimelineView.prototype.tbodyHash = null;\r\n\r\n  ResourceTimelineView.prototype.joiner = null;\r\n\r\n  ResourceTimelineView.prototype.dividerEls = null;\r\n\r\n  ResourceTimelineView.prototype.superHeaderText = null;\r\n\r\n  ResourceTimelineView.prototype.isVGrouping = null;\r\n\r\n  ResourceTimelineView.prototype.isHGrouping = null;\r\n\r\n  ResourceTimelineView.prototype.groupSpecs = null;\r\n\r\n  ResourceTimelineView.prototype.colSpecs = null;\r\n\r\n  ResourceTimelineView.prototype.orderSpecs = null;\r\n\r\n  ResourceTimelineView.prototype.rowHierarchy = null;\r\n\r\n  ResourceTimelineView.prototype.resourceRowHash = null;\r\n\r\n  ResourceTimelineView.prototype.nestingCnt = 0;\r\n\r\n  ResourceTimelineView.prototype.isNesting = null;\r\n\r\n  ResourceTimelineView.prototype.dividerWidth = null;\r\n\r\n  ResourceTimelineView.prototype.initialize = function() {\r\n    ResourceTimelineView.__super__.initialize.apply(this, arguments);\r\n    this.processResourceOptions();\r\n    this.resourceGrid = new Spreadsheet(this);\r\n    this.rowHierarchy = new RowParent(this);\r\n    return this.resourceRowHash = {};\r\n  };\r\n\r\n  ResourceTimelineView.prototype.instantiateGrid = function() {\r\n    return new ResourceTimelineGrid(this);\r\n  };\r\n\r\n  ResourceTimelineView.prototype.processResourceOptions = function() {\r\n    var allColSpecs, allOrderSpecs, colSpec, defaultLabelText, groupColSpecs, groupSpec, groupSpecs, hGroupField, isGroup, isHGrouping, isVGrouping, j, k, l, labelText, len, len1, len2, orderSpec, plainColSpecs, plainOrderSpecs, superHeaderText;\r\n    allColSpecs = this.opt('resourceColumns') || [];\r\n    labelText = this.opt('resourceLabelText');\r\n    defaultLabelText = 'Resources';\r\n    superHeaderText = null;\r\n    if (!allColSpecs.length) {\r\n      allColSpecs.push({\r\n        labelText: labelText || defaultLabelText,\r\n        text: this.getResourceTextFunc()\r\n      });\r\n    } else {\r\n      superHeaderText = labelText;\r\n    }\r\n    plainColSpecs = [];\r\n    groupColSpecs = [];\r\n    groupSpecs = [];\r\n    isVGrouping = false;\r\n    isHGrouping = false;\r\n    for (j = 0, len = allColSpecs.length; j < len; j++) {\r\n      colSpec = allColSpecs[j];\r\n      if (colSpec.group) {\r\n        groupColSpecs.push(colSpec);\r\n      } else {\r\n        plainColSpecs.push(colSpec);\r\n      }\r\n    }\r\n    plainColSpecs[0].isMain = true;\r\n    if (groupColSpecs.length) {\r\n      groupSpecs = groupColSpecs;\r\n      isVGrouping = true;\r\n    } else {\r\n      hGroupField = this.opt('resourceGroupField');\r\n      if (hGroupField) {\r\n        isHGrouping = true;\r\n        groupSpecs.push({\r\n          field: hGroupField,\r\n          text: this.opt('resourceGroupText'),\r\n          render: this.opt('resourceGroupRender')\r\n        });\r\n      }\r\n    }\r\n    allOrderSpecs = parseFieldSpecs(this.opt('resourceOrder'));\r\n    plainOrderSpecs = [];\r\n    for (k = 0, len1 = allOrderSpecs.length; k < len1; k++) {\r\n      orderSpec = allOrderSpecs[k];\r\n      isGroup = false;\r\n      for (l = 0, len2 = groupSpecs.length; l < len2; l++) {\r\n        groupSpec = groupSpecs[l];\r\n        if (groupSpec.field === orderSpec.field) {\r\n          groupSpec.order = orderSpec.order;\r\n          isGroup = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!isGroup) {\r\n        plainOrderSpecs.push(orderSpec);\r\n      }\r\n    }\r\n    this.superHeaderText = superHeaderText;\r\n    this.isVGrouping = isVGrouping;\r\n    this.isHGrouping = isHGrouping;\r\n    this.groupSpecs = groupSpecs;\r\n    this.colSpecs = groupColSpecs.concat(plainColSpecs);\r\n    return this.orderSpecs = plainOrderSpecs;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.renderSkeleton = function() {\r\n    ResourceTimelineView.__super__.renderSkeleton.apply(this, arguments);\r\n    this.renderResourceGridSkeleton();\r\n    this.tbodyHash = {\r\n      spreadsheet: this.resourceGrid.tbodyEl,\r\n      event: this.timeGrid.tbodyEl\r\n    };\r\n    this.joiner = new ScrollJoiner('vertical', [this.resourceGrid.bodyScroller, this.timeGrid.bodyScroller]);\r\n    return this.initDividerMoving();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.renderSkeletonHtml = function() {\r\n    return '<table> <thead class=\"fc-head\"> <tr> <td class=\"fc-resource-area ' + this.widgetHeaderClass + '\"></td> <td class=\"fc-divider fc-col-resizer ' + this.widgetHeaderClass + '\"></td> <td class=\"fc-time-area ' + this.widgetHeaderClass + '\"></td> </tr> </thead> <tbody class=\"fc-body\"> <tr> <td class=\"fc-resource-area ' + this.widgetContentClass + '\"></td> <td class=\"fc-divider fc-col-resizer ' + this.widgetHeaderClass + '\"></td> <td class=\"fc-time-area ' + this.widgetContentClass + '\"></td> </tr> </tbody> </table>';\r\n  };\r\n\r\n  ResourceTimelineView.prototype.renderResourceGridSkeleton = function() {\r\n    this.resourceGrid.el = this.el.find('tbody .fc-resource-area');\r\n    this.resourceGrid.headEl = this.el.find('thead .fc-resource-area');\r\n    return this.resourceGrid.renderSkeleton();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.initDividerMoving = function() {\r\n    var ref;\r\n    this.dividerEls = this.el.find('.fc-divider');\r\n    this.dividerWidth = (ref = this.opt('resourceAreaWidth')) != null ? ref : this.resourceGrid.tableWidth;\r\n    if (this.dividerWidth != null) {\r\n      this.positionDivider(this.dividerWidth);\r\n    }\r\n    return this.dividerEls.on('mousedown', (function(_this) {\r\n      return function(ev) {\r\n        return _this.dividerMousedown(ev);\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  ResourceTimelineView.prototype.dividerMousedown = function(ev) {\r\n    var dragListener, isRTL, maxWidth, minWidth, origWidth;\r\n    isRTL = this.opt('isRTL');\r\n    minWidth = 30;\r\n    maxWidth = this.el.width() - 30;\r\n    origWidth = this.getNaturalDividerWidth();\r\n    dragListener = new DragListener({\r\n      dragStart: (function(_this) {\r\n        return function() {\r\n          return _this.dividerEls.addClass('fc-active');\r\n        };\r\n      })(this),\r\n      drag: (function(_this) {\r\n        return function(dx, dy) {\r\n          var width;\r\n          if (isRTL) {\r\n            width = origWidth - dx;\r\n          } else {\r\n            width = origWidth + dx;\r\n          }\r\n          width = Math.max(width, minWidth);\r\n          width = Math.min(width, maxWidth);\r\n          _this.dividerWidth = width;\r\n          _this.positionDivider(width);\r\n          return _this.updateWidth();\r\n        };\r\n      })(this),\r\n      dragEnd: (function(_this) {\r\n        return function() {\r\n          return _this.dividerEls.removeClass('fc-active');\r\n        };\r\n      })(this)\r\n    });\r\n    return dragListener.startInteraction(ev);\r\n  };\r\n\r\n  ResourceTimelineView.prototype.getNaturalDividerWidth = function() {\r\n    return this.el.find('.fc-resource-area').width();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.positionDivider = function(w) {\r\n    return this.el.find('.fc-resource-area').width(w);\r\n  };\r\n\r\n  ResourceTimelineView.prototype.renderEvents = function(events) {\r\n    this.timeGrid.renderEvents(events);\r\n    this.syncRowHeights();\r\n    return this.updateWidth();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.unrenderEvents = function() {\r\n    this.timeGrid.unrenderEvents();\r\n    this.syncRowHeights();\r\n    return this.updateWidth();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.updateWidth = function() {\r\n    ResourceTimelineView.__super__.updateWidth.apply(this, arguments);\r\n    this.resourceGrid.updateWidth();\r\n    this.joiner.update();\r\n    if (this.cellFollower) {\r\n      return this.cellFollower.update();\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.updateHeight = function(isResize) {\r\n    ResourceTimelineView.__super__.updateHeight.apply(this, arguments);\r\n    if (isResize) {\r\n      return this.syncRowHeights();\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.setHeight = function(totalHeight, isAuto) {\r\n    var bodyHeight, headHeight;\r\n    headHeight = this.syncHeadHeights();\r\n    if (isAuto) {\r\n      bodyHeight = 'auto';\r\n    } else {\r\n      bodyHeight = totalHeight - headHeight - this.queryMiscHeight();\r\n    }\r\n    this.timeGrid.bodyScroller.setHeight(bodyHeight);\r\n    return this.resourceGrid.bodyScroller.setHeight(bodyHeight);\r\n  };\r\n\r\n  ResourceTimelineView.prototype.queryMiscHeight = function() {\r\n    return this.el.outerHeight() - Math.max(this.resourceGrid.headScroller.el.outerHeight(), this.timeGrid.headScroller.el.outerHeight()) - Math.max(this.resourceGrid.bodyScroller.el.outerHeight(), this.timeGrid.bodyScroller.el.outerHeight());\r\n  };\r\n\r\n  ResourceTimelineView.prototype.syncHeadHeights = function() {\r\n    var headHeight;\r\n    this.resourceGrid.headHeight('auto');\r\n    this.timeGrid.headHeight('auto');\r\n    headHeight = Math.max(this.resourceGrid.headHeight(), this.timeGrid.headHeight());\r\n    this.resourceGrid.headHeight(headHeight);\r\n    this.timeGrid.headHeight(headHeight);\r\n    return headHeight;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.renderResources = function(resources) {\r\n    var j, len, resource;\r\n    this.batchRows();\r\n    for (j = 0, len = resources.length; j < len; j++) {\r\n      resource = resources[j];\r\n      this.insertResource(resource);\r\n    }\r\n    this.rowHierarchy.show();\r\n    this.unbatchRows();\r\n    return this.reinitializeCellFollowers();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.unrenderResources = function() {\r\n    this.batchRows();\r\n    this.rowHierarchy.removeChildren();\r\n    this.unbatchRows();\r\n    return this.reinitializeCellFollowers();\r\n  };\r\n\r\n\r\n  /*\r\n  \tTODO: the scenario where there were previously unassociated events that are now\r\n  \t attached to this resource. should render those events immediately.\r\n  \r\n  \tResponsible for rendering the new resource\r\n   */\r\n\r\n  ResourceTimelineView.prototype.renderResource = function(resource) {\r\n    this.insertResource(resource);\r\n    return this.reinitializeCellFollowers();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.unrenderResource = function(resource) {\r\n    var row;\r\n    row = this.getResourceRow(resource.id);\r\n    if (row) {\r\n      this.batchRows();\r\n      row.remove();\r\n      this.unbatchRows();\r\n      return this.reinitializeCellFollowers();\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.cellFollower = null;\r\n\r\n  ResourceTimelineView.prototype.reinitializeCellFollowers = function() {\r\n    var cellContent, j, len, nodes, ref, row;\r\n    if (this.cellFollower) {\r\n      this.cellFollower.clearSprites();\r\n    }\r\n    this.cellFollower = new ScrollFollower(this.resourceGrid.bodyScroller, true);\r\n    this.cellFollower.isHFollowing = false;\r\n    this.cellFollower.isVFollowing = true;\r\n    nodes = [];\r\n    ref = this.rowHierarchy.getNodes();\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      row = ref[j];\r\n      if (row instanceof VRowGroup) {\r\n        if (row.groupTd) {\r\n          cellContent = row.groupTd.find('.fc-cell-content');\r\n          if (cellContent.length) {\r\n            nodes.push(cellContent[0]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this.cellFollower.setSprites($(nodes));\r\n  };\r\n\r\n  ResourceTimelineView.prototype.insertResource = function(resource, parentResourceRow) {\r\n    var childResource, j, len, parentId, ref, results, row;\r\n    row = new ResourceRow(this, resource);\r\n    if (parentResourceRow == null) {\r\n      parentId = resource.parentId;\r\n      if (parentId) {\r\n        parentResourceRow = this.getResourceRow(parentId);\r\n      }\r\n    }\r\n    if (parentResourceRow) {\r\n      this.insertRowAsChild(row, parentResourceRow);\r\n    } else {\r\n      this.insertRow(row);\r\n    }\r\n    ref = resource.children;\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      childResource = ref[j];\r\n      results.push(this.insertResource(childResource, row));\r\n    }\r\n    return results;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.insertRow = function(row, parent, groupSpecs) {\r\n    var group;\r\n    if (parent == null) {\r\n      parent = this.rowHierarchy;\r\n    }\r\n    if (groupSpecs == null) {\r\n      groupSpecs = this.groupSpecs;\r\n    }\r\n    if (groupSpecs.length) {\r\n      group = this.ensureResourceGroup(row, parent, groupSpecs[0]);\r\n      if (group instanceof HRowGroup) {\r\n        return this.insertRowAsChild(row, group);\r\n      } else {\r\n        return this.insertRow(row, group, groupSpecs.slice(1));\r\n      }\r\n    } else {\r\n      return this.insertRowAsChild(row, parent);\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.insertRowAsChild = function(row, parent) {\r\n    return parent.addChild(row, this.computeChildRowPosition(row, parent));\r\n  };\r\n\r\n  ResourceTimelineView.prototype.computeChildRowPosition = function(child, parent) {\r\n    var cmp, i, j, len, ref, sibling;\r\n    if (this.orderSpecs.length) {\r\n      ref = parent.children;\r\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n        sibling = ref[i];\r\n        cmp = this.compareResources(sibling.resource || {}, child.resource || {});\r\n        if (cmp > 0) {\r\n          return i;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.compareResources = function(a, b) {\r\n    return compareByFieldSpecs(a, b, this.orderSpecs);\r\n  };\r\n\r\n  ResourceTimelineView.prototype.ensureResourceGroup = function(row, parent, spec) {\r\n    var cmp, group, groupValue, i, j, k, len, len1, ref, ref1, testGroup;\r\n    groupValue = (row.resource || {})[spec.field];\r\n    group = null;\r\n    if (spec.order) {\r\n      ref = parent.children;\r\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n        testGroup = ref[i];\r\n        cmp = flexibleCompare(testGroup.groupValue, groupValue) * spec.order;\r\n        if (cmp === 0) {\r\n          group = testGroup;\r\n          break;\r\n        } else if (cmp > 0) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      ref1 = parent.children;\r\n      for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {\r\n        testGroup = ref1[i];\r\n        if (testGroup.groupValue === groupValue) {\r\n          group = testGroup;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (!group) {\r\n      if (this.isVGrouping) {\r\n        group = new VRowGroup(this, spec, groupValue);\r\n      } else {\r\n        group = new HRowGroup(this, spec, groupValue);\r\n      }\r\n      parent.addChild(group, i);\r\n    }\r\n    return group;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.pairSegsWithRows = function(segs) {\r\n    var j, len, pair, pairs, pairsById, resourceId, rowObj, seg;\r\n    pairs = [];\r\n    pairsById = {};\r\n    for (j = 0, len = segs.length; j < len; j++) {\r\n      seg = segs[j];\r\n      resourceId = seg.resourceId;\r\n      if (resourceId) {\r\n        rowObj = this.getResourceRow(resourceId);\r\n        if (rowObj) {\r\n          pair = pairsById[resourceId];\r\n          if (!pair) {\r\n            pair = [rowObj, []];\r\n            pairs.push(pair);\r\n            pairsById[resourceId] = pair;\r\n          }\r\n          pair[1].push(seg);\r\n        }\r\n      }\r\n    }\r\n    return pairs;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowAdded = function(row) {\r\n    var isNesting, wasNesting;\r\n    if (row instanceof ResourceRow) {\r\n      this.resourceRowHash[row.resource.id] = row;\r\n      this.timeGrid.assignRowBusinessHourSegs(row);\r\n    }\r\n    wasNesting = this.isNesting;\r\n    isNesting = Boolean(this.nestingCnt += row.depth ? 1 : 0);\r\n    if (wasNesting !== isNesting) {\r\n      this.el.toggleClass('fc-nested', isNesting);\r\n      this.el.toggleClass('fc-flat', !isNesting);\r\n    }\r\n    return this.isNesting = isNesting;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowRemoved = function(row) {\r\n    var isNesting, wasNesting;\r\n    if (row instanceof ResourceRow) {\r\n      delete this.resourceRowHash[row.resource.id];\r\n      this.timeGrid.destroyRowBusinessHourSegs(row);\r\n    }\r\n    wasNesting = this.isNesting;\r\n    isNesting = Boolean(this.nestingCnt -= row.depth ? 1 : 0);\r\n    if (wasNesting !== isNesting) {\r\n      this.el.toggleClass('fc-nested', isNesting);\r\n      this.el.toggleClass('fc-flat', !isNesting);\r\n    }\r\n    return this.isNesting = isNesting;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.batchRowDepth = 0;\r\n\r\n  ResourceTimelineView.prototype.shownRowBatch = null;\r\n\r\n  ResourceTimelineView.prototype.hiddenRowBatch = null;\r\n\r\n  ResourceTimelineView.prototype.batchRows = function() {\r\n    if (!(this.batchRowDepth++)) {\r\n      this.shownRowBatch = [];\r\n      return this.hiddenRowBatch = [];\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.unbatchRows = function() {\r\n    if (!(--this.batchRowDepth)) {\r\n      if (this.hiddenRowBatch.length) {\r\n        this.rowsHidden(this.hiddenRowBatch);\r\n      }\r\n      if (this.shownRowBatch.length) {\r\n        this.rowsShown(this.shownRowBatch);\r\n      }\r\n      this.hiddenRowBatch = null;\r\n      return this.shownRowBatch = null;\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowShown = function(row) {\r\n    if (this.shownRowBatch) {\r\n      return this.shownRowBatch.push(row);\r\n    } else {\r\n      return this.rowsShown([row]);\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowHidden = function(row) {\r\n    if (this.hiddenRowBatch) {\r\n      return this.hiddenRowBatch.push(row);\r\n    } else {\r\n      return this.rowsHidden([row]);\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowsShown = function(rows) {\r\n    this.syncRowHeights(rows);\r\n    return this.updateWidth();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.rowsHidden = function(rows) {\r\n    return this.updateWidth();\r\n  };\r\n\r\n  ResourceTimelineView.prototype.syncRowHeights = function(visibleRows, safe) {\r\n    var h, h1, h2, i, innerHeights, j, k, len, len1, row;\r\n    if (safe == null) {\r\n      safe = false;\r\n    }\r\n    if (visibleRows == null) {\r\n      visibleRows = this.getVisibleRows();\r\n    }\r\n    for (j = 0, len = visibleRows.length; j < len; j++) {\r\n      row = visibleRows[j];\r\n      row.setTrInnerHeight('');\r\n    }\r\n    innerHeights = (function() {\r\n      var k, len1, results;\r\n      results = [];\r\n      for (k = 0, len1 = visibleRows.length; k < len1; k++) {\r\n        row = visibleRows[k];\r\n        h = row.getMaxTrInnerHeight();\r\n        if (safe) {\r\n          h += h % 2;\r\n        }\r\n        results.push(h);\r\n      }\r\n      return results;\r\n    })();\r\n    for (i = k = 0, len1 = visibleRows.length; k < len1; i = ++k) {\r\n      row = visibleRows[i];\r\n      row.setTrInnerHeight(innerHeights[i]);\r\n    }\r\n    if (!safe) {\r\n      h1 = this.resourceGrid.tbodyEl.height();\r\n      h2 = this.timeGrid.tbodyEl.height();\r\n      if (Math.abs(h1 - h2) > 1) {\r\n        return this.syncRowHeights(visibleRows, true);\r\n      }\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.getVisibleRows = function() {\r\n    var j, len, ref, results, row;\r\n    ref = this.rowHierarchy.getRows();\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      row = ref[j];\r\n      if (row.isShown) {\r\n        results.push(row);\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.getEventRows = function() {\r\n    var j, len, ref, results, row;\r\n    ref = this.rowHierarchy.getRows();\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      row = ref[j];\r\n      if (row instanceof EventRow) {\r\n        results.push(row);\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.getResourceRow = function(resourceId) {\r\n    return this.resourceRowHash[resourceId];\r\n  };\r\n\r\n  ResourceTimelineView.prototype.queryResourceScroll = function() {\r\n    var el, elBottom, j, len, ref, rowObj, scroll, scrollerTop;\r\n    scroll = {};\r\n    scrollerTop = this.timeGrid.bodyScroller.scrollEl.offset().top;\r\n    ref = this.getVisibleRows();\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      rowObj = ref[j];\r\n      if (rowObj.resource) {\r\n        el = rowObj.getTr('event');\r\n        elBottom = el.offset().top + el.outerHeight();\r\n        if (elBottom > scrollerTop) {\r\n          scroll.resourceId = rowObj.resource.id;\r\n          scroll.bottom = elBottom - scrollerTop;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return scroll;\r\n  };\r\n\r\n  ResourceTimelineView.prototype.applyResourceScroll = function(scroll) {\r\n    var el, elBottom, innerTop, row, scrollTop;\r\n    if (scroll.resourceId) {\r\n      row = this.getResourceRow(scroll.resourceId);\r\n      if (row) {\r\n        el = row.getTr('event');\r\n        if (el) {\r\n          innerTop = this.timeGrid.bodyScroller.canvas.el.offset().top;\r\n          elBottom = el.offset().top + el.outerHeight();\r\n          scrollTop = elBottom - scroll.bottom - innerTop;\r\n          this.timeGrid.bodyScroller.setScrollTop(scrollTop);\r\n          return this.resourceGrid.bodyScroller.setScrollTop(scrollTop);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  ResourceTimelineView.prototype.scrollToResource = function(resource) {\r\n    var el, innerTop, row, scrollTop;\r\n    row = this.getResourceRow(resource.id);\r\n    if (row) {\r\n      el = row.getTr('event');\r\n      if (el) {\r\n        innerTop = this.timeGrid.bodyScroller.canvas.el.offset().top;\r\n        scrollTop = el.offset().top - innerTop;\r\n        this.timeGrid.bodyScroller.setScrollTop(scrollTop);\r\n        return this.resourceGrid.bodyScroller.setScrollTop(scrollTop);\r\n      }\r\n    }\r\n  };\r\n\r\n  return ResourceTimelineView;\r\n\r\n})(TimelineView);\r\n\r\nResourceTimelineGrid = (function(superClass) {\r\n  extend(ResourceTimelineGrid, superClass);\r\n\r\n  function ResourceTimelineGrid() {\r\n    return ResourceTimelineGrid.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceTimelineGrid.mixin(ResourceGridMixin);\r\n\r\n  ResourceTimelineGrid.prototype.eventRows = null;\r\n\r\n  ResourceTimelineGrid.prototype.shownEventRows = null;\r\n\r\n  ResourceTimelineGrid.prototype.tbodyEl = null;\r\n\r\n  ResourceTimelineGrid.prototype.rowCoordCache = null;\r\n\r\n  ResourceTimelineGrid.prototype.spanToSegs = function(span) {\r\n    var calendar, j, len, resourceId, seg, segs;\r\n    segs = ResourceTimelineGrid.__super__.spanToSegs.apply(this, arguments);\r\n    calendar = this.view.calendar;\r\n    resourceId = span.resourceId;\r\n    if (resourceId) {\r\n      for (j = 0, len = segs.length; j < len; j++) {\r\n        seg = segs[j];\r\n        seg.resource = calendar.getResourceById(resourceId);\r\n        seg.resourceId = resourceId;\r\n      }\r\n    }\r\n    return segs;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.prepareHits = function() {\r\n    var row, trArray;\r\n    ResourceTimelineGrid.__super__.prepareHits.apply(this, arguments);\r\n    this.eventRows = this.view.getEventRows();\r\n    this.shownEventRows = (function() {\r\n      var j, len, ref, results;\r\n      ref = this.eventRows;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        row = ref[j];\r\n        if (row.isShown) {\r\n          results.push(row);\r\n        }\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    trArray = (function() {\r\n      var j, len, ref, results;\r\n      ref = this.shownEventRows;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        row = ref[j];\r\n        results.push(row.getTr('event')[0]);\r\n      }\r\n      return results;\r\n    }).call(this);\r\n    this.rowCoordCache = new CoordCache({\r\n      els: trArray,\r\n      isVertical: true\r\n    });\r\n    return this.rowCoordCache.build();\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.releaseHits = function() {\r\n    ResourceTimelineGrid.__super__.releaseHits.apply(this, arguments);\r\n    this.eventRows = null;\r\n    this.shownEventRows = null;\r\n    return this.rowCoordCache.clear();\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.queryHit = function(leftOffset, topOffset) {\r\n    var rowIndex, simpleHit;\r\n    simpleHit = ResourceTimelineGrid.__super__.queryHit.apply(this, arguments);\r\n    if (simpleHit) {\r\n      rowIndex = this.rowCoordCache.getVerticalIndex(topOffset);\r\n      if (rowIndex != null) {\r\n        return {\r\n          resourceId: this.shownEventRows[rowIndex].resource.id,\r\n          snap: simpleHit.snap,\r\n          component: this,\r\n          left: simpleHit.left,\r\n          right: simpleHit.right,\r\n          top: this.rowCoordCache.getTopOffset(rowIndex),\r\n          bottom: this.rowCoordCache.getBottomOffset(rowIndex)\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.getHitSpan = function(hit) {\r\n    var span;\r\n    span = this.getSnapRange(hit.snap);\r\n    span.resourceId = hit.resourceId;\r\n    return span;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.getHitEl = function(hit) {\r\n    return this.getSnapEl(hit.snap);\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.renderSkeleton = function() {\r\n    var rowContainerEl;\r\n    ResourceTimelineGrid.__super__.renderSkeleton.apply(this, arguments);\r\n    this.segContainerEl.remove();\r\n    this.segContainerEl = null;\r\n    rowContainerEl = $('<div class=\"fc-rows\"><table><tbody/></table></div>').appendTo(this.bodyScroller.canvas.contentEl);\r\n    return this.tbodyEl = rowContainerEl.find('tbody');\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.renderFgSegs = function(segs) {\r\n    var containerObj, containerSegs, j, len, pair, pairs, visiblePairs;\r\n    segs = this.renderFgSegEls(segs);\r\n    pairs = this.view.pairSegsWithRows(segs);\r\n    visiblePairs = [];\r\n    for (j = 0, len = pairs.length; j < len; j++) {\r\n      pair = pairs[j];\r\n      containerObj = pair[0], containerSegs = pair[1];\r\n      containerObj.fgSegs = containerSegs;\r\n      if (containerObj.isShown) {\r\n        containerObj.isSegsRendered = true;\r\n        visiblePairs.push(pair);\r\n      }\r\n    }\r\n    this.renderFgSegsInContainers(visiblePairs);\r\n    this.updateSegFollowers(segs);\r\n    return segs;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.unrenderFgSegs = function() {\r\n    var eventRow, eventRows, j, len;\r\n    this.clearSegFollowers();\r\n    eventRows = this.view.getEventRows();\r\n    for (j = 0, len = eventRows.length; j < len; j++) {\r\n      eventRow = eventRows[j];\r\n      eventRow.fgSegs = null;\r\n      eventRow.isSegsRendered = false;\r\n    }\r\n    return this.unrenderFgContainers(eventRows);\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.unrenderBgSegs = function() {\r\n    var eventRow, eventRows, j, len, results;\r\n    ResourceTimelineGrid.__super__.unrenderBgSegs.apply(this, arguments);\r\n    eventRows = this.view.getEventRows();\r\n    results = [];\r\n    for (j = 0, len = eventRows.length; j < len; j++) {\r\n      eventRow = eventRows[j];\r\n      results.push(eventRow.bgSegs = null);\r\n    }\r\n    return results;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.rowCntWithCustomBusinessHours = 0;\r\n\r\n  ResourceTimelineGrid.prototype.renderBusinessHours = function() {\r\n    if (this.rowCntWithCustomBusinessHours) {\r\n      return this.ensureIndividualBusinessHours();\r\n    } else {\r\n      return ResourceTimelineGrid.__super__.renderBusinessHours.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.unrenderBusinessHours = function() {\r\n    if (this.rowCntWithCustomBusinessHours) {\r\n      return this.clearIndividualBusinessHours();\r\n    } else {\r\n      return ResourceTimelineGrid.__super__.unrenderBusinessHours.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tEnsures that all rows have their individual business hours DISPLAYED.\r\n   */\r\n\r\n  ResourceTimelineGrid.prototype.ensureIndividualBusinessHours = function() {\r\n    var j, len, ref, results, row;\r\n    ref = this.view.getEventRows();\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      row = ref[j];\r\n      if (this.view.has('dateProfile') && !row.businessHourSegs) {\r\n        this.populateRowBusinessHoursSegs(row);\r\n      }\r\n      if (row.isShown) {\r\n        results.push(row.ensureBusinessHourSegsRendered());\r\n      } else {\r\n        results.push(void 0);\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n\r\n  /*\r\n  \tEnsures that all rows have their individual business hours CLEARED.\r\n   */\r\n\r\n  ResourceTimelineGrid.prototype.clearIndividualBusinessHours = function() {\r\n    var j, len, ref, results, row;\r\n    ref = this.view.getEventRows();\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      row = ref[j];\r\n      results.push(row.clearBusinessHourSegs());\r\n    }\r\n    return results;\r\n  };\r\n\r\n\r\n  /*\r\n  \tCalled when a row has been added to the tree data structure, but before it's rendered.\r\n  \tComputes and assigns business hour data *if necessary*. To be rendered soon after.\r\n   */\r\n\r\n  ResourceTimelineGrid.prototype.assignRowBusinessHourSegs = function(row) {\r\n    if (row.resource.businessHours) {\r\n      if (!this.rowCntWithCustomBusinessHours) {\r\n        TimelineGrid.prototype.unrenderBusinessHours.call(this);\r\n        this.ensureIndividualBusinessHours();\r\n      }\r\n      this.rowCntWithCustomBusinessHours += 1;\r\n    }\r\n    if (this.view.has('dateProfile') && this.rowCntWithCustomBusinessHours) {\r\n      return this.populateRowBusinessHoursSegs(row);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tCalled when a row has been removed from the tree data structure.\r\n  \tUnrenders the row's segs and, if necessary, forces businessHours back to generic rendering.\r\n   */\r\n\r\n  ResourceTimelineGrid.prototype.destroyRowBusinessHourSegs = function(row) {\r\n    row.clearBusinessHourSegs();\r\n    if (row.resource.businessHours) {\r\n      this.rowCntWithCustomBusinessHours -= 1;\r\n      if (!this.rowCntWithCustomBusinessHours) {\r\n        this.clearIndividualBusinessHours();\r\n        return TimelineGrid.prototype.renderBusinessHours.call(this);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tCompute and assign to row.businessHourSegs unconditionally\r\n   */\r\n\r\n  ResourceTimelineGrid.prototype.populateRowBusinessHoursSegs = function(row) {\r\n    var businessHourSegs, businessHours, businessHoursEvents;\r\n    businessHours = row.resource.businessHours || this.view.opt('businessHours');\r\n    businessHoursEvents = this.view.calendar.computeBusinessHourEvents(!this.isTimeScale, businessHours);\r\n    businessHourSegs = this.eventsToSegs(businessHoursEvents);\r\n    businessHourSegs = this.renderFillSegEls('businessHours', businessHourSegs);\r\n    row.businessHourSegs = businessHourSegs;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.renderFill = function(type, segs, className) {\r\n    var j, k, len, len1, nonResourceSegs, pair, pairs, resourceSegs, rowObj, rowSegs, seg, visiblePairs;\r\n    segs = this.renderFillSegEls(type, segs);\r\n    resourceSegs = [];\r\n    nonResourceSegs = [];\r\n    for (j = 0, len = segs.length; j < len; j++) {\r\n      seg = segs[j];\r\n      if (seg.resourceId) {\r\n        resourceSegs.push(seg);\r\n      } else {\r\n        nonResourceSegs.push(seg);\r\n      }\r\n    }\r\n    pairs = this.view.pairSegsWithRows(resourceSegs);\r\n    visiblePairs = [];\r\n    for (k = 0, len1 = pairs.length; k < len1; k++) {\r\n      pair = pairs[k];\r\n      rowObj = pair[0], rowSegs = pair[1];\r\n      if (type === 'bgEvent') {\r\n        rowObj.bgSegs = rowSegs;\r\n      }\r\n      if (rowObj.isShown) {\r\n        visiblePairs.push(pair);\r\n      }\r\n    }\r\n    if (nonResourceSegs.length) {\r\n      visiblePairs.unshift([this, nonResourceSegs]);\r\n    }\r\n    this.renderFillInContainers(type, visiblePairs, className);\r\n    return segs;\r\n  };\r\n\r\n  ResourceTimelineGrid.prototype.renderHelper = function(event, sourceSeg) {\r\n    var pairs, segs;\r\n    segs = this.eventToSegs(event);\r\n    segs = this.renderFgSegEls(segs);\r\n    pairs = this.view.pairSegsWithRows(segs);\r\n    return this.renderHelperSegsInContainers(pairs, sourceSeg);\r\n  };\r\n\r\n  return ResourceTimelineGrid;\r\n\r\n})(TimelineGrid);\r\n\r\nCOL_MIN_WIDTH = 30;\r\n\r\nSpreadsheet = (function() {\r\n  Spreadsheet.prototype.view = null;\r\n\r\n  Spreadsheet.prototype.headEl = null;\r\n\r\n  Spreadsheet.prototype.el = null;\r\n\r\n  Spreadsheet.prototype.tbodyEl = null;\r\n\r\n  Spreadsheet.prototype.headScroller = null;\r\n\r\n  Spreadsheet.prototype.bodyScroller = null;\r\n\r\n  Spreadsheet.prototype.joiner = null;\r\n\r\n  function Spreadsheet(view1) {\r\n    var colSpec;\r\n    this.view = view1;\r\n    this.isRTL = this.view.opt('isRTL');\r\n    this.givenColWidths = this.colWidths = (function() {\r\n      var j, len, ref, results;\r\n      ref = this.view.colSpecs;\r\n      results = [];\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        colSpec = ref[j];\r\n        results.push(colSpec.width);\r\n      }\r\n      return results;\r\n    }).call(this);\r\n  }\r\n\r\n  Spreadsheet.prototype.colGroupHtml = '';\r\n\r\n  Spreadsheet.prototype.headTable = null;\r\n\r\n  Spreadsheet.prototype.headColEls = null;\r\n\r\n  Spreadsheet.prototype.headCellEls = null;\r\n\r\n  Spreadsheet.prototype.bodyColEls = null;\r\n\r\n  Spreadsheet.prototype.bodyTable = null;\r\n\r\n  Spreadsheet.prototype.renderSkeleton = function() {\r\n    this.headScroller = new ClippedScroller({\r\n      overflowX: 'clipped-scroll',\r\n      overflowY: 'hidden'\r\n    });\r\n    this.headScroller.canvas = new ScrollerCanvas();\r\n    this.headScroller.render();\r\n    this.headScroller.canvas.contentEl.html(this.renderHeadHtml());\r\n    this.headEl.append(this.headScroller.el);\r\n    this.bodyScroller = new ClippedScroller({\r\n      overflowY: 'clipped-scroll'\r\n    });\r\n    this.bodyScroller.canvas = new ScrollerCanvas();\r\n    this.bodyScroller.render();\r\n    this.bodyScroller.canvas.contentEl.html('<div class=\"fc-rows\"><table>' + this.colGroupHtml + '<tbody/></table></div>');\r\n    this.tbodyEl = this.bodyScroller.canvas.contentEl.find('tbody');\r\n    this.el.append(this.bodyScroller.el);\r\n    this.joiner = new ScrollJoiner('horizontal', [this.headScroller, this.bodyScroller]);\r\n    this.headTable = this.headEl.find('table');\r\n    this.headColEls = this.headEl.find('col');\r\n    this.headCellEls = this.headScroller.canvas.contentEl.find('tr:last-child th');\r\n    this.bodyColEls = this.el.find('col');\r\n    this.bodyTable = this.el.find('table');\r\n    this.colMinWidths = this.computeColMinWidths();\r\n    this.applyColWidths();\r\n    return this.initColResizing();\r\n  };\r\n\r\n  Spreadsheet.prototype.renderHeadHtml = function() {\r\n    var colGroupHtml, colSpecs, html, i, isLast, isMainCol, j, k, len, len1, o;\r\n    colSpecs = this.view.colSpecs;\r\n    html = '<table>';\r\n    colGroupHtml = '<colgroup>';\r\n    for (j = 0, len = colSpecs.length; j < len; j++) {\r\n      o = colSpecs[j];\r\n      if (o.isMain) {\r\n        colGroupHtml += '<col class=\"fc-main-col\"/>';\r\n      } else {\r\n        colGroupHtml += '<col/>';\r\n      }\r\n    }\r\n    colGroupHtml += '</colgroup>';\r\n    this.colGroupHtml = colGroupHtml;\r\n    html += colGroupHtml;\r\n    html += '<tbody>';\r\n    if (this.view.superHeaderText) {\r\n      html += '<tr class=\"fc-super\">' + '<th class=\"' + this.view.widgetHeaderClass + '\" colspan=\"' + colSpecs.length + '\">' + '<div class=\"fc-cell-content\">' + '<span class=\"fc-cell-text\">' + htmlEscape(this.view.superHeaderText) + '</span>' + '</div>' + '</th>' + '</tr>';\r\n    }\r\n    html += '<tr>';\r\n    isMainCol = true;\r\n    for (i = k = 0, len1 = colSpecs.length; k < len1; i = ++k) {\r\n      o = colSpecs[i];\r\n      isLast = i === colSpecs.length - 1;\r\n      html += '<th class=\"' + this.view.widgetHeaderClass + '\">' + '<div>' + '<div class=\"fc-cell-content\">' + (o.isMain ? '<span class=\"fc-expander-space\">' + '<span class=\"fc-icon\"></span>' + '</span>' : '') + '<span class=\"fc-cell-text\">' + htmlEscape(o.labelText || '') + '</span>' + '</div>' + (!isLast ? '<div class=\"fc-col-resizer\"></div>' : '') + '</div>' + '</th>';\r\n    }\r\n    html += '</tr>';\r\n    html += '</tbody></table>';\r\n    return html;\r\n  };\r\n\r\n  Spreadsheet.prototype.givenColWidths = null;\r\n\r\n  Spreadsheet.prototype.colWidths = null;\r\n\r\n  Spreadsheet.prototype.colMinWidths = null;\r\n\r\n  Spreadsheet.prototype.tableWidth = null;\r\n\r\n  Spreadsheet.prototype.tableMinWidth = null;\r\n\r\n  Spreadsheet.prototype.initColResizing = function() {\r\n    return this.headEl.find('th .fc-col-resizer').each((function(_this) {\r\n      return function(i, resizerEl) {\r\n        resizerEl = $(resizerEl);\r\n        return resizerEl.on('mousedown', function(ev) {\r\n          return _this.colResizeMousedown(i, ev, resizerEl);\r\n        });\r\n      };\r\n    })(this));\r\n  };\r\n\r\n  Spreadsheet.prototype.colResizeMousedown = function(i, ev, resizerEl) {\r\n    var colWidths, dragListener, minWidth, origColWidth;\r\n    colWidths = this.colWidths = this.queryColWidths();\r\n    colWidths.pop();\r\n    colWidths.push(null);\r\n    origColWidth = colWidths[i];\r\n    minWidth = Math.min(this.colMinWidths[i], COL_MIN_WIDTH);\r\n    dragListener = new DragListener({\r\n      dragStart: (function(_this) {\r\n        return function() {\r\n          return resizerEl.addClass('fc-active');\r\n        };\r\n      })(this),\r\n      drag: (function(_this) {\r\n        return function(dx, dy) {\r\n          var width;\r\n          width = origColWidth + (_this.isRTL ? -dx : dx);\r\n          width = Math.max(width, minWidth);\r\n          colWidths[i] = width;\r\n          return _this.applyColWidths();\r\n        };\r\n      })(this),\r\n      dragEnd: (function(_this) {\r\n        return function() {\r\n          return resizerEl.removeClass('fc-active');\r\n        };\r\n      })(this)\r\n    });\r\n    return dragListener.startInteraction(ev);\r\n  };\r\n\r\n  Spreadsheet.prototype.applyColWidths = function() {\r\n    var allNumbers, anyPercentages, colMinWidths, colWidth, colWidths, cssWidth, cssWidths, defaultCssWidth, i, j, k, l, len, len1, len2, tableMinWidth, total;\r\n    colMinWidths = this.colMinWidths;\r\n    colWidths = this.colWidths;\r\n    allNumbers = true;\r\n    anyPercentages = false;\r\n    total = 0;\r\n    for (j = 0, len = colWidths.length; j < len; j++) {\r\n      colWidth = colWidths[j];\r\n      if (typeof colWidth === 'number') {\r\n        total += colWidth;\r\n      } else {\r\n        allNumbers = false;\r\n        if (colWidth) {\r\n          anyPercentages = true;\r\n        }\r\n      }\r\n    }\r\n    defaultCssWidth = anyPercentages && !this.view.isHGrouping ? 'auto' : '';\r\n    cssWidths = (function() {\r\n      var k, len1, results;\r\n      results = [];\r\n      for (i = k = 0, len1 = colWidths.length; k < len1; i = ++k) {\r\n        colWidth = colWidths[i];\r\n        results.push(colWidth != null ? colWidth : defaultCssWidth);\r\n      }\r\n      return results;\r\n    })();\r\n    tableMinWidth = 0;\r\n    for (i = k = 0, len1 = cssWidths.length; k < len1; i = ++k) {\r\n      cssWidth = cssWidths[i];\r\n      tableMinWidth += typeof cssWidth === 'number' ? cssWidth : colMinWidths[i];\r\n    }\r\n    for (i = l = 0, len2 = cssWidths.length; l < len2; i = ++l) {\r\n      cssWidth = cssWidths[i];\r\n      this.headColEls.eq(i).width(cssWidth);\r\n      this.bodyColEls.eq(i).width(cssWidth);\r\n    }\r\n    this.headScroller.canvas.setMinWidth(tableMinWidth);\r\n    this.bodyScroller.canvas.setMinWidth(tableMinWidth);\r\n    this.tableMinWidth = tableMinWidth;\r\n    return this.tableWidth = allNumbers ? total : void 0;\r\n  };\r\n\r\n  Spreadsheet.prototype.computeColMinWidths = function() {\r\n    var i, j, len, ref, results, width;\r\n    ref = this.givenColWidths;\r\n    results = [];\r\n    for (i = j = 0, len = ref.length; j < len; i = ++j) {\r\n      width = ref[i];\r\n      if (typeof width === 'number') {\r\n        results.push(width);\r\n      } else {\r\n        results.push(parseInt(this.headColEls.eq(i).css('min-width')) || COL_MIN_WIDTH);\r\n      }\r\n    }\r\n    return results;\r\n  };\r\n\r\n  Spreadsheet.prototype.queryColWidths = function() {\r\n    var j, len, node, ref, results;\r\n    ref = this.headCellEls;\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      node = ref[j];\r\n      results.push($(node).outerWidth());\r\n    }\r\n    return results;\r\n  };\r\n\r\n  Spreadsheet.prototype.updateWidth = function() {\r\n    this.headScroller.updateSize();\r\n    this.bodyScroller.updateSize();\r\n    this.joiner.update();\r\n    if (this.follower) {\r\n      return this.follower.update();\r\n    }\r\n  };\r\n\r\n  Spreadsheet.prototype.headHeight = function() {\r\n    var table;\r\n    table = this.headScroller.canvas.contentEl.find('table');\r\n    return table.height.apply(table, arguments);\r\n  };\r\n\r\n  return Spreadsheet;\r\n\r\n})();\r\n\r\n\r\n/*\r\nAn abstract node in a row-hierarchy tree.\r\nMay be a self-contained single row, a row with subrows,\r\nOR a grouping of rows without its own distinct row.\r\n */\r\n\r\nRowParent = (function() {\r\n  RowParent.prototype.view = null;\r\n\r\n  RowParent.prototype.parent = null;\r\n\r\n  RowParent.prototype.prevSibling = null;\r\n\r\n  RowParent.prototype.children = null;\r\n\r\n  RowParent.prototype.depth = 0;\r\n\r\n  RowParent.prototype.hasOwnRow = false;\r\n\r\n  RowParent.prototype.trHash = null;\r\n\r\n  RowParent.prototype.trs = null;\r\n\r\n  RowParent.prototype.isRendered = false;\r\n\r\n  RowParent.prototype.isExpanded = true;\r\n\r\n  RowParent.prototype.isShown = false;\r\n\r\n  function RowParent(view1) {\r\n    this.view = view1;\r\n    this.children = [];\r\n    this.trHash = {};\r\n    this.trs = $();\r\n  }\r\n\r\n\r\n  /*\r\n  \tAdds the given node as a child.\r\n  \tWill be inserted at the `index`. If not given, will be appended to the end.\r\n   */\r\n\r\n  RowParent.prototype.addChild = function(child, index) {\r\n    var children, j, len, node, ref;\r\n    child.remove();\r\n    children = this.children;\r\n    if (index != null) {\r\n      children.splice(index, 0, child);\r\n    } else {\r\n      index = children.length;\r\n      children.push(child);\r\n    }\r\n    child.prevSibling = index > 0 ? children[index - 1] : null;\r\n    if (index < children.length - 1) {\r\n      children[index + 1].prevSibling = child;\r\n    }\r\n    child.parent = this;\r\n    child.depth = this.depth + (this.hasOwnRow ? 1 : 0);\r\n    ref = child.getNodes();\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      node = ref[j];\r\n      node.added();\r\n    }\r\n    if (this.isShown && this.isExpanded) {\r\n      return child.show();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tRemoves the given child from the node. Assumes it is a direct child.\r\n  \tIf not a direct child, returns false and nothing happens.\r\n  \tUnrenders the child and triggers handlers.\r\n   */\r\n\r\n  RowParent.prototype.removeChild = function(child) {\r\n    var children, i, isFound, j, k, len, len1, ref, row, testChild;\r\n    children = this.children;\r\n    isFound = false;\r\n    for (i = j = 0, len = children.length; j < len; i = ++j) {\r\n      testChild = children[i];\r\n      if (testChild === child) {\r\n        isFound = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!isFound) {\r\n      return false;\r\n    } else {\r\n      if (i < children.length - 1) {\r\n        children[i + 1].prevSibling = child.prevSibling;\r\n      }\r\n      children.splice(i, 1);\r\n      child.recursivelyUnrender();\r\n      ref = child.getNodes();\r\n      for (k = 0, len1 = ref.length; k < len1; k++) {\r\n        row = ref[k];\r\n        row.removed();\r\n      }\r\n      child.parent = null;\r\n      child.prevSibling = null;\r\n      return child;\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tRemoves all of the node's children from the hierarchy. Unrenders them and triggers callbacks.\r\n  \tNOTE: batchRows/unbatchRows should probably be called before this happens :(\r\n   */\r\n\r\n  RowParent.prototype.removeChildren = function() {\r\n    var child, j, k, len, len1, ref, ref1;\r\n    ref = this.children;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      child = ref[j];\r\n      child.recursivelyUnrender();\r\n    }\r\n    ref1 = this.getDescendants();\r\n    for (k = 0, len1 = ref1.length; k < len1; k++) {\r\n      child = ref1[k];\r\n      child.removed();\r\n    }\r\n    return this.children = [];\r\n  };\r\n\r\n\r\n  /*\r\n  \tRemoves this node from its parent\r\n   */\r\n\r\n  RowParent.prototype.remove = function() {\r\n    if (this.parent) {\r\n      return this.parent.removeChild(this);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tGets the last direct child node\r\n   */\r\n\r\n  RowParent.prototype.getLastChild = function() {\r\n    var children;\r\n    children = this.children;\r\n    return children[children.length - 1];\r\n  };\r\n\r\n\r\n  /*\r\n  \tWalks backward in the hierarchy to find the previous row leaf node.\r\n  \tWhen looking at the hierarchy in a flat linear fashion, this is the revealed row just before the current.\r\n   */\r\n\r\n  RowParent.prototype.getPrevRow = function() {\r\n    var lastChild, node;\r\n    node = this;\r\n    while (node) {\r\n      if (node.prevSibling) {\r\n        node = node.prevSibling;\r\n        while ((lastChild = node.getLastChild())) {\r\n          node = lastChild;\r\n        }\r\n      } else {\r\n        node = node.parent;\r\n      }\r\n      if (node && node.hasOwnRow && node.isShown) {\r\n        return node;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  /*\r\n  \tReturns the first node in the subtree that has a revealed row\r\n   */\r\n\r\n  RowParent.prototype.getLeadingRow = function() {\r\n    if (this.hasOwnRow) {\r\n      return this;\r\n    } else if (this.isExpanded && this.children.length) {\r\n      return this.children[0].getLeadingRow();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tGenerates a flat array containing all the row-nodes of the subtree. Descendants + self\r\n   */\r\n\r\n  RowParent.prototype.getRows = function(batchArray) {\r\n    var child, j, len, ref;\r\n    if (batchArray == null) {\r\n      batchArray = [];\r\n    }\r\n    if (this.hasOwnRow) {\r\n      batchArray.push(this);\r\n    }\r\n    ref = this.children;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      child = ref[j];\r\n      child.getRows(batchArray);\r\n    }\r\n    return batchArray;\r\n  };\r\n\r\n\r\n  /*\r\n  \tGenerates a flat array containing all the nodes (row/non-row) of the subtree. Descendants + self\r\n   */\r\n\r\n  RowParent.prototype.getNodes = function(batchArray) {\r\n    var child, j, len, ref;\r\n    if (batchArray == null) {\r\n      batchArray = [];\r\n    }\r\n    batchArray.push(this);\r\n    ref = this.children;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      child = ref[j];\r\n      child.getNodes(batchArray);\r\n    }\r\n    return batchArray;\r\n  };\r\n\r\n\r\n  /*\r\n  \tGenerates a flat array containing all the descendant nodes the current node\r\n   */\r\n\r\n  RowParent.prototype.getDescendants = function() {\r\n    var batchArray, child, j, len, ref;\r\n    batchArray = [];\r\n    ref = this.children;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      child = ref[j];\r\n      child.getNodes(batchArray);\r\n    }\r\n    return batchArray;\r\n  };\r\n\r\n\r\n  /*\r\n  \tBuilds and populates the TRs for each row type. Inserts them into the DOM.\r\n  \tDoes this only for this single row. Not recursive. If not a row (hasOwnRow=false), does not render anything.\r\n  \tPRECONDITION: assumes the parent has already been rendered.\r\n   */\r\n\r\n  RowParent.prototype.render = function() {\r\n    var prevRow, ref, renderMethodName, tbody, tr, trNodes, type;\r\n    this.trHash = {};\r\n    trNodes = [];\r\n    if (this.hasOwnRow) {\r\n      prevRow = this.getPrevRow();\r\n      ref = this.view.tbodyHash;\r\n      for (type in ref) {\r\n        tbody = ref[type];\r\n        tr = $('<tr/>');\r\n        this.trHash[type] = tr;\r\n        trNodes.push(tr[0]);\r\n        renderMethodName = 'render' + capitaliseFirstLetter(type) + 'Content';\r\n        if (this[renderMethodName]) {\r\n          this[renderMethodName](tr);\r\n        }\r\n        if (prevRow) {\r\n          prevRow.trHash[type].after(tr);\r\n        } else {\r\n          tbody.prepend(tr);\r\n        }\r\n      }\r\n    }\r\n    this.trs = $(trNodes).on('click', '.fc-expander', proxy(this, 'toggleExpanded'));\r\n    return this.isRendered = true;\r\n  };\r\n\r\n\r\n  /*\r\n  \tUnpopulates and removes all of this row's TRs from the DOM. Only for this single row. Not recursive.\r\n  \tWill trigger \"hidden\".\r\n   */\r\n\r\n  RowParent.prototype.unrender = function() {\r\n    var ref, tr, type, unrenderMethodName;\r\n    if (this.isRendered) {\r\n      ref = this.trHash;\r\n      for (type in ref) {\r\n        tr = ref[type];\r\n        unrenderMethodName = 'unrender' + capitaliseFirstLetter(type) + 'Content';\r\n        if (this[unrenderMethodName]) {\r\n          this[unrenderMethodName](tr);\r\n        }\r\n      }\r\n      this.trHash = {};\r\n      this.trs.remove();\r\n      this.trs = $();\r\n      this.isRendered = false;\r\n      this.isShown = false;\r\n      return this.hidden();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tLike unrender(), but does it for this row AND all descendants.\r\n  \tNOTE: batchRows/unbatchRows should probably be called before this happens :(\r\n   */\r\n\r\n  RowParent.prototype.recursivelyUnrender = function() {\r\n    var child, j, len, ref, results;\r\n    this.unrender();\r\n    ref = this.children;\r\n    results = [];\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      child = ref[j];\r\n      results.push(child.recursivelyUnrender());\r\n    }\r\n    return results;\r\n  };\r\n\r\n\r\n  /*\r\n  \tA simple getter for retrieving a TR jQuery object of a certain row type\r\n   */\r\n\r\n  RowParent.prototype.getTr = function(type) {\r\n    return this.trHash[type];\r\n  };\r\n\r\n\r\n  /*\r\n  \tRenders this row if not already rendered, making sure it is visible.\r\n  \tAlso renders descendants of this subtree, based on whether they are expanded or not.\r\n  \tNOTE: If called externally, batchRows/unbatchRows should probably be called before this happens :(\r\n   */\r\n\r\n  RowParent.prototype.show = function() {\r\n    var child, j, len, ref, results;\r\n    if (!this.isShown) {\r\n      if (!this.isRendered) {\r\n        this.render();\r\n      } else {\r\n        this.trs.css('display', '');\r\n      }\r\n      if (this.ensureSegsRendered) {\r\n        this.ensureSegsRendered();\r\n      }\r\n      if (this.isExpanded) {\r\n        this.indicateExpanded();\r\n      } else {\r\n        this.indicateCollapsed();\r\n      }\r\n      this.isShown = true;\r\n      this.shown();\r\n      if (this.isExpanded) {\r\n        ref = this.children;\r\n        results = [];\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          child = ref[j];\r\n          results.push(child.show());\r\n        }\r\n        return results;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tTemporarily hides this node's TRs (if applicable) as well as all nodes in the subtree\r\n   */\r\n\r\n  RowParent.prototype.hide = function() {\r\n    var child, j, len, ref, results;\r\n    if (this.isShown) {\r\n      if (this.isRendered) {\r\n        this.trs.hide();\r\n      }\r\n      this.isShown = false;\r\n      this.hidden();\r\n      if (this.isExpanded) {\r\n        ref = this.children;\r\n        results = [];\r\n        for (j = 0, len = ref.length; j < len; j++) {\r\n          child = ref[j];\r\n          results.push(child.hide());\r\n        }\r\n        return results;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tReveals this node's children if they have not already been revealed. Changes any expander icon.\r\n   */\r\n\r\n  RowParent.prototype.expand = function() {\r\n    var child, j, len, ref;\r\n    if (!this.isExpanded) {\r\n      this.isExpanded = true;\r\n      this.indicateExpanded();\r\n      this.view.batchRows();\r\n      ref = this.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        child.show();\r\n      }\r\n      this.view.unbatchRows();\r\n      return this.animateExpand();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tHides this node's children if they are not already hidden. Changes any expander icon.\r\n   */\r\n\r\n  RowParent.prototype.collapse = function() {\r\n    var child, j, len, ref;\r\n    if (this.isExpanded) {\r\n      this.isExpanded = false;\r\n      this.indicateCollapsed();\r\n      this.view.batchRows();\r\n      ref = this.children;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        child = ref[j];\r\n        child.hide();\r\n      }\r\n      return this.view.unbatchRows();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tSwitches between expanded/collapsed states\r\n   */\r\n\r\n  RowParent.prototype.toggleExpanded = function() {\r\n    if (this.isExpanded) {\r\n      return this.collapse();\r\n    } else {\r\n      return this.expand();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tChanges the expander icon to the \"expanded\" state\r\n   */\r\n\r\n  RowParent.prototype.indicateExpanded = function() {\r\n    return this.trs.find('.fc-expander .fc-icon').removeClass(this.getCollapsedIcon()).addClass(this.getExpandedIcon());\r\n  };\r\n\r\n\r\n  /*\r\n  \tChanges the expander icon to the \"collapsed\" state\r\n   */\r\n\r\n  RowParent.prototype.indicateCollapsed = function() {\r\n    return this.trs.find('.fc-expander .fc-icon').removeClass(this.getExpandedIcon()).addClass(this.getCollapsedIcon());\r\n  };\r\n\r\n\r\n  /*\r\n   */\r\n\r\n  RowParent.prototype.enableExpanding = function() {\r\n    return this.trs.find('.fc-expander-space').addClass('fc-expander');\r\n  };\r\n\r\n\r\n  /*\r\n   */\r\n\r\n  RowParent.prototype.disableExpanding = function() {\r\n    return this.trs.find('.fc-expander-space').removeClass('fc-expander').find('.fc-icon').removeClass(this.getExpandedIcon()).removeClass(this.getCollapsedIcon());\r\n  };\r\n\r\n  RowParent.prototype.getExpandedIcon = function() {\r\n    return 'fc-icon-down-triangle';\r\n  };\r\n\r\n  RowParent.prototype.getCollapsedIcon = function() {\r\n    var dir;\r\n    dir = this.view.isRTL ? 'left' : 'right';\r\n    return 'fc-icon-' + dir + '-triangle';\r\n  };\r\n\r\n\r\n  /*\r\n  \tCauses a slide-down CSS transition to demonstrate that the expand has happened\r\n   */\r\n\r\n  RowParent.prototype.animateExpand = function() {\r\n    var ref, ref1, trs;\r\n    trs = (ref = this.children[0]) != null ? (ref1 = ref.getLeadingRow()) != null ? ref1.trs : void 0 : void 0;\r\n    if (trs) {\r\n      trs.addClass('fc-collapsed');\r\n      setTimeout(function() {\r\n        trs.addClass('fc-transitioning');\r\n        return trs.removeClass('fc-collapsed');\r\n      });\r\n      return trs.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function() {\r\n        return trs.removeClass('fc-transitioning');\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tFind each TRs \"inner div\" (div within first cell). This div controls each TRs height.\r\n  \tReturns the max pixel height.\r\n   */\r\n\r\n  RowParent.prototype.getMaxTrInnerHeight = function() {\r\n    var max;\r\n    max = 0;\r\n    $.each(this.trHash, (function(_this) {\r\n      return function(type, tr) {\r\n        var innerEl;\r\n        innerEl = getOwnCells(tr).find('> div:not(.fc-cell-content):first');\r\n        return max = Math.max(innerEl.height(), max);\r\n      };\r\n    })(this));\r\n    return max;\r\n  };\r\n\r\n\r\n  /*\r\n  \tFind each TRs \"inner div\" and sets all of their heights to the same value.\r\n   */\r\n\r\n  RowParent.prototype.setTrInnerHeight = function(height) {\r\n    return $.each(this.trHash, (function(_this) {\r\n      return function(type, tr) {\r\n        return getOwnCells(tr).find('> div:not(.fc-cell-content):first').height(height);\r\n      };\r\n    })(this));\r\n  };\r\n\r\n\r\n  /*\r\n  \tTriggered when the current node has been shown (either freshly rendered or re-shown)\r\n  \twhen it had previously been unrendered or hidden. `shown` does not bubble up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.shown = function() {\r\n    if (this.hasOwnRow) {\r\n      return this.rowShown(this);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tTriggered when the current node has been hidden (either temporarily or permanently)\r\n  \twhen it had previously been shown. `hidden` does not bubble up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.hidden = function() {\r\n    if (this.hasOwnRow) {\r\n      return this.rowHidden(this);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tJust like `shown`, but only triggered for nodes that are actual rows. Bubbles up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.rowShown = function(row) {\r\n    return (this.parent || this.view).rowShown(row);\r\n  };\r\n\r\n\r\n  /*\r\n  \tJust like `hidden`, but only triggered for nodes that are actual rows. Bubbles up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.rowHidden = function(row) {\r\n    return (this.parent || this.view).rowHidden(row);\r\n  };\r\n\r\n\r\n  /*\r\n  \tTriggered when the current node has been added to the hierarchy. `added` does not bubble up.\r\n   */\r\n\r\n  RowParent.prototype.added = function() {\r\n    if (this.hasOwnRow) {\r\n      return this.rowAdded(this);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tTriggered when the current node has been removed from the hierarchy. `removed` does not bubble up.\r\n   */\r\n\r\n  RowParent.prototype.removed = function() {\r\n    if (this.hasOwnRow) {\r\n      return this.rowRemoved(this);\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tJust like `added`, but only triggered for nodes that are actual rows. Bubbles up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.rowAdded = function(row) {\r\n    return (this.parent || this.view).rowAdded(row);\r\n  };\r\n\r\n\r\n  /*\r\n  \tJust like `removed`, but only triggered for nodes that are actual rows. Bubbles up the hierarchy.\r\n   */\r\n\r\n  RowParent.prototype.rowRemoved = function(row) {\r\n    return (this.parent || this.view).rowRemoved(row);\r\n  };\r\n\r\n  return RowParent;\r\n\r\n})();\r\n\r\n\r\n/*\r\nAn abstract node in a row-hierarchy tree that contains other nodes.\r\nWill have some sort of rendered label indicating the grouping,\r\nup to the subclass for determining what to do with it.\r\n */\r\n\r\nRowGroup = (function(superClass) {\r\n  extend(RowGroup, superClass);\r\n\r\n  RowGroup.prototype.groupSpec = null;\r\n\r\n  RowGroup.prototype.groupValue = null;\r\n\r\n  function RowGroup(view, groupSpec1, groupValue1) {\r\n    this.groupSpec = groupSpec1;\r\n    this.groupValue = groupValue1;\r\n    RowGroup.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n\r\n  /*\r\n  \tCalled when this row (if it renders a row) or a subrow is removed\r\n   */\r\n\r\n  RowGroup.prototype.rowRemoved = function(row) {\r\n    RowGroup.__super__.rowRemoved.apply(this, arguments);\r\n    if (row !== this && !this.children.length) {\r\n      return this.remove();\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tRenders the content wrapper element that will be inserted into this row's TD cell\r\n   */\r\n\r\n  RowGroup.prototype.renderGroupContentEl = function() {\r\n    var contentEl, filter;\r\n    contentEl = $('<div class=\"fc-cell-content\" />').append(this.renderGroupTextEl());\r\n    filter = this.groupSpec.render;\r\n    if (typeof filter === 'function') {\r\n      contentEl = filter(contentEl, this.groupValue) || contentEl;\r\n    }\r\n    return contentEl;\r\n  };\r\n\r\n\r\n  /*\r\n  \tRenders the text span element that will be inserted into this row's TD cell.\r\n  \tGoes within the content element.\r\n   */\r\n\r\n  RowGroup.prototype.renderGroupTextEl = function() {\r\n    var filter, text;\r\n    text = this.groupValue || '';\r\n    filter = this.groupSpec.text;\r\n    if (typeof filter === 'function') {\r\n      text = filter(text) || text;\r\n    }\r\n    return $('<span class=\"fc-cell-text\" />').text(text);\r\n  };\r\n\r\n  return RowGroup;\r\n\r\n})(RowParent);\r\n\r\n\r\n/*\r\nA row grouping that renders as a single solid row that spans width-wise (like a horizontal rule)\r\n */\r\n\r\nHRowGroup = (function(superClass) {\r\n  extend(HRowGroup, superClass);\r\n\r\n  function HRowGroup() {\r\n    return HRowGroup.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  HRowGroup.prototype.hasOwnRow = true;\r\n\r\n\r\n  /*\r\n  \tRenders this row's TR for the \"spreadsheet\" quadrant, the area with info about each resource\r\n   */\r\n\r\n  HRowGroup.prototype.renderSpreadsheetContent = function(tr) {\r\n    var contentEl;\r\n    contentEl = this.renderGroupContentEl();\r\n    contentEl.prepend('<span class=\"fc-expander\">' + '<span class=\"fc-icon\"></span>' + '</span>');\r\n    return $('<td class=\"fc-divider\" />').attr('colspan', this.view.colSpecs.length).append($('<div/>').append(contentEl)).appendTo(tr);\r\n  };\r\n\r\n\r\n  /*\r\n  \tRenders this row's TR for the quadrant that contains a resource's events\r\n   */\r\n\r\n  HRowGroup.prototype.renderEventContent = function(tr) {\r\n    return tr.append('<td class=\"fc-divider\"> <div/> </td>');\r\n  };\r\n\r\n  return HRowGroup;\r\n\r\n})(RowGroup);\r\n\r\n\r\n/*\r\nA row grouping that renders as a tall multi-cell vertical span in the \"spreadsheet\" area\r\n */\r\n\r\nVRowGroup = (function(superClass) {\r\n  extend(VRowGroup, superClass);\r\n\r\n  function VRowGroup() {\r\n    return VRowGroup.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  VRowGroup.prototype.rowspan = 0;\r\n\r\n  VRowGroup.prototype.leadingTr = null;\r\n\r\n  VRowGroup.prototype.groupTd = null;\r\n\r\n\r\n  /*\r\n  \tCalled when a row somewhere within the grouping is shown\r\n   */\r\n\r\n  VRowGroup.prototype.rowShown = function(row) {\r\n    this.rowspan += 1;\r\n    this.renderRowspan();\r\n    return VRowGroup.__super__.rowShown.apply(this, arguments);\r\n  };\r\n\r\n\r\n  /*\r\n  \tCalled when a row somewhere within the grouping is hidden\r\n   */\r\n\r\n  VRowGroup.prototype.rowHidden = function(row) {\r\n    this.rowspan -= 1;\r\n    this.renderRowspan();\r\n    return VRowGroup.__super__.rowHidden.apply(this, arguments);\r\n  };\r\n\r\n\r\n  /*\r\n  \tMakes sure the groupTd has the correct rowspan / place in the DOM.\r\n  \tPRECONDITION: in the case of multiple group nesting, a child's renderRowspan()\r\n  \twill be called before the parent's renderRowspan().\r\n   */\r\n\r\n  VRowGroup.prototype.renderRowspan = function() {\r\n    var leadingTr;\r\n    if (this.rowspan) {\r\n      if (!this.groupTd) {\r\n        this.groupTd = $('<td class=\"' + this.view.widgetContentClass + '\"/>').append(this.renderGroupContentEl());\r\n      }\r\n      this.groupTd.attr('rowspan', this.rowspan);\r\n      leadingTr = this.getLeadingRow().getTr('spreadsheet');\r\n      if (leadingTr !== this.leadingTr) {\r\n        if (leadingTr) {\r\n          leadingTr.prepend(this.groupTd);\r\n        }\r\n        return this.leadingTr = leadingTr;\r\n      }\r\n    } else {\r\n      if (this.groupTd) {\r\n        this.groupTd.remove();\r\n        this.groupTd = null;\r\n      }\r\n      return this.leadingTr = null;\r\n    }\r\n  };\r\n\r\n  return VRowGroup;\r\n\r\n})(RowGroup);\r\n\r\nEventRow = (function(superClass) {\r\n  extend(EventRow, superClass);\r\n\r\n  function EventRow() {\r\n    return EventRow.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  EventRow.prototype.hasOwnRow = true;\r\n\r\n  EventRow.prototype.segContainerEl = null;\r\n\r\n  EventRow.prototype.segContainerHeight = null;\r\n\r\n  EventRow.prototype.innerEl = null;\r\n\r\n  EventRow.prototype.bgSegContainerEl = null;\r\n\r\n  EventRow.prototype.isSegsRendered = false;\r\n\r\n  EventRow.prototype.isBusinessHourSegsRendered = false;\r\n\r\n  EventRow.prototype.businessHourSegs = null;\r\n\r\n  EventRow.prototype.bgSegs = null;\r\n\r\n  EventRow.prototype.fgSegs = null;\r\n\r\n  EventRow.prototype.renderEventContent = function(tr) {\r\n    tr.html('<td class=\"' + this.view.widgetContentClass + '\"> <div> <div class=\"fc-event-container\" /> </div> </td>');\r\n    this.segContainerEl = tr.find('.fc-event-container');\r\n    this.innerEl = this.bgSegContainerEl = tr.find('td > div');\r\n    return this.ensureSegsRendered();\r\n  };\r\n\r\n  EventRow.prototype.ensureSegsRendered = function() {\r\n    if (!this.isSegsRendered) {\r\n      this.ensureBusinessHourSegsRendered();\r\n      if (this.bgSegs) {\r\n        this.view.timeGrid.renderFillInContainer('bgEvent', this, this.bgSegs);\r\n      }\r\n      if (this.fgSegs) {\r\n        this.view.timeGrid.renderFgSegsInContainers([[this, this.fgSegs]]);\r\n      }\r\n      return this.isSegsRendered = true;\r\n    }\r\n  };\r\n\r\n  EventRow.prototype.ensureBusinessHourSegsRendered = function() {\r\n    if (this.businessHourSegs && !this.isBusinessHourSegsRendered) {\r\n      this.view.timeGrid.renderFillInContainer('businessHours', this, this.businessHourSegs, 'bgevent');\r\n      return this.isBusinessHourSegsRendered = true;\r\n    }\r\n  };\r\n\r\n  EventRow.prototype.unrenderEventContent = function() {\r\n    this.clearBusinessHourSegs();\r\n    this.bgSegs = null;\r\n    this.fgSegs = null;\r\n    return this.isSegsRendered = false;\r\n  };\r\n\r\n  EventRow.prototype.clearBusinessHourSegs = function() {\r\n    var j, len, ref, seg;\r\n    if (this.businessHourSegs) {\r\n      ref = this.businessHourSegs;\r\n      for (j = 0, len = ref.length; j < len; j++) {\r\n        seg = ref[j];\r\n        if (seg.el) {\r\n          seg.el.remove();\r\n        }\r\n      }\r\n      this.businessHourSegs = null;\r\n    }\r\n    return this.isBusinessHourSegsRendered = false;\r\n  };\r\n\r\n  return EventRow;\r\n\r\n})(RowParent);\r\n\r\n\r\n/*\r\nA row that renders information about a particular resource, as well as it events (handled by superclass)\r\n */\r\n\r\nResourceRow = (function(superClass) {\r\n  extend(ResourceRow, superClass);\r\n\r\n  ResourceRow.prototype.resource = null;\r\n\r\n  function ResourceRow(view, resource1) {\r\n    this.resource = resource1;\r\n    ResourceRow.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n\r\n  /*\r\n  \tCalled when a row in the tree has been added\r\n   */\r\n\r\n  ResourceRow.prototype.rowAdded = function(row) {\r\n    ResourceRow.__super__.rowAdded.apply(this, arguments);\r\n    if (row !== this && this.isRendered) {\r\n      if (this.children.length === 1) {\r\n        this.enableExpanding();\r\n        if (this.isExpanded) {\r\n          return this.indicateExpanded();\r\n        } else {\r\n          return this.indicateCollapsed();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  /*\r\n  \tCalled when a row in the tree has been removed\r\n   */\r\n\r\n  ResourceRow.prototype.rowRemoved = function(row) {\r\n    ResourceRow.__super__.rowRemoved.apply(this, arguments);\r\n    if (row !== this && this.isRendered) {\r\n      if (!this.children.length) {\r\n        return this.disableExpanding();\r\n      }\r\n    }\r\n  };\r\n\r\n  ResourceRow.prototype.render = function() {\r\n    ResourceRow.__super__.render.apply(this, arguments);\r\n    if (this.children.length > 0) {\r\n      this.enableExpanding();\r\n    } else {\r\n      this.disableExpanding();\r\n    }\r\n    return this.view.publiclyTrigger('resourceRender', this.resource, this.resource, this.getTr('spreadsheet').find('> td'), this.getTr('event').find('> td'));\r\n  };\r\n\r\n  ResourceRow.prototype.renderEventContent = function(tr) {\r\n    ResourceRow.__super__.renderEventContent.apply(this, arguments);\r\n    return tr.attr('data-resource-id', this.resource.id);\r\n  };\r\n\r\n\r\n  /*\r\n  \tPopulates the TR with cells containing data about the resource\r\n   */\r\n\r\n  ResourceRow.prototype.renderSpreadsheetContent = function(tr) {\r\n    var colSpec, contentEl, input, j, len, ref, resource, td, text;\r\n    resource = this.resource;\r\n    ref = this.view.colSpecs;\r\n    for (j = 0, len = ref.length; j < len; j++) {\r\n      colSpec = ref[j];\r\n      if (colSpec.group) {\r\n        continue;\r\n      }\r\n      input = colSpec.field ? resource[colSpec.field] || null : resource;\r\n      text = typeof colSpec.text === 'function' ? colSpec.text(resource, input) : input;\r\n      contentEl = $('<div class=\"fc-cell-content\">' + (colSpec.isMain ? this.renderGutterHtml() : '') + '<span class=\"fc-cell-text\">' + (text ? htmlEscape(text) : '&nbsp;') + '</span>' + '</div>');\r\n      if (typeof colSpec.render === 'function') {\r\n        contentEl = colSpec.render(resource, contentEl, input) || contentEl;\r\n      }\r\n      td = $('<td class=\"' + this.view.widgetContentClass + '\"/>').append(contentEl);\r\n      if (colSpec.isMain) {\r\n        td.wrapInner('<div/>');\r\n      }\r\n      tr.append(td);\r\n    }\r\n    return tr.attr('data-resource-id', resource.id);\r\n  };\r\n\r\n\r\n  /*\r\n  \tRenders the HTML responsible for the subrow expander area,\r\n  \tas well as the space before it (used to align expanders of similar depths)\r\n   */\r\n\r\n  ResourceRow.prototype.renderGutterHtml = function() {\r\n    var html, i, j, ref;\r\n    html = '';\r\n    for (i = j = 0, ref = this.depth; j < ref; i = j += 1) {\r\n      html += '<span class=\"fc-icon\"/>';\r\n    }\r\n    html += '<span class=\"fc-expander-space\">' + '<span class=\"fc-icon\"></span>' + '</span>';\r\n    return html;\r\n  };\r\n\r\n  return ResourceRow;\r\n\r\n})(EventRow);\r\n\r\nFC.views.timeline.resourceClass = ResourceTimelineView;\r\n\r\nResourceAgendaView = (function(superClass) {\r\n  extend(ResourceAgendaView, superClass);\r\n\r\n  function ResourceAgendaView() {\r\n    return ResourceAgendaView.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceAgendaView.mixin(VertResourceViewMixin);\r\n\r\n  ResourceAgendaView.prototype.timeGridClass = ResourceTimeGrid;\r\n\r\n  ResourceAgendaView.prototype.dayGridClass = ResourceDayGrid;\r\n\r\n  ResourceAgendaView.prototype.renderHead = function() {\r\n    ResourceAgendaView.__super__.renderHead.apply(this, arguments);\r\n    return this.timeGrid.processHeadResourceEls(this.headContainerEl);\r\n  };\r\n\r\n  ResourceAgendaView.prototype.setResourcesOnGrids = function(resources) {\r\n    this.timeGrid.setResources(resources);\r\n    if (this.dayGrid) {\r\n      return this.dayGrid.setResources(resources);\r\n    }\r\n  };\r\n\r\n  ResourceAgendaView.prototype.unsetResourcesOnGrids = function() {\r\n    this.timeGrid.unsetResources();\r\n    if (this.dayGrid) {\r\n      return this.dayGrid.unsetResources();\r\n    }\r\n  };\r\n\r\n  return ResourceAgendaView;\r\n\r\n})(FC.AgendaView);\r\n\r\nFC.views.agenda.queryResourceClass = function(viewSpec) {\r\n  var ref;\r\n  if ((ref = viewSpec.options.groupByResource || viewSpec.options.groupByDateAndResource) != null ? ref : viewSpec.duration && viewSpec.duration.as('days') === 1) {\r\n    return ResourceAgendaView;\r\n  }\r\n};\r\n\r\nResourceBasicView = (function(superClass) {\r\n  extend(ResourceBasicView, superClass);\r\n\r\n  function ResourceBasicView() {\r\n    return ResourceBasicView.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceBasicView.mixin(VertResourceViewMixin);\r\n\r\n  ResourceBasicView.prototype.dayGridClass = ResourceDayGrid;\r\n\r\n  ResourceBasicView.prototype.renderHead = function() {\r\n    ResourceBasicView.__super__.renderHead.apply(this, arguments);\r\n    return this.dayGrid.processHeadResourceEls(this.headContainerEl);\r\n  };\r\n\r\n  ResourceBasicView.prototype.setResourcesOnGrids = function(resources) {\r\n    return this.dayGrid.setResources(resources);\r\n  };\r\n\r\n  ResourceBasicView.prototype.unsetResourcesOnGrids = function() {\r\n    return this.dayGrid.unsetResources();\r\n  };\r\n\r\n  return ResourceBasicView;\r\n\r\n})(FC.BasicView);\r\n\r\nResourceMonthView = (function(superClass) {\r\n  extend(ResourceMonthView, superClass);\r\n\r\n  function ResourceMonthView() {\r\n    return ResourceMonthView.__super__.constructor.apply(this, arguments);\r\n  }\r\n\r\n  ResourceMonthView.mixin(VertResourceViewMixin);\r\n\r\n  ResourceMonthView.prototype.dayGridClass = ResourceDayGrid;\r\n\r\n  ResourceMonthView.prototype.renderHead = function() {\r\n    ResourceMonthView.__super__.renderHead.apply(this, arguments);\r\n    return this.dayGrid.processHeadResourceEls(this.headContainerEl);\r\n  };\r\n\r\n  ResourceMonthView.prototype.setResourcesOnGrids = function(resources) {\r\n    return this.dayGrid.setResources(resources);\r\n  };\r\n\r\n  ResourceMonthView.prototype.unsetResourcesOnGrids = function() {\r\n    return this.dayGrid.unsetResources();\r\n  };\r\n\r\n  return ResourceMonthView;\r\n\r\n})(FC.MonthView);\r\n\r\nFC.views.basic.queryResourceClass = function(viewSpec) {\r\n  var ref;\r\n  if ((ref = viewSpec.options.groupByResource || viewSpec.options.groupByDateAndResource) != null ? ref : viewSpec.duration && viewSpec.duration.as('days') === 1) {\r\n    return ResourceBasicView;\r\n  }\r\n};\r\n\r\nFC.views.month.queryResourceClass = function(viewSpec) {\r\n  if (viewSpec.options.groupByResource || viewSpec.options.groupByDateAndResource) {\r\n    return ResourceMonthView;\r\n  }\r\n};\r\n\r\nRELEASE_DATE = '2017-04-27';\r\n\r\nUPGRADE_WINDOW = {\r\n  years: 1,\r\n  weeks: 1\r\n};\r\n\r\nLICENSE_INFO_URL = 'http://fullcalendar.io/scheduler/license/';\r\n\r\nPRESET_LICENSE_KEYS = ['GPL-My-Project-Is-Open-Source', 'CC-Attribution-NonCommercial-NoDerivatives'];\r\n\r\nprocessLicenseKey = function(key, containerEl) {\r\n  if (!isImmuneUrl(window.location.href) && !isValidKey(key)) {\r\n    if (!detectWarningInContainer(containerEl)) {\r\n      return renderingWarningInContainer('Please use a valid license key. <a href=\"' + LICENSE_INFO_URL + '\">More Info</a>', containerEl);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n/*\r\nThis decryption is not meant to be bulletproof. Just a way to remind about an upgrade.\r\n */\r\n\r\nisValidKey = function(key) {\r\n  var minPurchaseDate, parts, purchaseDate, releaseDate;\r\n  if ($.inArray(key, PRESET_LICENSE_KEYS) !== -1) {\r\n    return true;\r\n  }\r\n  parts = (key || '').match(/^(\\d+)\\-fcs\\-(\\d+)$/);\r\n  if (parts && parts[1].length === 10) {\r\n    purchaseDate = moment.utc(parseInt(parts[2]) * 1000);\r\n    releaseDate = moment.utc(FC.mockSchedulerReleaseDate || RELEASE_DATE);\r\n    if (releaseDate.isValid()) {\r\n      minPurchaseDate = releaseDate.clone().subtract(UPGRADE_WINDOW);\r\n      if (purchaseDate.isAfter(minPurchaseDate)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nisImmuneUrl = function(url) {\r\n  return Boolean(url.match(/\\w+\\:\\/\\/fullcalendar\\.io\\/|\\/demos\\/[\\w-]+\\.html$/));\r\n};\r\n\r\nrenderingWarningInContainer = function(messageHtml, containerEl) {\r\n  return containerEl.append($('<div class=\"fc-license-message\" />').html(messageHtml));\r\n};\r\n\r\ndetectWarningInContainer = function(containerEl) {\r\n  return containerEl.find('.fc-license-message').length >= 1;\r\n};\r\n\r\n});\r\n","(function($)\r\n{\r\n\t/**\r\n\t * DxScheduler - a jQuery plugin that renders rooms and student groups scheduling UI\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.DxScheduler = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.DxScheduler.defaults, opts);\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.DxScheduler(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.DxScheduler.defaults = {\r\n            root_url: getBaseUrl(),\r\n            scheduler_url: \"calendar/scheduler/\",\r\n            group_prefix: \"G\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * DxScheduler constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.DxScheduler = function(root, opts)\r\n\t{\r\n            $.data(root, 'DxScheduler', this);\r\n            var self = this;\r\n            this.options = opts;\r\n            this.root = $(root);\r\n            this.subjects_list_id = this.root.data('subjects-list-id');\r\n            this.groups_list_id = this.root.data(\"groups-list-id\");\r\n            this.days_list_id = this.root.data(\"days-list-id\"); \r\n            this.rooms_list_id = this.root.data(\"rooms-list-id\");\r\n            this.coffee_list_id = this.root.data(\"coffee-list-id\");\r\n            this.cbo_rooms_refreshing = false;\r\n            this.publish_ids = \"\";\r\n            \r\n            this.room_id = this.root.data(\"room-id\");\r\n            this.current_date = this.root.data(\"crrent-date\");\r\n            \r\n            var addSubjToDiv = function(new_id, title) {\r\n                //<div class='dx-event' data-subject-id=\"{{ $subj->id }}\"><span class=\"dx-item-title\">{{ $subj->title_full }}</span><a class=\"pull-right\" href=\"javascript:;\"><i class=\"fa fa-edit dx-subj-edit\"></i></a></div>\r\n                var n = $(\"<div>\");\r\n                n.addClass('dx-event');\r\n                n.attr(\"data-subject-id\", new_id);\r\n\r\n                var sp = $(\"<span>\").addClass(\"dx-item-title\").text(title);\r\n                sp.appendTo(n);                            \r\n\r\n                var a = $(\"<a class='pull-right dx-subj-edit' href='javascript:;'><i class='fa fa-edit'></i></a>\");\r\n                a.appendTo(n);\r\n                n.appendTo(\"#external-events\");\r\n                addDr(n);\r\n            };\r\n            \r\n            var newSubjectOpen = function() {\r\n                open_form('form', 0, self.subjects_list_id, 0, 0, \"\", 1, \"\", {\r\n                    after_close: function(frm)\r\n                    {\r\n                        var new_id = parseInt(frm.find(\"[name=item_id]\").val());\r\n                        if (new_id > 0 ) {\r\n                            // add to container\r\n                            addSubjToDiv(new_id, frm.find(\"[name=title]\").val());\r\n                        }\r\n                    }\r\n                });\r\n            };  \r\n            \r\n            this.root.find(\".dx-new-btn\").click(function() {                \r\n                newSubjectOpen();\r\n            });\r\n            \r\n            var newGroupOpen = function() {\r\n                open_form('form', 0, self.groups_list_id, 0, 0, \"\", 1, \"\", {\r\n                    after_close: function(frm)\r\n                    {\r\n                        var new_id = parseInt(frm.find(\"[name=item_id]\").val());\r\n                        if (new_id > 0 ) {\r\n                            refreshAllData();\r\n                        }\r\n                    }\r\n                });\r\n            };  \r\n            \r\n            this.root.find(\".dx-new-group-btn\").click(function() {                \r\n                newGroupOpen();\r\n            });\r\n            \r\n            this.root.find(\".dx-rooms-cbo\").change(function (event) {\r\n                \r\n                if (self.cbo_rooms_refreshing) {\r\n                    return false;\r\n                }\r\n                \r\n                event.preventDefault();\r\n\r\n                show_page_splash(1);\r\n                var url = self.options.root_url + self.options.scheduler_url + self.root.find('.dx-rooms-cbo option:selected').val();\r\n                window.location.assign(encodeURI(url));\r\n            });\r\n            \r\n            this.root.find(\".dx-room-edit-btn\").click(function() {\r\n                var room_id = parseInt(self.root.find('.dx-rooms-cbo option:selected').val());\r\n                if (room_id) {\r\n                    open_form('form', room_id, self.rooms_list_id, 0, 0, \"\", 0, \"\", {\r\n                        after_close: function(frm)\r\n                        {\r\n                            refreshAllData();\r\n                        }\r\n                    });\r\n                } \r\n                else {\r\n                    notify_err(\"Vispirms izvēlieties telpu no saraksta!\");\r\n                }\r\n            });\r\n            \r\n            this.root.find(\".dx-room-new-btn\").click(function() {\r\n                open_form('form', 0, self.rooms_list_id, 0, 0, \"\", 1, \"\", {\r\n                    after_close: function(frm)\r\n                    {\r\n                        var new_room_id = frm.find('[name=item_id]').val();\r\n                        if (new_room_id) {\r\n                            show_page_splash(1);\r\n                            var url = self.options.root_url + self.options.scheduler_url + new_room_id;\r\n                            window.location.assign(encodeURI(url));\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n           \r\n            var addDr = function(el, gr) {\r\n                    // store data so the calendar knows to render an event upon drop\r\n                    el.data('event', {\r\n                            title: $.trim(el.find(\".dx-item-title\").text()), // use the element's text as the event title\r\n                            stick: true, // maintain when user navigates (see docs on the renderEvent method)\r\n                            className: (gr) ? gr : '',\r\n                            duration: \"02:00\",\r\n                            start: \"09:00\",\r\n                            dx_subj_id: el.data(\"subject-id\"),\r\n                            dx_group_id: el.data(\"group-id\"),\r\n                            dx_day_id: 0,\r\n                            dx_coffee_id: 0\r\n                    });\r\n\r\n                    // make the event draggable using jQuery UI\r\n                    el.draggable({\r\n                            start: function() {\r\n                                el.css('width', '300px;');\r\n                            },\r\n                            stop: function() {\r\n                                el.css('width', 'auto');\r\n                            },\r\n                            zIndex: 999,\r\n                            revert: true,      // will cause the event to go back to its\r\n                            revertDuration: 0,  //  original position after the drag\r\n                            appendTo: 'body',\r\n                            containment: 'window',\r\n                            scroll: false,\r\n                            helper: 'clone'\r\n                    });\r\n                    \r\n                    if (gr) {\r\n                        el.find(\".dx-group-edit\").click(function() {\r\n                            open_form('form', el.data(\"group-id\"), self.groups_list_id, 0, 0, \"\", 0, \"\", {\r\n                                after_close: function(frm)\r\n                                {\r\n                                    refreshAllData();\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                    else {\r\n                        el.find(\".dx-subj-edit\").click(function() {\r\n                            open_form('form', el.data(\"subject-id\"), self.subjects_list_id, 0, 0, \"\", 0, \"\", {\r\n                                after_close: function(frm)\r\n                                {\r\n                                    refreshAllData();\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n            };\r\n            \r\n            var addDrCafe = function(el) {\r\n                \r\n                // store data so the calendar knows to render an event upon drop\r\n                el.data('event', {\r\n                        title: 'Kafijas pauze', // use the element's text as the event title\r\n                        stick: true, // maintain when user navigates (see docs on the renderEvent method),\r\n                        duration: \"00:30\",\r\n                        className: \"cafe\",\r\n                        color: \"#d6df32\",\r\n                        start: \"09:00\",\r\n                        dx_subj_id: 0,\r\n                        dx_group_id: 0,\r\n                        dx_day_id: 0,\r\n                        dx_coffee_id: 0,\r\n                });\r\n\r\n                // make the event draggable using jQuery UI\r\n                el.draggable({                           \r\n                        zIndex: 999,\r\n                        revert: true,      // will cause the event to go back to its\r\n                        revertDuration: 0  //  original position after the drag\r\n                });\r\n            };\r\n            \r\n            addDrCafe($('.dx-cafe'));\r\n            $('#external-events .dx-event').each(function() {\r\n                    addDr($(this));\r\n            });\r\n            \r\n            $('#dx-groups-box .dx-group').each(function() {\r\n                    addDr($(this), \"group\");\r\n            });\r\n            \r\n            this.root.find(\".dx-search-subj\").on(\"keyup\", function()\r\n            {\r\n                    if(!$(this).val())\r\n                    {\r\n                            $(\"#external-events\").find(\".dx-event\").show();\r\n                            return;\r\n                    }\r\n                    $(\"#external-events\").find(\".dx-event\").hide();\r\n                    $(\"#external-events\").find(\".dx-event:contains('\" + $(this).val() + \"')\").show();\r\n\r\n            });\r\n            \r\n            this.root.find(\".dx-search-group\").on(\"keyup\", function()\r\n            {\r\n                    if(!$(this).val())\r\n                    {\r\n                            $(\"#dx-groups-box\").find(\".dx-event\").show();\r\n                            return;\r\n                    }\r\n                    $(\"#dx-groups-box\").find(\".dx-event\").hide();\r\n                    $(\"#dx-groups-box\").find(\".dx-event:contains('\" + $(this).val() + \"')\").show();\r\n\r\n            });\r\n            \r\n            var newGroupHtml = function(arr_data) {\r\n                var new_el = $(\"<div>\");\r\n                new_el.addClass('dx-event').addClass('dx-group');\r\n                new_el.attr(\"data-subject-id\", arr_data.subj_id);\r\n                new_el.attr(\"data-group-id\", arr_data.group_id);\r\n                \r\n                var ch = $(\"<input type='checkbox'/>\");\r\n                ch.appendTo(new_el);\r\n                \r\n                var sp = $(\"<span class='dx-item-title'></span>\");\r\n                sp.text(arr_data.text);\r\n                sp.appendTo(new_el);\r\n                \r\n                new_el.appendTo( \"#dx-groups-box\" );\r\n                \r\n                var a = $('<a class=\"pull-right\" href=\"javascript:;\"><i class=\"fa fa-edit dx-group-edit\"></i></a>');\r\n                a.appendTo(new_el);\r\n                addDr(new_el, \"group\");\r\n            };\r\n            \r\n            var newCafeToDb = function(event) {\r\n                console.log(\"Create new coffe pause in db!\");\r\n                \r\n                var formData = new FormData();                \r\n                formData.append(\"start_time\", event.start.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"end_time\", event.end.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"room_id\", (event.resourceId) ? event.resourceId : self.room_id);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"new_coffee\", '', '', formData);\r\n\r\n                request.callback = function(data) {\r\n                    event.id = 'C' + data.coffee_id;\r\n                    event.dx_subj_id = data.subject_id;\r\n                    event.dx_day_id = data.day_id;\r\n                    event.dx_group_id = data.group_id;\r\n                    event.dx_coffee_id = data.coffee_id;\r\n                    \r\n                    $('#calendar').fullCalendar( 'updateEvent', event );\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                    $('#calendar').fullCalendar( 'removeEvents', function(ev) {                        \r\n                        if (!ev.id) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                };\r\n\r\n                request.doRequest();\r\n            };\r\n            \r\n            var newGroupToDb = function(event) {\r\n                console.log(\"Create new group in db!\");\r\n                \r\n                var formData = new FormData();\r\n                formData.append(\"subject_id\", event.dx_subj_id);\r\n                formData.append(\"start_time\", event.start.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"end_time\", event.end.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"room_id\", (event.resourceId) ? event.resourceId : self.room_id);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"new_group\", '', '', formData);\r\n\r\n                request.callback = function(data) {\r\n                    event.id = data.day_id;\r\n                    event.title = self.options.group_prefix + data.group_id + \": \" + event.title;\r\n                    event.className=\"group\";\r\n                    event.dx_day_id = data.day_id;\r\n                    event.dx_group_id = data.group_id;\r\n                    \r\n                    $('#calendar').fullCalendar( 'updateEvent', event );\r\n\r\n                    newGroupHtml({subj_id: event.dx_subj_id, group_id: data.group_id, text: event.title});\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                    $('#calendar').fullCalendar( 'removeEvents', function(ev) {                        \r\n                        if (!ev.id) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                };\r\n\r\n                request.doRequest();\r\n            };\r\n            \r\n            var newDayToDb = function(event) {\r\n                console.log(\"Create new day for existing group in db!\");\r\n                \r\n                var formData = new FormData();\r\n                formData.append(\"group_id\", event.dx_group_id);\r\n                formData.append(\"start_time\", event.start.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"end_time\", event.end.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"room_id\", (event.resourceId) ? event.resourceId : self.room_id);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"new_day\", '', '', formData);\r\n\r\n                request.callback = function(data) {\r\n                    event.id = data.day_id;\r\n                    event.dx_day_id = data.day_id;\r\n                    $('#calendar').fullCalendar( 'updateEvent', event );\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                    $('#calendar').fullCalendar( 'removeEvents', function(ev) {                        \r\n                        if (!ev.id) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                };\r\n\r\n                request.doRequest();\r\n            };\r\n            \r\n            var updateCafeToDb = function(event) {\r\n                console.log(\"Update existing coffe pause in db!\");\r\n                var formData = new FormData(); \r\n                formData.append(\"coffee_id\", event.dx_coffee_id);\r\n                formData.append(\"start_time\", event.start.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"end_time\", event.end.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"room_id\", (event.resourceId) ? event.resourceId : self.room_id);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"update_coffee\", '', '', formData);\r\n\r\n                request.callback = function(data) {\r\n                    event.id = 'C' + data.coffee_id;\r\n                    event.dx_subj_id = data.subject_id;\r\n                    event.dx_day_id = data.day_id;\r\n                    event.dx_group_id = data.group_id;\r\n                    event.dx_coffee_id = data.coffee_id;\r\n                    \r\n                    $('#calendar').fullCalendar( 'updateEvent', event );\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                    // rollback UI changes\r\n                    refreshAllData();\r\n                };\r\n\r\n                request.doRequest();\r\n            };\r\n            \r\n            var updateDayToDb = function(event) {\r\n                console.log(\"Update existing day in db!\");\r\n                \r\n                var formData = new FormData();\r\n                formData.append(\"day_id\", event.dx_day_id);\r\n                formData.append(\"start_time\", event.start.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"end_time\", event.end.format(\"YYYY-MM-DD HH:mm\"));\r\n                formData.append(\"room_id\", (event.resourceId) ? event.resourceId : self.room_id);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"update_day\", '', '', formData);\r\n\r\n                request.callback = function(data) {                    \r\n                    // do nothing - everything ok\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                   // rollback UI changes\r\n                   refreshAllData();\r\n                };\r\n\r\n                request.doRequest();\r\n            };\r\n            \r\n            var refreshRoomsCbo = function(cbo_json) {\r\n                self.cbo_rooms_refreshing = true;\r\n                var cur_val = $(\".dx-rooms-cbo\").val();\r\n                var cur_org = \"\";\r\n                var htm = \"\";\r\n                var cbo = $(\".dx-rooms-cbo\");\r\n                        \r\n                cbo.empty();\r\n               \r\n                $.each(JSON.parse(cbo_json), function() {    \r\n                    if (cur_org != this.organization) {                    \r\n                        if (cur_org != \"\") {\r\n                            htm = htm + \"</optgroup>\";\r\n                        }\r\n                        htm = htm  + \"<optgroup label='\" +  this.organization + \"'>\";\r\n                        cur_org = this.organization;\r\n                    }\r\n                    \r\n                    htm = htm + \"<option value='\" + this.id + \"'>\" + this.title + \"</option>\";                  \r\n                });\r\n                \r\n                if (cur_org != \"\") {\r\n                    htm = htm + \"</optgroup>\";\r\n                }\r\n                $(htm).appendTo(cbo);\r\n                cbo.val(cur_val);\r\n                self.cbo_rooms_refreshing = false;\r\n            }\r\n            \r\n            var refreshAllData = function() {\r\n                show_page_splash(1);\r\n                $.getJSON( self.options.root_url + self.options.scheduler_url + \"json/\" + self.room_id, function( data ) {\r\n                    $(\"#external-events\").empty();\r\n                    $.each(JSON.parse(data.subjects), function() {                        \r\n                        addSubjToDiv(this.id, this.title_full);                       \r\n                    });\r\n                    \r\n                    $(\"#dx-groups-box\").empty();\r\n                    $.each(JSON.parse(data.groups), function() {                        \r\n                        newGroupHtml({subj_id: this.subject_id, group_id: this.id, text: this.title});                    \r\n                    });\r\n                    \r\n                    refreshRoomsCbo(data.rooms_cbo);\r\n                    \r\n                    $('#calendar').fullCalendar( 'removeEvents');\r\n                    $('#calendar').fullCalendar( 'removeResources');\r\n                    $('#calendar').fullCalendar( 'refetchResources' );\r\n                    $('#calendar').fullCalendar( 'refetchEvents' );\r\n                    \r\n                });\r\n            }\r\n            \r\n            var cal_tools = 'prev,next,today';\r\n            var def_view = '';\r\n            \r\n            if (this.room_id) {\r\n                cal_tools = cal_tools + ',month,agendaWeek,agendaDay';\r\n                def_view = 'agendaWeek';\r\n            }\r\n            else {\r\n                cal_tools = cal_tools + ',timelineDay,timelineThreeDays';\r\n                def_view = 'timelineThreeDays';\r\n            }\r\n            \r\n            var fullcal_params = {\r\n                        schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',\r\n\t\t\tnow: self.current_date,\r\n                        weekends: false,\r\n\t\t\teditable: true,\r\n                        droppable: true,\r\n\t\t\taspectRatio: 1.8,\r\n\t\t\tscrollTime: '00:00',\r\n                        displayEventTime: false,\r\n                        allDaySlot: false,\r\n                        resourceLabelText: \"Telpas\",\r\n                        navLinks: true, // can click day/week names to navigate views\r\n\t\t\theader: {\r\n\t\t\t\tleft: 'title',\r\n                                center: '',\r\n                                right: cal_tools\r\n\t\t\t},\r\n                        locale: Lang.getLocale(),\r\n\t\t\tdefaultView: def_view,\r\n\t\t\tviews: {\r\n\t\t\t\ttimelineThreeDays: {\r\n\t\t\t\t\ttype: 'timeline',\r\n\t\t\t\t\tduration: { days: 7 },\r\n                                        buttonText: '5 dienas'\r\n\t\t\t\t}\r\n\t\t\t},\r\n                        minTime: \"09:00:00\",\r\n                        maxTime: \"18:00:00\",\r\n                        eventConstraint:{\r\n                            start: '09:00', \r\n                            end: '18:00', \r\n                        },\r\n                        businessHours: {\r\n                            // days of week. an array of zero-based day of week integers (0=Sunday)\r\n                            dow: [ 1, 2, 3, 4 ], // Monday - Thursday\r\n\r\n                            start: '09:00', // a start time (10am in this example)\r\n                            end: '18:00', // an end time (6pm in this example)\r\n                        },\r\n                        eventRender: function (event, element) {\r\n                            element.addClass('context-menu-one');\r\n                            element.attr('data-subject-id', event.dx_subj_id);\r\n                            element.attr('data-group-id', event.dx_group_id);\r\n                            element.attr('data-day-id', event.dx_day_id);\r\n                            element.attr('data-event-id', event.id);\r\n                            element.attr('data-coffee-id', event.dx_coffee_id);\r\n                            \r\n                            if (event.className == \"closed\") {\r\n                                event.overlap = false;\r\n                            }\r\n                            \r\n                        },\r\n                        eventReceive : function(event) {                            \r\n                            if (event.className == \"cafe\") {\r\n                                newCafeToDb(event);\r\n                                return;\r\n                            }\r\n                            \r\n                            var view = $('#calendar').fullCalendar('getView');\r\n                            \r\n                            if (view.name == \"month\") {\r\n                                var day_events = $('#calendar').fullCalendar( 'clientEvents' , function(ev) {\r\n                                    \r\n                                    if (ev.id && ev.start.isSame(event.start)) {\r\n                                                                                \r\n                                        event.start = event.start.add(2, 'hours');\r\n                                        event.end = event.end.add(2, 'hours');\r\n                                    }                                    \r\n                                    \r\n                                });\r\n                                \r\n                                if (event.end.hour() > 18) {\r\n                                    $('#calendar').fullCalendar( 'removeEvents', function(ev) {                        \r\n                                        if (!ev.id) {\r\n                                            return true;\r\n                                        }\r\n                                        return false;\r\n                                    });\r\n                                    notify_err(\"Norādītajā datumā visi iespējamie laiki jau ir aizpildīti ar pasākumiem!\");                                        \r\n                                    return;\r\n                                }\r\n                                    \r\n                                $('#calendar').fullCalendar( 'updateEvent', event );\r\n                            }\r\n                            \r\n                            if (event.className == \"group\") {\r\n                                newDayToDb(event);\r\n                            }\r\n                            else {\r\n                                \r\n                                newGroupToDb(event);\r\n                            }\r\n                        },\r\n                        eventResize: function(event, delta, revertFunc) {\r\n                            if (event.className == \"cafe\") {\r\n                                updateCafeToDb(event);\r\n                            }\r\n                            else {\r\n                                updateDayToDb(event);\r\n                            }\r\n                        },\r\n                        eventDrop: function( event, delta, revertFunc, jsEvent, ui, view ){\r\n                            if (!event.id) {\r\n                                return;\r\n                            }\r\n                            \r\n                            if (event.className == \"cafe\") {\r\n                                updateCafeToDb(event);\r\n                            }\r\n                            else {\r\n                                updateDayToDb(event);\r\n                            }\r\n                        },\r\n                        eventClick: function(calEvent, jsEvent, view) {\r\n\r\n                            if (calEvent.className == \"cafe\") {\r\n                                open_form('form', calEvent.dx_coffee_id, self.coffee_list_id, 0, 0, \"\", 0, \"\", {\r\n                                    after_close: function(frm)\r\n                                    {\r\n                                        refreshAllData();\r\n                                    }\r\n                                });\r\n                                return;\r\n                            }\r\n                            \r\n                            open_form('form', calEvent.dx_day_id, self.days_list_id, 0, 0, \"\", 0, \"\", {\r\n                                after_close: function(frm)\r\n                                {\r\n                                    refreshAllData();\r\n                                }\r\n                            });\r\n                        },\r\n                        loading: function(isLoading, view) {\r\n                            if (isLoading) {\r\n                                show_page_splash(1);\r\n                            }\r\n                            else {\r\n                                hide_page_splash(1);\r\n                            }\r\n                        },\r\n\t\t\tresourceGroupField: 'organization',              \r\n\t\t\tevents: {\r\n                            url: self.options.root_url + self.options.scheduler_url + \"events_json/\" + self.room_id,\r\n                            type: 'GET'\r\n                        }\r\n            };\r\n            \r\n            if (!this.room_id) {\r\n                fullcal_params[\"resources\"] = {\r\n                            url: self.options.root_url + self.options.scheduler_url + \"rooms_json/\" + self.room_id,\r\n                            type: 'GET'\r\n                        };\r\n            }\r\n            $('#calendar').fullCalendar(fullcal_params);  \r\n           \r\n            $.contextMenu({\r\n                selector: '.context-menu-one', \r\n                callback: function(key, options) {\r\n                    if (key == \"subject\") {\r\n                        open_form('form', options.$trigger.data('subject-id'), self.subjects_list_id, 0, 0, \"\", 0, \"\", {after_close: function(frm) {\r\n                            refreshAllData();\r\n                        }});\r\n                    }\r\n                    \r\n                    if (key == \"group\") {\r\n                        open_form('form', options.$trigger.data('group-id'), self.groups_list_id, 0, 0, \"\", 0, \"\", {after_close: function(frm) {\r\n                            refreshAllData();\r\n                        }});\r\n                    }\r\n                    \r\n                    if (key == \"day\") {\r\n                        open_form('form', options.$trigger.data('day-id'), self.days_list_id, 0, 0, \"\", 0, \"\", {after_close: function(frm) {\r\n                            refreshAllData();\r\n                        }});\r\n                    }\r\n                    \r\n                    if (key == \"coffee\") {\r\n                        open_form('form', options.$trigger.data('coffee-id'), self.coffee_list_id, 0, 0, \"\", 0, \"\", {after_close: function(frm) {\r\n                            refreshAllData();\r\n                        }});\r\n                    }\r\n                    \r\n                    if (key == \"delete\") {\r\n                        \r\n                    }\r\n                },\r\n                items: {\r\n                    \"subject\": {name: \"Pasākums\", icon: \"fa-graduation-cap\"},\r\n                    \"group\": {name: \"Grupa\", icon: \"fa-users\"},\r\n                    \"day\": {name: \"Nodarbība\", icon: \"fa-calendar-o\"},\r\n                    \"sep0\": \"---------\",\r\n                    \"coffee\": {name: \"Kafijas pauze\", icon: \"fa-coffee\", disabled: function(key, opt) { \r\n                        // this references the trigger element\r\n                        console.log(\"Calculate coffee menu: \" + opt.$trigger.html());\r\n                        return !parseInt(opt.$trigger.data('coffee-id')); \r\n                    }},\r\n                    \"sep1\": \"---------\",\r\n                    \"delete\": {name: \"Dzēst\", icon: \"fa-trash-o\"}\r\n                }\r\n            });\r\n\r\n            $('.context-menu-one').on('click', function(e){\r\n                console.log('clicked', this);\r\n            })    \r\n            \r\n            $(window).on('beforeunload', function()\r\n            {\r\n                if($(\".dx-stick-footer\").hasClass('dx-page-in-edit-mode'))\r\n                {\r\n                    hide_page_splash(1);\r\n                    return 'Your changes have not been saved.';\r\n                }\r\n            });\r\n            \r\n            var fillPublishIDs = function(grps) {\r\n                var ids = \"\";\r\n                grps.each(function() {\r\n                    if (ids != \"\") {\r\n                        ids = ids + \",\";\r\n                    } \r\n\r\n                    ids = ids + $(this).attr('data-group-id');\r\n                });\r\n                \r\n                return ids;\r\n            };\r\n            \r\n            $(\".dx-publish-popup\").find(\".dx-check-publish-btn\").click(function() {\r\n                var frm = $(\".dx-publish-popup\");\r\n                frm.find(\".dx-publish-progress\").show();\r\n                frm.find(\".dx-check-publish-btn\").hide();\r\n                frm.find(\".dx-cancel-btn\").hide();\r\n                frm.find(\".dx-form-close-btn\").hide();\r\n                frm.find(\".alert-error\").hide();\r\n                frm.find(\".ext-cont\").hide();\r\n                frm.find(\".dx-problem-lbl\").hide();\r\n                \r\n                var formData = new FormData();                \r\n                formData.append(\"groups_ids\", self.publish_ids);\r\n                \r\n                var request = new FormAjaxRequest (self.options.scheduler_url + \"publish\", '', '', formData);\r\n                \r\n                request.callback = function(data) {\r\n                    $(\".dx-publish-popup\").find(\".dx-publish-progress\").hide();\r\n                    if (data.err_count == 0) {\r\n                        frm.find(\".alert-info\").show();\r\n                        frm.find(\".dx-cancel-btn\").text(\"Aizvērt\").show();\r\n                        frm.find(\".dx-cancel-btn\").show();\r\n                        frm.find(\".dx-form-close-btn\").show();\r\n                        refreshAllData();\r\n                    }\r\n                    else {\r\n                        frm.find(\".dx-cancel-btn\").show();\r\n                        frm.find(\".dx-check-publish-btn\").show();\r\n                        frm.find(\".alert-error\").show();\r\n                        frm.find(\".dx-problem-lbl\").show().find(\".dx-err-count\").text(data.err_count);                        \r\n                        frm.find(\".dx-cancel-btn\").show();\r\n                        frm.find(\".dx-form-close-btn\").show();\r\n                        frm.find(\".ext-cont\").html(data.err_htm).show();\r\n                    }\r\n                };\r\n                \r\n                request.err_callback = function() {                    \r\n                    frm.find(\".dx-check-publish-btn\").show();\r\n                    frm.find(\".dx-publish-progress\").hide();\r\n                    frm.find(\".dx-cancel-btn\").show();\r\n                    frm.find(\".dx-form-close-btn\").show();\r\n                };\r\n                \r\n                request.doRequest();\r\n            });\r\n            \r\n            this.root.find(\".dx-publish-default\").click(function() {\r\n                var grps = $(\"#dx-groups-box\").find(\".dx-group input:checked\");\r\n                self.publish_ids = fillPublishIDs(grps);\r\n                \r\n                if (self.publish_ids == \"\") {\r\n                    grps = $(\"#dx-groups-box\").find(\".dx-group\");\r\n                    self.publish_ids = fillPublishIDs(grps);\r\n                }\r\n                \r\n                if (!grps.length) {\r\n                    notify_err(\"Nav neviena grupa sagatavošanā, ko varētu publicēt.\");\r\n                    return;\r\n                }\r\n                \r\n                var frm = $(\".dx-publish-popup\");\r\n                frm.find('.dx-total-groups').text(grps.length);\r\n                \r\n                frm.find(\".alert-error\").hide();\r\n                frm.find(\".dx-publish-progress\").hide();\r\n                frm.find(\".alert-info\").hide();\r\n                frm.find(\".dx-check-publish-btn\").show();\r\n                frm.find(\".dx-cancel-btn\").show();\r\n                frm.find(\".dx-form-close-btn\").show();\r\n                frm.find(\".ext-cont\").hide();\r\n                frm.find(\".dx-problem-lbl\").hide();\r\n                frm.modal('show');\r\n            });\r\n            \r\n            // adjust menu for vertical menu UI\r\n            if (!$(\"body\").hasClass(\"dx-horizontal-menu-ui\")) {\r\n                \r\n                var adjust_menu = function() {\r\n                    $(\".page-sidebar-menu\").css(\"padding-bottom\", '80px');\r\n                };\r\n                PageMain.addResizeCallback(adjust_menu);\r\n                \r\n                adjust_menu();\r\n                \r\n                $(\".dx-menu-builder-stick-title\").css(\"font-size\", \"14px\");\r\n                /*\r\n                var dv = $(\".dx-menu-sites\").find(\"div.col-sm-10\");\r\n                dv.css(\"margin-right\", \"-35px\");\r\n                dv.css(\"padding-left\", \"30px\");\r\n                */\r\n            }\r\n\t};\r\n})(jQuery);","/**\r\n * jQuery contextMenu v2.5.0 - Plugin for simple contextMenu handling\r\n *\r\n * Version: v2.5.0\r\n *\r\n * Authors: Björn Brala (SWIS.nl), Rodney Rehm, Addy Osmani (patches for FF)\r\n * Web: http://swisnl.github.io/jQuery-contextMenu/\r\n *\r\n * Copyright (c) 2011-2017 SWIS BV and contributors\r\n *\r\n * Licensed under\r\n *   MIT License http://www.opensource.org/licenses/mit-license\r\n *\r\n * Date: 2017-07-16T11:17:51.231Z\r\n */\r\n\r\n// jscs:disable\r\n/* jshint ignore:start */\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as anonymous module.\r\n        define(['jquery'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node / CommonJS\r\n        factory(require('jquery'));\r\n    } else {\r\n        // Browser globals.\r\n        factory(jQuery);\r\n    }\r\n})(function ($) {\r\n\r\n    'use strict';\r\n\r\n    // TODO: -\r\n    // ARIA stuff: menuitem, menuitemcheckbox und menuitemradio\r\n    // create <menu> structure if $.support[htmlCommand || htmlMenuitem] and !opt.disableNative\r\n\r\n    // determine html5 compatibility\r\n    $.support.htmlMenuitem = ('HTMLMenuItemElement' in window);\r\n    $.support.htmlCommand = ('HTMLCommandElement' in window);\r\n    $.support.eventSelectstart = ('onselectstart' in document.documentElement);\r\n    /* // should the need arise, test for css user-select\r\n     $.support.cssUserSelect = (function(){\r\n     var t = false,\r\n     e = document.createElement('div');\r\n\r\n     $.each('Moz|Webkit|Khtml|O|ms|Icab|'.split('|'), function(i, prefix) {\r\n     var propCC = prefix + (prefix ? 'U' : 'u') + 'serSelect',\r\n     prop = (prefix ? ('-' + prefix.toLowerCase() + '-') : '') + 'user-select';\r\n\r\n     e.style.cssText = prop + ': text;';\r\n     if (e.style[propCC] == 'text') {\r\n     t = true;\r\n     return false;\r\n     }\r\n\r\n     return true;\r\n     });\r\n\r\n     return t;\r\n     })();\r\n     */\r\n\r\n\r\n    if (!$.ui || !$.widget) {\r\n        // duck punch $.cleanData like jQueryUI does to get that remove event\r\n        $.cleanData = (function (orig) {\r\n            return function (elems) {\r\n                var events, elem, i;\r\n                for (i = 0; elems[i] != null; i++) {\r\n                    elem = elems[i];\r\n                    try {\r\n                        // Only trigger remove when necessary to save time\r\n                        events = $._data(elem, 'events');\r\n                        if (events && events.remove) {\r\n                            $(elem).triggerHandler('remove');\r\n                        }\r\n\r\n                        // Http://bugs.jquery.com/ticket/8235\r\n                    } catch (e) {\r\n                    }\r\n                }\r\n                orig(elems);\r\n            };\r\n        })($.cleanData);\r\n    }\r\n    /* jshint ignore:end */\r\n    // jscs:enable\r\n\r\n    var // currently active contextMenu trigger\r\n        $currentTrigger = null,\r\n        // is contextMenu initialized with at least one menu?\r\n        initialized = false,\r\n        // window handle\r\n        $win = $(window),\r\n        // number of registered menus\r\n        counter = 0,\r\n        // mapping selector to namespace\r\n        namespaces = {},\r\n        // mapping namespace to options\r\n        menus = {},\r\n        // custom command type handlers\r\n        types = {},\r\n        // default values\r\n        defaults = {\r\n            // selector of contextMenu trigger\r\n            selector: null,\r\n            // where to append the menu to\r\n            appendTo: null,\r\n            // method to trigger context menu [\"right\", \"left\", \"hover\"]\r\n            trigger: 'right',\r\n            // hide menu when mouse leaves trigger / menu elements\r\n            autoHide: false,\r\n            // ms to wait before showing a hover-triggered context menu\r\n            delay: 200,\r\n            // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\r\n            // as long as the trigger happened on one of the trigger-element's child nodes\r\n            reposition: true,\r\n\r\n            //ability to select submenu\r\n            selectableSubMenu: false,\r\n\r\n            // Default classname configuration to be able avoid conflicts in frameworks\r\n            classNames: {\r\n                hover: 'context-menu-hover', // Item hover\r\n                disabled: 'context-menu-disabled', // Item disabled\r\n                visible: 'context-menu-visible', // Item visible\r\n                notSelectable: 'context-menu-not-selectable', // Item not selectable\r\n\r\n                icon: 'context-menu-icon',\r\n                iconEdit: 'context-menu-icon-edit',\r\n                iconCut: 'context-menu-icon-cut',\r\n                iconCopy: 'context-menu-icon-copy',\r\n                iconPaste: 'context-menu-icon-paste',\r\n                iconDelete: 'context-menu-icon-delete',\r\n                iconAdd: 'context-menu-icon-add',\r\n                iconQuit: 'context-menu-icon-quit',\r\n                iconLoadingClass: 'context-menu-icon-loading'\r\n            },\r\n\r\n            // determine position to show menu at\r\n            determinePosition: function ($menu) {\r\n                // position to the lower middle of the trigger element\r\n                if ($.ui && $.ui.position) {\r\n                    // .position() is provided as a jQuery UI utility\r\n                    // (...and it won't work on hidden elements)\r\n                    $menu.css('display', 'block').position({\r\n                        my: 'center top',\r\n                        at: 'center bottom',\r\n                        of: this,\r\n                        offset: '0 5',\r\n                        collision: 'fit'\r\n                    }).css('display', 'none');\r\n                } else {\r\n                    // determine contextMenu position\r\n                    var offset = this.offset();\r\n                    offset.top += this.outerHeight();\r\n                    offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\r\n                    $menu.css(offset);\r\n                }\r\n            },\r\n            // position menu\r\n            position: function (opt, x, y) {\r\n                var offset;\r\n                // determine contextMenu position\r\n                if (!x && !y) {\r\n                    opt.determinePosition.call(this, opt.$menu);\r\n                    return;\r\n                } else if (x === 'maintain' && y === 'maintain') {\r\n                    // x and y must not be changed (after re-show on command click)\r\n                    offset = opt.$menu.position();\r\n                } else {\r\n                    // x and y are given (by mouse event)\r\n                    var offsetParentOffset = opt.$menu.offsetParent().offset();\r\n                    offset = {top: y - offsetParentOffset.top, left: x -offsetParentOffset.left};\r\n                }\r\n\r\n                // correct offset if viewport demands it\r\n                var bottom = $win.scrollTop() + $win.height(),\r\n                    right = $win.scrollLeft() + $win.width(),\r\n                    height = opt.$menu.outerHeight(),\r\n                    width = opt.$menu.outerWidth();\r\n\r\n                if (offset.top + height > bottom) {\r\n                    offset.top -= height;\r\n                }\r\n\r\n                if (offset.top < 0) {\r\n                    offset.top = 0;\r\n                }\r\n\r\n                if (offset.left + width > right) {\r\n                    offset.left -= width;\r\n                }\r\n\r\n                if (offset.left < 0) {\r\n                    offset.left = 0;\r\n                }\r\n\r\n                opt.$menu.css(offset);\r\n            },\r\n            // position the sub-menu\r\n            positionSubmenu: function ($menu) {\r\n                if (typeof $menu === 'undefined') {\r\n                    // When user hovers over item (which has sub items) handle.focusItem will call this.\r\n                    // but the submenu does not exist yet if opt.items is a promise. just return, will\r\n                    // call positionSubmenu after promise is completed.\r\n                    return;\r\n                }\r\n                if ($.ui && $.ui.position) {\r\n                    // .position() is provided as a jQuery UI utility\r\n                    // (...and it won't work on hidden elements)\r\n                    $menu.css('display', 'block').position({\r\n                        my: 'left top-5',\r\n                        at: 'right top',\r\n                        of: this,\r\n                        collision: 'flipfit fit'\r\n                    }).css('display', '');\r\n                } else {\r\n                    // determine contextMenu position\r\n                    var offset = {\r\n                        top: -9,\r\n                        left: this.outerWidth() - 5\r\n                    };\r\n                    $menu.css(offset);\r\n                }\r\n            },\r\n            // offset to add to zIndex\r\n            zIndex: 1,\r\n            // show hide animation settings\r\n            animation: {\r\n                duration: 50,\r\n                show: 'slideDown',\r\n                hide: 'slideUp'\r\n            },\r\n            // events\r\n            events: {\r\n                show: $.noop,\r\n                hide: $.noop\r\n            },\r\n            // default callback\r\n            callback: null,\r\n            // list of contextMenu items\r\n            items: {}\r\n        },\r\n        // mouse position for hover activation\r\n        hoveract = {\r\n            timer: null,\r\n            pageX: null,\r\n            pageY: null\r\n        },\r\n        // determine zIndex\r\n        zindex = function ($t) {\r\n            var zin = 0,\r\n                $tt = $t;\r\n\r\n            while (true) {\r\n                zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\r\n                $tt = $tt.parent();\r\n                if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\r\n                    break;\r\n                }\r\n            }\r\n            return zin;\r\n        },\r\n        // event handlers\r\n        handle = {\r\n            // abort anything\r\n            abortevent: function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n            },\r\n            // contextmenu show dispatcher\r\n            contextmenu: function (e) {\r\n                var $this = $(this);\r\n\r\n                // disable actual context-menu if we are using the right mouse button as the trigger\r\n                if (e.data.trigger === 'right') {\r\n                    e.preventDefault();\r\n                    e.stopImmediatePropagation();\r\n                }\r\n\r\n                // abort native-triggered events unless we're triggering on right click\r\n                if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\r\n                    return;\r\n                }\r\n\r\n                // Let the current contextmenu decide if it should show or not based on its own trigger settings\r\n                if (typeof e.mouseButton !== 'undefined' && e.data) {\r\n                    if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\r\n                        // Mouse click is not valid.\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // abort event if menu is visible for this trigger\r\n                if ($this.hasClass('context-menu-active')) {\r\n                    return;\r\n                }\r\n\r\n                if (!$this.hasClass('context-menu-disabled')) {\r\n                    // theoretically need to fire a show event at <menu>\r\n                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\r\n                    // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\r\n                    // e.data.$menu.trigger(evt);\r\n\r\n                    $currentTrigger = $this;\r\n                    if (e.data.build) {\r\n                        var built = e.data.build($currentTrigger, e);\r\n                        // abort if build() returned false\r\n                        if (built === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // dynamically build menu on invocation\r\n                        e.data = $.extend(true, {}, defaults, e.data, built || {});\r\n\r\n                        // abort if there are no items to display\r\n                        if (!e.data.items || $.isEmptyObject(e.data.items)) {\r\n                            // Note: jQuery captures and ignores errors from event handlers\r\n                            if (window.console) {\r\n                                (console.error || console.log).call(console, 'No items specified to show in contextMenu');\r\n                            }\r\n\r\n                            throw new Error('No Items specified');\r\n                        }\r\n\r\n                        // backreference for custom command type creation\r\n                        e.data.$trigger = $currentTrigger;\r\n\r\n                        op.create(e.data);\r\n                    }\r\n                    var showMenu = false;\r\n                    for (var item in e.data.items) {\r\n                        if (e.data.items.hasOwnProperty(item)) {\r\n                            var visible;\r\n                            if ($.isFunction(e.data.items[item].visible)) {\r\n                                visible = e.data.items[item].visible.call($(e.currentTarget), item, e.data);\r\n                            } else if (typeof e.data.items[item] !== 'undefined' && e.data.items[item].visible) {\r\n                                visible = e.data.items[item].visible === true;\r\n                            } else {\r\n                                visible = true;\r\n                            }\r\n                            if (visible) {\r\n                                showMenu = true;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (showMenu) {\r\n                        // show menu\r\n                        op.show.call($this, e.data, e.pageX, e.pageY);\r\n                    }\r\n                }\r\n            },\r\n            // contextMenu left-click trigger\r\n            click: function (e) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\r\n            },\r\n            // contextMenu right-click trigger\r\n            mousedown: function (e) {\r\n                // register mouse down\r\n                var $this = $(this);\r\n\r\n                // hide any previous menus\r\n                if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {\r\n                    $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');\r\n                }\r\n\r\n                // activate on right click\r\n                if (e.button === 2) {\r\n                    $currentTrigger = $this.data('contextMenuActive', true);\r\n                }\r\n            },\r\n            // contextMenu right-click trigger\r\n            mouseup: function (e) {\r\n                // show menu\r\n                var $this = $(this);\r\n                if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\r\n                    e.preventDefault();\r\n                    e.stopImmediatePropagation();\r\n                    $currentTrigger = $this;\r\n                    $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\r\n                }\r\n\r\n                $this.removeData('contextMenuActive');\r\n            },\r\n            // contextMenu hover trigger\r\n            mouseenter: function (e) {\r\n                var $this = $(this),\r\n                    $related = $(e.relatedTarget),\r\n                    $document = $(document);\r\n\r\n                // abort if we're coming from a menu\r\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n                    return;\r\n                }\r\n\r\n                // abort if a menu is shown\r\n                if ($currentTrigger && $currentTrigger.length) {\r\n                    return;\r\n                }\r\n\r\n                hoveract.pageX = e.pageX;\r\n                hoveract.pageY = e.pageY;\r\n                hoveract.data = e.data;\r\n                $document.on('mousemove.contextMenuShow', handle.mousemove);\r\n                hoveract.timer = setTimeout(function () {\r\n                    hoveract.timer = null;\r\n                    $document.off('mousemove.contextMenuShow');\r\n                    $currentTrigger = $this;\r\n                    $this.trigger($.Event('contextmenu', {\r\n                        data: hoveract.data,\r\n                        pageX: hoveract.pageX,\r\n                        pageY: hoveract.pageY\r\n                    }));\r\n                }, e.data.delay);\r\n            },\r\n            // contextMenu hover trigger\r\n            mousemove: function (e) {\r\n                hoveract.pageX = e.pageX;\r\n                hoveract.pageY = e.pageY;\r\n            },\r\n            // contextMenu hover trigger\r\n            mouseleave: function (e) {\r\n                // abort if we're leaving for a menu\r\n                var $related = $(e.relatedTarget);\r\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    clearTimeout(hoveract.timer);\r\n                } catch (e) {\r\n                }\r\n\r\n                hoveract.timer = null;\r\n            },\r\n            // click on layer to hide contextMenu\r\n            layerClick: function (e) {\r\n                var $this = $(this),\r\n                    root = $this.data('contextMenuRoot'),\r\n                    button = e.button,\r\n                    x = e.pageX,\r\n                    y = e.pageY,\r\n                    target,\r\n                    offset;\r\n\r\n                e.preventDefault();\r\n\r\n                setTimeout(function () {\r\n                    var $window;\r\n                    var triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\r\n\r\n                    // find the element that would've been clicked, wasn't the layer in the way\r\n                    if (document.elementFromPoint && root.$layer) {\r\n                        root.$layer.hide();\r\n                        target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop());\r\n\r\n                        // also need to try and focus this element if we're in a contenteditable area,\r\n                        // as the layer will prevent the browser mouse action we want\r\n                        if (target.isContentEditable) {\r\n                            var range = document.createRange(),\r\n                                sel = window.getSelection();\r\n                            range.selectNode(target);\r\n                            range.collapse(true);\r\n                            sel.removeAllRanges();\r\n                            sel.addRange(range);\r\n                        }\r\n                        $(target).trigger(e);\r\n                        root.$layer.show();\r\n                    }\r\n\r\n                    if (root.reposition && triggerAction) {\r\n                        if (document.elementFromPoint) {\r\n                            if (root.$trigger.is(target)) {\r\n                                root.position.call(root.$trigger, root, x, y);\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            offset = root.$trigger.offset();\r\n                            $window = $(window);\r\n                            // while this looks kinda awful, it's the best way to avoid\r\n                            // unnecessarily calculating any positions\r\n                            offset.top += $window.scrollTop();\r\n                            if (offset.top <= e.pageY) {\r\n                                offset.left += $window.scrollLeft();\r\n                                if (offset.left <= e.pageX) {\r\n                                    offset.bottom = offset.top + root.$trigger.outerHeight();\r\n                                    if (offset.bottom >= e.pageY) {\r\n                                        offset.right = offset.left + root.$trigger.outerWidth();\r\n                                        if (offset.right >= e.pageX) {\r\n                                            // reposition\r\n                                            root.position.call(root.$trigger, root, x, y);\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (target && triggerAction) {\r\n                        root.$trigger.one('contextmenu:hidden', function () {\r\n                            $(target).contextMenu({x: x, y: y, button: button});\r\n                        });\r\n                    }\r\n\r\n                    if (root !== null && typeof root !== 'undefined' && root.$menu !== null  && typeof root.$menu !== 'undefined') {\r\n                        root.$menu.trigger('contextmenu:hide');\r\n                    }\r\n                }, 50);\r\n            },\r\n            // key handled :hover\r\n            keyStop: function (e, opt) {\r\n                if (!opt.isInput) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                e.stopPropagation();\r\n            },\r\n            key: function (e) {\r\n\r\n                var opt = {};\r\n\r\n                // Only get the data from $currentTrigger if it exists\r\n                if ($currentTrigger) {\r\n                    opt = $currentTrigger.data('contextMenu') || {};\r\n                }\r\n                // If the trigger happen on a element that are above the contextmenu do this\r\n                if (typeof opt.zIndex === 'undefined') {\r\n                    opt.zIndex = 0;\r\n                }\r\n                var targetZIndex = 0;\r\n                var getZIndexOfTriggerTarget = function (target) {\r\n                    if (target.style.zIndex !== '') {\r\n                        targetZIndex = target.style.zIndex;\r\n                    } else {\r\n                        if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\r\n                            getZIndexOfTriggerTarget(target.offsetParent);\r\n                        }\r\n                        else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\r\n                            getZIndexOfTriggerTarget(target.parentElement);\r\n                        }\r\n                    }\r\n                };\r\n                getZIndexOfTriggerTarget(e.target);\r\n                // If targetZIndex is heigher then opt.zIndex dont progress any futher.\r\n                // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\r\n                // and its above the contextmenu it wont steal keys events\r\n                if (opt.$menu && parseInt(targetZIndex,10) > parseInt(opt.$menu.css(\"zIndex\"),10)) {\r\n                    return;\r\n                }\r\n                switch (e.keyCode) {\r\n                    case 9:\r\n                    case 38: // up\r\n                        handle.keyStop(e, opt);\r\n                        // if keyCode is [38 (up)] or [9 (tab) with shift]\r\n                        if (opt.isInput) {\r\n                            if (e.keyCode === 9 && e.shiftKey) {\r\n                                e.preventDefault();\r\n                                if (opt.$selected) {\r\n                                    opt.$selected.find('input, textarea, select').blur();\r\n                                }\r\n                                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                                    opt.$menu.trigger('prevcommand');\r\n                                }\r\n                                return;\r\n                            } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                                // checkboxes don't capture this key\r\n                                e.preventDefault();\r\n                                return;\r\n                            }\r\n                        } else if (e.keyCode !== 9 || e.shiftKey) {\r\n                            if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                                opt.$menu.trigger('prevcommand');\r\n                            }\r\n                            return;\r\n                        }\r\n                        break;\r\n                    // omitting break;\r\n                    // case 9: // tab - reached through omitted break;\r\n                    case 40: // down\r\n                        handle.keyStop(e, opt);\r\n                        if (opt.isInput) {\r\n                            if (e.keyCode === 9) {\r\n                                e.preventDefault();\r\n                                if (opt.$selected) {\r\n                                    opt.$selected.find('input, textarea, select').blur();\r\n                                }\r\n                                if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                                    opt.$menu.trigger('nextcommand');\r\n                                }\r\n                                return;\r\n                            } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\r\n                                // checkboxes don't capture this key\r\n                                e.preventDefault();\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                                opt.$menu.trigger('nextcommand');\r\n                            }\r\n                            return;\r\n                        }\r\n                        break;\r\n\r\n                    case 37: // left\r\n                        handle.keyStop(e, opt);\r\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\r\n                            break;\r\n                        }\r\n\r\n                        if (!opt.$selected.parent().hasClass('context-menu-root')) {\r\n                            var $parent = opt.$selected.parent().parent();\r\n                            opt.$selected.trigger('contextmenu:blur');\r\n                            opt.$selected = $parent;\r\n                            return;\r\n                        }\r\n                        break;\r\n\r\n                    case 39: // right\r\n                        handle.keyStop(e, opt);\r\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\r\n                            break;\r\n                        }\r\n\r\n                        var itemdata = opt.$selected.data('contextMenu') || {};\r\n                        if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\r\n                            opt.$selected = null;\r\n                            itemdata.$selected = null;\r\n                            itemdata.$menu.trigger('nextcommand');\r\n                            return;\r\n                        }\r\n                        break;\r\n\r\n                    case 35: // end\r\n                    case 36: // home\r\n                        if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\r\n                            return;\r\n                        } else {\r\n                            (opt.$selected && opt.$selected.parent() || opt.$menu)\r\n                                .children(':not(.' + opt.classNames.disabled + ', .' + opt.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\r\n                                .trigger('contextmenu:focus');\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        break;\r\n\r\n                    case 13: // enter\r\n                        handle.keyStop(e, opt);\r\n                        if (opt.isInput) {\r\n                            if (opt.$selected && !opt.$selected.is('textarea, select')) {\r\n                                e.preventDefault();\r\n                                return;\r\n                            }\r\n                            break;\r\n                        }\r\n                        if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\r\n                            opt.$selected.trigger('mouseup');\r\n                        }\r\n                        return;\r\n\r\n                    case 32: // space\r\n                    case 33: // page up\r\n                    case 34: // page down\r\n                        // prevent browser from scrolling down while menu is visible\r\n                        handle.keyStop(e, opt);\r\n                        return;\r\n\r\n                    case 27: // esc\r\n                        handle.keyStop(e, opt);\r\n                        if (opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                            opt.$menu.trigger('contextmenu:hide');\r\n                        }\r\n                        return;\r\n\r\n                    default: // 0-9, a-z\r\n                        var k = (String.fromCharCode(e.keyCode)).toUpperCase();\r\n                        if (opt.accesskeys && opt.accesskeys[k]) {\r\n                            // according to the specs accesskeys must be invoked immediately\r\n                            opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup');\r\n                            return;\r\n                        }\r\n                        break;\r\n                }\r\n                // pass event to selected item,\r\n                // stop propagation to avoid endless recursion\r\n                e.stopPropagation();\r\n                if (typeof opt.$selected !== 'undefined' && opt.$selected !== null) {\r\n                    opt.$selected.trigger(e);\r\n                }\r\n            },\r\n            // select previous possible command in menu\r\n            prevItem: function (e) {\r\n                e.stopPropagation();\r\n                var opt = $(this).data('contextMenu') || {};\r\n                var root = $(this).data('contextMenuRoot') || {};\r\n\r\n                // obtain currently selected menu\r\n                if (opt.$selected) {\r\n                    var $s = opt.$selected;\r\n                    opt = opt.$selected.parent().data('contextMenu') || {};\r\n                    opt.$selected = $s;\r\n                }\r\n\r\n                var $children = opt.$menu.children(),\r\n                    $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),\r\n                    $round = $prev;\r\n\r\n                // skip disabled or hidden elements\r\n                while ($prev.hasClass(root.classNames.disabled) || $prev.hasClass(root.classNames.notSelectable) || $prev.is(':hidden')) {\r\n                    if ($prev.prev().length) {\r\n                        $prev = $prev.prev();\r\n                    } else {\r\n                        $prev = $children.last();\r\n                    }\r\n                    if ($prev.is($round)) {\r\n                        // break endless loop\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // leave current\r\n                if (opt.$selected) {\r\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\r\n                }\r\n\r\n                // activate next\r\n                handle.itemMouseenter.call($prev.get(0), e);\r\n\r\n                // focus input\r\n                var $input = $prev.find('input, textarea, select');\r\n                if ($input.length) {\r\n                    $input.focus();\r\n                }\r\n            },\r\n            // select next possible command in menu\r\n            nextItem: function (e) {\r\n                e.stopPropagation();\r\n                var opt = $(this).data('contextMenu') || {};\r\n                var root = $(this).data('contextMenuRoot') || {};\r\n\r\n                // obtain currently selected menu\r\n                if (opt.$selected) {\r\n                    var $s = opt.$selected;\r\n                    opt = opt.$selected.parent().data('contextMenu') || {};\r\n                    opt.$selected = $s;\r\n                }\r\n\r\n                var $children = opt.$menu.children(),\r\n                    $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),\r\n                    $round = $next;\r\n\r\n                // skip disabled\r\n                while ($next.hasClass(root.classNames.disabled) || $next.hasClass(root.classNames.notSelectable) || $next.is(':hidden')) {\r\n                    if ($next.next().length) {\r\n                        $next = $next.next();\r\n                    } else {\r\n                        $next = $children.first();\r\n                    }\r\n                    if ($next.is($round)) {\r\n                        // break endless loop\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                // leave current\r\n                if (opt.$selected) {\r\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\r\n                }\r\n\r\n                // activate next\r\n                handle.itemMouseenter.call($next.get(0), e);\r\n\r\n                // focus input\r\n                var $input = $next.find('input, textarea, select');\r\n                if ($input.length) {\r\n                    $input.focus();\r\n                }\r\n            },\r\n            // flag that we're inside an input so the key handler can act accordingly\r\n            focusInput: function () {\r\n                var $this = $(this).closest('.context-menu-item'),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                root.$selected = opt.$selected = $this;\r\n                root.isInput = opt.isInput = true;\r\n            },\r\n            // flag that we're inside an input so the key handler can act accordingly\r\n            blurInput: function () {\r\n                var $this = $(this).closest('.context-menu-item'),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                root.isInput = opt.isInput = false;\r\n            },\r\n            // :hover on menu\r\n            menuMouseenter: function () {\r\n                var root = $(this).data().contextMenuRoot;\r\n                root.hovering = true;\r\n            },\r\n            // :hover on menu\r\n            menuMouseleave: function (e) {\r\n                var root = $(this).data().contextMenuRoot;\r\n                if (root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                    root.hovering = false;\r\n                }\r\n            },\r\n            // :hover done manually so key handling is possible\r\n            itemMouseenter: function (e) {\r\n                var $this = $(this),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                root.hovering = true;\r\n\r\n                // abort if we're re-entering\r\n                if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                    e.preventDefault();\r\n                    e.stopImmediatePropagation();\r\n                }\r\n\r\n                // make sure only one item is selected\r\n                (opt.$menu ? opt : root).$menu\r\n                    .children('.' + root.classNames.hover).trigger('contextmenu:blur')\r\n                    .children('.hover').trigger('contextmenu:blur');\r\n\r\n                if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\r\n                    opt.$selected = null;\r\n                    return;\r\n                }\r\n\r\n\r\n                $this.trigger('contextmenu:focus');\r\n            },\r\n            // :hover done manually so key handling is possible\r\n            itemMouseleave: function (e) {\r\n                var $this = $(this),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                    if (typeof root.$selected !== 'undefined' && root.$selected !== null) {\r\n                        root.$selected.trigger('contextmenu:blur');\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopImmediatePropagation();\r\n                    root.$selected = opt.$selected = opt.$node;\r\n                    return;\r\n                }\r\n\r\n                if(opt && opt.$menu && opt.$menu.hasClass('context-menu-visible')){\r\n                    return;\r\n                }\r\n\r\n                $this.trigger('contextmenu:blur');\r\n            },\r\n            // contextMenu item click\r\n            itemClick: function (e) {\r\n                var $this = $(this),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot,\r\n                    key = data.contextMenuKey,\r\n                    callback;\r\n\r\n                // abort if the key is unknown or disabled or is a menu\r\n                if (!opt.items[key] || $this.is('.' + root.classNames.disabled + ', .context-menu-separator, .' + root.classNames.notSelectable) || ($this.is('.context-menu-submenu') && root.selectableSubMenu === false )) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n\r\n                if ($.isFunction(opt.callbacks[key]) && Object.prototype.hasOwnProperty.call(opt.callbacks, key)) {\r\n                    // item-specific callback\r\n                    callback = opt.callbacks[key];\r\n                } else if ($.isFunction(root.callback)) {\r\n                    // default callback\r\n                    callback = root.callback;\r\n                } else {\r\n                    // no callback, no action\r\n                    return;\r\n                }\r\n\r\n                // hide menu if callback doesn't stop that\r\n                if (callback.call(root.$trigger, key, root, e) !== false) {\r\n                    root.$menu.trigger('contextmenu:hide');\r\n                } else if (root.$menu.parent().length) {\r\n                    op.update.call(root.$trigger, root);\r\n                }\r\n            },\r\n            // ignore click events on input elements\r\n            inputClick: function (e) {\r\n                e.stopImmediatePropagation();\r\n            },\r\n            // hide <menu>\r\n            hideMenu: function (e, data) {\r\n                var root = $(this).data('contextMenuRoot');\r\n                op.hide.call(root.$trigger, root, data && data.force);\r\n            },\r\n            // focus <command>\r\n            focusItem: function (e) {\r\n                e.stopPropagation();\r\n                var $this = $(this),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                if ($this.hasClass(root.classNames.disabled) || $this.hasClass(root.classNames.notSelectable)) {\r\n                    return;\r\n                }\r\n\r\n                $this\r\n                    .addClass([root.classNames.hover, root.classNames.visible].join(' '))\r\n                    // select other items and included items\r\n                    .parent().find('.context-menu-item').not($this)\r\n                    .removeClass(root.classNames.visible)\r\n                    .filter('.' + root.classNames.hover)\r\n                    .trigger('contextmenu:blur');\r\n\r\n                // remember selected\r\n                opt.$selected = root.$selected = $this;\r\n\r\n\r\n                if(opt && opt.$node && opt.$node.hasClass('context-menu-submenu')){\r\n                    opt.$node.addClass(root.classNames.hover);\r\n                }\r\n\r\n                // position sub-menu - do after show so dumb $.ui.position can keep up\r\n                if (opt.$node) {\r\n                    root.positionSubmenu.call(opt.$node, opt.$menu);\r\n                }\r\n            },\r\n            // blur <command>\r\n            blurItem: function (e) {\r\n                e.stopPropagation();\r\n                var $this = $(this),\r\n                    data = $this.data(),\r\n                    opt = data.contextMenu,\r\n                    root = data.contextMenuRoot;\r\n\r\n                if (opt.autoHide) { // for tablets and touch screens this needs to remain\r\n                    $this.removeClass(root.classNames.visible);\r\n                }\r\n                $this.removeClass(root.classNames.hover);\r\n                opt.$selected = null;\r\n            }\r\n        },\r\n        // operations\r\n        op = {\r\n            show: function (opt, x, y) {\r\n                var $trigger = $(this),\r\n                    css = {};\r\n\r\n                // hide any open menus\r\n                $('#context-menu-layer').trigger('mousedown');\r\n\r\n                // backreference for callbacks\r\n                opt.$trigger = $trigger;\r\n\r\n                // show event\r\n                if (opt.events.show.call($trigger, opt) === false) {\r\n                    $currentTrigger = null;\r\n                    return;\r\n                }\r\n\r\n                // create or update context menu\r\n                op.update.call($trigger, opt);\r\n\r\n                // position menu\r\n                opt.position.call($trigger, opt, x, y);\r\n\r\n                // make sure we're in front\r\n                if (opt.zIndex) {\r\n                    var additionalZValue = opt.zIndex;\r\n                    // If opt.zIndex is a function, call the function to get the right zIndex.\r\n                    if (typeof opt.zIndex === 'function') {\r\n                        additionalZValue = opt.zIndex.call($trigger, opt);\r\n                    }\r\n                    css.zIndex = zindex($trigger) + additionalZValue;\r\n                }\r\n\r\n                // add layer\r\n                op.layer.call(opt.$menu, opt, css.zIndex);\r\n\r\n                // adjust sub-menu zIndexes\r\n                opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\r\n\r\n                // position and show context menu\r\n                opt.$menu.css(css)[opt.animation.show](opt.animation.duration, function () {\r\n                    $trigger.trigger('contextmenu:visible');\r\n                });\r\n                // make options available and set state\r\n                $trigger\r\n                    .data('contextMenu', opt)\r\n                    .addClass('context-menu-active');\r\n\r\n                // register key handler\r\n                $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);\r\n                // register autoHide handler\r\n                if (opt.autoHide) {\r\n                    // mouse position handler\r\n                    $(document).on('mousemove.contextMenuAutoHide', function (e) {\r\n                        // need to capture the offset on mousemove,\r\n                        // since the page might've been scrolled since activation\r\n                        var pos = $trigger.offset();\r\n                        pos.right = pos.left + $trigger.outerWidth();\r\n                        pos.bottom = pos.top + $trigger.outerHeight();\r\n\r\n                        if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\r\n                            /* Additional hover check after short time, you might just miss the edge of the menu */\r\n                            setTimeout(function () {\r\n                                if (!opt.hovering && opt.$menu !== null && typeof opt.$menu !== 'undefined') {\r\n                                    opt.$menu.trigger('contextmenu:hide');\r\n                                }\r\n                            }, 50);\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            hide: function (opt, force) {\r\n                var $trigger = $(this);\r\n                if (!opt) {\r\n                    opt = $trigger.data('contextMenu') || {};\r\n                }\r\n\r\n                // hide event\r\n                if (!force && opt.events && opt.events.hide.call($trigger, opt) === false) {\r\n                    return;\r\n                }\r\n\r\n                // remove options and revert state\r\n                $trigger\r\n                    .removeData('contextMenu')\r\n                    .removeClass('context-menu-active');\r\n\r\n                if (opt.$layer) {\r\n                    // keep layer for a bit so the contextmenu event can be aborted properly by opera\r\n                    setTimeout((function ($layer) {\r\n                        return function () {\r\n                            $layer.remove();\r\n                        };\r\n                    })(opt.$layer), 10);\r\n\r\n                    try {\r\n                        delete opt.$layer;\r\n                    } catch (e) {\r\n                        opt.$layer = null;\r\n                    }\r\n                }\r\n\r\n                // remove handle\r\n                $currentTrigger = null;\r\n                // remove selected\r\n                opt.$menu.find('.' + opt.classNames.hover).trigger('contextmenu:blur');\r\n                opt.$selected = null;\r\n                // collapse all submenus\r\n                opt.$menu.find('.' + opt.classNames.visible).removeClass(opt.classNames.visible);\r\n                // unregister key and mouse handlers\r\n                // $(document).off('.contextMenuAutoHide keydown.contextMenu'); // http://bugs.jquery.com/ticket/10705\r\n                $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\r\n                // hide menu\r\n                if (opt.$menu) {\r\n                    opt.$menu[opt.animation.hide](opt.animation.duration, function () {\r\n                        // tear down dynamically built menu after animation is completed.\r\n                        if (opt.build) {\r\n                            opt.$menu.remove();\r\n                            $.each(opt, function (key) {\r\n                                switch (key) {\r\n                                    case 'ns':\r\n                                    case 'selector':\r\n                                    case 'build':\r\n                                    case 'trigger':\r\n                                        return true;\r\n\r\n                                    default:\r\n                                        opt[key] = undefined;\r\n                                        try {\r\n                                            delete opt[key];\r\n                                        } catch (e) {\r\n                                        }\r\n                                        return true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        setTimeout(function () {\r\n                            $trigger.trigger('contextmenu:hidden');\r\n                        }, 10);\r\n                    });\r\n                }\r\n            },\r\n            create: function (opt, root) {\r\n                if (typeof root === 'undefined') {\r\n                    root = opt;\r\n                }\r\n\r\n                // create contextMenu\r\n                opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || '').data({\r\n                    'contextMenu': opt,\r\n                    'contextMenuRoot': root\r\n                });\r\n\r\n                $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\r\n                    opt[k] = {};\r\n                    if (!root[k]) {\r\n                        root[k] = {};\r\n                    }\r\n                });\r\n\r\n                if (!root.accesskeys) {\r\n                    root.accesskeys = {};\r\n                }\r\n\r\n                function createNameNode(item) {\r\n                    var $name = $('<span></span>');\r\n                    if (item._accesskey) {\r\n                        if (item._beforeAccesskey) {\r\n                            $name.append(document.createTextNode(item._beforeAccesskey));\r\n                        }\r\n                        $('<span></span>')\r\n                            .addClass('context-menu-accesskey')\r\n                            .text(item._accesskey)\r\n                            .appendTo($name);\r\n                        if (item._afterAccesskey) {\r\n                            $name.append(document.createTextNode(item._afterAccesskey));\r\n                        }\r\n                    } else {\r\n                        if (item.isHtmlName) {\r\n                            // restrict use with access keys\r\n                            if (typeof item.accesskey !== 'undefined') {\r\n                                throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\r\n                            }\r\n                            $name.html(item.name);\r\n                        } else {\r\n                            $name.text(item.name);\r\n                        }\r\n                    }\r\n                    return $name;\r\n                }\r\n\r\n                // create contextMenu items\r\n                $.each(opt.items, function (key, item) {\r\n                    var $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || ''),\r\n                        $label = null,\r\n                        $input = null;\r\n\r\n                    // iOS needs to see a click-event bound to an element to actually\r\n                    // have the TouchEvents infrastructure trigger the click event\r\n                    $t.on('click', $.noop);\r\n\r\n                    // Make old school string seperator a real item so checks wont be\r\n                    // akward later.\r\n                    // And normalize 'cm_separator' into 'cm_seperator'.\r\n                    if (typeof item === 'string' || item.type === 'cm_separator') {\r\n                        item = {type: 'cm_seperator'};\r\n                    }\r\n\r\n                    item.$node = $t.data({\r\n                        'contextMenu': opt,\r\n                        'contextMenuRoot': root,\r\n                        'contextMenuKey': key\r\n                    });\r\n\r\n                    // register accesskey\r\n                    // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\r\n                    if (typeof item.accesskey !== 'undefined') {\r\n                        var aks = splitAccesskey(item.accesskey);\r\n                        for (var i = 0, ak; ak = aks[i]; i++) {\r\n                            if (!root.accesskeys[ak]) {\r\n                                root.accesskeys[ak] = item;\r\n                                var matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\r\n                                if (matched) {\r\n                                    item._beforeAccesskey = matched[1];\r\n                                    item._accesskey = matched[2];\r\n                                    item._afterAccesskey = matched[3];\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (item.type && types[item.type]) {\r\n                        // run custom type handler\r\n                        types[item.type].call($t, item, opt, root);\r\n                        // register commands\r\n                        $.each([opt, root], function (i, k) {\r\n                            k.commands[key] = item;\r\n                            // Overwrite only if undefined or the item is appended to the root. This so it\r\n                            // doesn't overwrite callbacks of root elements if the name is the same.\r\n                            if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\r\n                                k.callbacks[key] = item.callback;\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // add label for input\r\n                        if (item.type === 'cm_seperator') {\r\n                            $t.addClass('context-menu-separator ' + root.classNames.notSelectable);\r\n                        } else if (item.type === 'html') {\r\n                            $t.addClass('context-menu-html ' + root.classNames.notSelectable);\r\n                        } else if (item.type === 'sub') {\r\n                            // We don't want to execute the next else-if if it is a sub.\r\n                        } else if (item.type) {\r\n                            $label = $('<label></label>').appendTo($t);\r\n                            createNameNode(item).appendTo($label);\r\n\r\n                            $t.addClass('context-menu-input');\r\n                            opt.hasTypes = true;\r\n                            $.each([opt, root], function (i, k) {\r\n                                k.commands[key] = item;\r\n                                k.inputs[key] = item;\r\n                            });\r\n                        } else if (item.items) {\r\n                            item.type = 'sub';\r\n                        }\r\n\r\n                        switch (item.type) {\r\n                            case 'cm_seperator':\r\n                                break;\r\n\r\n                            case 'text':\r\n                                $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\r\n                                    .attr('name', 'context-menu-input-' + key)\r\n                                    .val(item.value || '')\r\n                                    .appendTo($label);\r\n                                break;\r\n\r\n                            case 'textarea':\r\n                                $input = $('<textarea name=\"\"></textarea>')\r\n                                    .attr('name', 'context-menu-input-' + key)\r\n                                    .val(item.value || '')\r\n                                    .appendTo($label);\r\n\r\n                                if (item.height) {\r\n                                    $input.height(item.height);\r\n                                }\r\n                                break;\r\n\r\n                            case 'checkbox':\r\n                                $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\r\n                                    .attr('name', 'context-menu-input-' + key)\r\n                                    .val(item.value || '')\r\n                                    .prop('checked', !!item.selected)\r\n                                    .prependTo($label);\r\n                                break;\r\n\r\n                            case 'radio':\r\n                                $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\r\n                                    .attr('name', 'context-menu-input-' + item.radio)\r\n                                    .val(item.value || '')\r\n                                    .prop('checked', !!item.selected)\r\n                                    .prependTo($label);\r\n                                break;\r\n\r\n                            case 'select':\r\n                                $input = $('<select name=\"\"></select>')\r\n                                    .attr('name', 'context-menu-input-' + key)\r\n                                    .appendTo($label);\r\n                                if (item.options) {\r\n                                    $.each(item.options, function (value, text) {\r\n                                        $('<option></option>').val(value).text(text).appendTo($input);\r\n                                    });\r\n                                    $input.val(item.selected);\r\n                                }\r\n                                break;\r\n\r\n                            case 'sub':\r\n                                createNameNode(item).appendTo($t);\r\n                                item.appendTo = item.$node;\r\n                                $t.data('contextMenu', item).addClass('context-menu-submenu');\r\n                                item.callback = null;\r\n\r\n                                // If item contains items, and this is a promise, we should create it later\r\n                                // check if subitems is of type promise. If it is a promise we need to create\r\n                                // it later, after promise has been resolved.\r\n                                if ('function' === typeof item.items.then) {\r\n                                    // probably a promise, process it, when completed it will create the sub menu's.\r\n                                    op.processPromises(item, root, item.items);\r\n                                } else {\r\n                                    // normal submenu.\r\n                                    op.create(item, root);\r\n                                }\r\n                                break;\r\n\r\n                            case 'html':\r\n                                $(item.html).appendTo($t);\r\n                                break;\r\n\r\n                            default:\r\n                                $.each([opt, root], function (i, k) {\r\n                                    k.commands[key] = item;\r\n                                    // Overwrite only if undefined or the item is appended to the root. This so it\r\n                                    // doesn't overwrite callbacks of root elements if the name is the same.\r\n                                    if ($.isFunction(item.callback) && (typeof k.callbacks[key] === 'undefined' || typeof opt.type === 'undefined')) {\r\n                                        k.callbacks[key] = item.callback;\r\n                                    }\r\n                                });\r\n                                createNameNode(item).appendTo($t);\r\n                                break;\r\n                        }\r\n\r\n                        // disable key listener in <input>\r\n                        if (item.type && item.type !== 'sub' && item.type !== 'html' && item.type !== 'cm_seperator') {\r\n                            $input\r\n                                .on('focus', handle.focusInput)\r\n                                .on('blur', handle.blurInput);\r\n\r\n                            if (item.events) {\r\n                                $input.on(item.events, opt);\r\n                            }\r\n                        }\r\n\r\n                        // add icons\r\n                        if (item.icon) {\r\n                            if ($.isFunction(item.icon)) {\r\n                                item._icon = item.icon.call(this, this, $t, key, item);\r\n                            } else {\r\n                                if (typeof(item.icon) === 'string' && item.icon.substring(0, 3) === 'fa-') {\r\n                                    // to enable font awesome\r\n                                    item._icon = root.classNames.icon + ' ' + root.classNames.icon + '--fa fa ' + item.icon;\r\n                                } else {\r\n                                    item._icon = root.classNames.icon + ' ' + root.classNames.icon + '-' + item.icon;\r\n                                }\r\n                            }\r\n                            $t.addClass(item._icon);\r\n                        }\r\n                    }\r\n\r\n                    // cache contained elements\r\n                    item.$input = $input;\r\n                    item.$label = $label;\r\n\r\n                    // attach item to menu\r\n                    $t.appendTo(opt.$menu);\r\n\r\n                    // Disable text selection\r\n                    if (!opt.hasTypes && $.support.eventSelectstart) {\r\n                        // browsers support user-select: none,\r\n                        // IE has a special event for text-selection\r\n                        // browsers supporting neither will not be preventing text-selection\r\n                        $t.on('selectstart.disableTextSelect', handle.abortevent);\r\n                    }\r\n                });\r\n                // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\r\n                if (!opt.$node) {\r\n                    opt.$menu.css('display', 'none').addClass('context-menu-root');\r\n                }\r\n                opt.$menu.appendTo(opt.appendTo || document.body);\r\n            },\r\n            resize: function ($menu, nested) {\r\n                var domMenu;\r\n                // determine widths of submenus, as CSS won't grow them automatically\r\n                // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\r\n                // kinda sucks hard...\r\n\r\n                // determine width of absolutely positioned element\r\n                $menu.css({position: 'absolute', display: 'block'});\r\n                // don't apply yet, because that would break nested elements' widths\r\n                $menu.data('width',\r\n                    (domMenu = $menu.get(0)).getBoundingClientRect ?\r\n                        Math.ceil(domMenu.getBoundingClientRect().width) :\r\n                        $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\r\n                // reset styles so they allow nested elements to grow/shrink naturally\r\n                $menu.css({\r\n                    position: 'static',\r\n                    minWidth: '0px',\r\n                    maxWidth: '100000px'\r\n                });\r\n                // identify width of nested menus\r\n                $menu.find('> li > ul').each(function () {\r\n                    op.resize($(this), true);\r\n                });\r\n                // reset and apply changes in the end because nested\r\n                // elements' widths wouldn't be calculatable otherwise\r\n                if (!nested) {\r\n                    $menu.find('ul').addBack().css({\r\n                        position: '',\r\n                        display: '',\r\n                        minWidth: '',\r\n                        maxWidth: ''\r\n                    }).outerWidth(function () {\r\n                        return $(this).data('width');\r\n                    });\r\n                }\r\n            },\r\n            update: function (opt, root) {\r\n                var $trigger = this;\r\n                if (typeof root === 'undefined') {\r\n                    root = opt;\r\n                    op.resize(opt.$menu);\r\n                }\r\n                // re-check disabled for each item\r\n                opt.$menu.children().each(function () {\r\n                    var $item = $(this),\r\n                        key = $item.data('contextMenuKey'),\r\n                        item = opt.items[key],\r\n                        disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || item.disabled === true,\r\n                        visible;\r\n                    if ($.isFunction(item.visible)) {\r\n                        visible = item.visible.call($trigger, key, root);\r\n                    } else if (typeof item.visible !== 'undefined') {\r\n                        visible = item.visible === true;\r\n                    } else {\r\n                        visible = true;\r\n                    }\r\n                    $item[visible ? 'show' : 'hide']();\r\n\r\n                    // dis- / enable item\r\n                    $item[disabled ? 'addClass' : 'removeClass'](root.classNames.disabled);\r\n\r\n                    if ($.isFunction(item.icon)) {\r\n                        $item.removeClass(item._icon);\r\n                        item._icon = item.icon.call(this, $trigger, $item, key, item);\r\n                        $item.addClass(item._icon);\r\n                    }\r\n\r\n                    if (item.type) {\r\n                        // dis- / enable input elements\r\n                        $item.find('input, select, textarea').prop('disabled', disabled);\r\n\r\n                        // update input states\r\n                        switch (item.type) {\r\n                            case 'text':\r\n                            case 'textarea':\r\n                                item.$input.val(item.value || '');\r\n                                break;\r\n\r\n                            case 'checkbox':\r\n                            case 'radio':\r\n                                item.$input.val(item.value || '').prop('checked', !!item.selected);\r\n                                break;\r\n\r\n                            case 'select':\r\n                                item.$input.val((item.selected === 0 ? \"0\" : item.selected) || '');\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    if (item.$menu) {\r\n                        // update sub-menu\r\n                        op.update.call($trigger, item, root);\r\n                    }\r\n                });\r\n            },\r\n            layer: function (opt, zIndex) {\r\n                // add transparent layer for click area\r\n                // filter and background for Internet Explorer, Issue #23\r\n                var $layer = opt.$layer = $('<div id=\"context-menu-layer\"></div>')\r\n                    .css({\r\n                        height: $win.height(),\r\n                        width: $win.width(),\r\n                        display: 'block',\r\n                        position: 'fixed',\r\n                        'z-index': zIndex,\r\n                        top: 0,\r\n                        left: 0,\r\n                        opacity: 0,\r\n                        filter: 'alpha(opacity=0)',\r\n                        'background-color': '#000'\r\n                    })\r\n                    .data('contextMenuRoot', opt)\r\n                    .insertBefore(this)\r\n                    .on('contextmenu', handle.abortevent)\r\n                    .on('mousedown', handle.layerClick);\r\n\r\n                // IE6 doesn't know position:fixed;\r\n                if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\r\n                    $layer.css({\r\n                        'position': 'absolute',\r\n                        'height': $(document).height()\r\n                    });\r\n                }\r\n\r\n                return $layer;\r\n            },\r\n            processPromises: function (opt, root, promise) {\r\n                // Start\r\n                opt.$node.addClass(root.classNames.iconLoadingClass);\r\n\r\n                function completedPromise(opt, root, items) {\r\n                    // Completed promise (dev called promise.resolve). We now have a list of items which can\r\n                    // be used to create the rest of the context menu.\r\n                    if (typeof items === 'undefined') {\r\n                        // Null result, dev should have checked\r\n                        errorPromise(undefined);//own error object\r\n                    }\r\n                    finishPromiseProcess(opt, root, items);\r\n                }\r\n\r\n                function errorPromise(opt, root, errorItem) {\r\n                    // User called promise.reject() with an error item, if not, provide own error item.\r\n                    if (typeof errorItem === 'undefined') {\r\n                        errorItem = {\r\n                            \"error\": {\r\n                                name: \"No items and no error item\",\r\n                                icon: \"context-menu-icon context-menu-icon-quit\"\r\n                            }\r\n                        };\r\n                        if (window.console) {\r\n                            (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\r\n                        }\r\n                    } else if (typeof errorItem === 'string') {\r\n                        errorItem = {\"error\": {name: errorItem}};\r\n                    }\r\n                    finishPromiseProcess(opt, root, errorItem);\r\n                }\r\n\r\n                function finishPromiseProcess(opt, root, items) {\r\n                    if (typeof root.$menu === 'undefined' || !root.$menu.is(':visible')) {\r\n                        return;\r\n                    }\r\n                    opt.$node.removeClass(root.classNames.iconLoadingClass);\r\n                    opt.items = items;\r\n                    op.create(opt, root, true); // Create submenu\r\n                    op.update(opt, root); // Correctly update position if user is already hovered over menu item\r\n                    root.positionSubmenu.call(opt.$node, opt.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\r\n                }\r\n\r\n                // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the opt\r\n                // and root to avoid scope problems\r\n                promise.then(completedPromise.bind(this, opt, root), errorPromise.bind(this, opt, root));\r\n            }\r\n        };\r\n\r\n    // split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\r\n    function splitAccesskey(val) {\r\n        var t = val.split(/\\s+/);\r\n        var keys = [];\r\n\r\n        for (var i = 0, k; k = t[i]; i++) {\r\n            k = k.charAt(0).toUpperCase(); // first character only\r\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\r\n            // a map to look up already used access keys would be nice\r\n            keys.push(k);\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n// handle contextMenu triggers\r\n    $.fn.contextMenu = function (operation) {\r\n        var $t = this, $o = operation;\r\n        if (this.length > 0) {  // this is not a build on demand menu\r\n            if (typeof operation === 'undefined') {\r\n                this.first().trigger('contextmenu');\r\n            } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\r\n                this.first().trigger($.Event('contextmenu', {\r\n                    pageX: operation.x,\r\n                    pageY: operation.y,\r\n                    mouseButton: operation.button\r\n                }));\r\n            } else if (operation === 'hide') {\r\n                var $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\r\n                if ($menu) {\r\n                    $menu.trigger('contextmenu:hide');\r\n                }\r\n            } else if (operation === 'destroy') {\r\n                $.contextMenu('destroy', {context: this});\r\n            } else if ($.isPlainObject(operation)) {\r\n                operation.context = this;\r\n                $.contextMenu('create', operation);\r\n            } else if (operation) {\r\n                this.removeClass('context-menu-disabled');\r\n            } else if (!operation) {\r\n                this.addClass('context-menu-disabled');\r\n            }\r\n        } else {\r\n            $.each(menus, function () {\r\n                if (this.selector === $t.selector) {\r\n                    $o.data = this;\r\n\r\n                    $.extend($o.data, {trigger: 'demand'});\r\n                }\r\n            });\r\n\r\n            handle.contextmenu.call($o.target, $o);\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    // manage contextMenu instances\r\n    $.contextMenu = function (operation, options) {\r\n        if (typeof operation !== 'string') {\r\n            options = operation;\r\n            operation = 'create';\r\n        }\r\n\r\n        if (typeof options === 'string') {\r\n            options = {selector: options};\r\n        } else if (typeof options === 'undefined') {\r\n            options = {};\r\n        }\r\n\r\n        // merge with default options\r\n        var o = $.extend(true, {}, defaults, options || {});\r\n        var $document = $(document);\r\n        var $context = $document;\r\n        var _hasContext = false;\r\n\r\n        if (!o.context || !o.context.length) {\r\n            o.context = document;\r\n        } else {\r\n            // you never know what they throw at you...\r\n            $context = $(o.context).first();\r\n            o.context = $context.get(0);\r\n            _hasContext = !$(o.context).is(document);\r\n        }\r\n\r\n        switch (operation) {\r\n            case 'create':\r\n                // no selector no joy\r\n                if (!o.selector) {\r\n                    throw new Error('No selector specified');\r\n                }\r\n                // make sure internal classes are not bound to\r\n                if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\r\n                    throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\r\n                }\r\n                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\r\n                    throw new Error('No Items specified');\r\n                }\r\n                counter++;\r\n                o.ns = '.contextMenu' + counter;\r\n                if (!_hasContext) {\r\n                    namespaces[o.selector] = o.ns;\r\n                }\r\n                menus[o.ns] = o;\r\n\r\n                // default to right click\r\n                if (!o.trigger) {\r\n                    o.trigger = 'right';\r\n                }\r\n\r\n                if (!initialized) {\r\n                    var itemClick = o.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\r\n                    var contextMenuItemObj = {\r\n                        // 'mouseup.contextMenu': handle.itemClick,\r\n                        // 'click.contextMenu': handle.itemClick,\r\n                        'contextmenu:focus.contextMenu': handle.focusItem,\r\n                        'contextmenu:blur.contextMenu': handle.blurItem,\r\n                        'contextmenu.contextMenu': handle.abortevent,\r\n                        'mouseenter.contextMenu': handle.itemMouseenter,\r\n                        'mouseleave.contextMenu': handle.itemMouseleave\r\n                    };\r\n                    contextMenuItemObj[itemClick] = handle.itemClick;\r\n                    // make sure item click is registered first\r\n                    $document\r\n                        .on({\r\n                            'contextmenu:hide.contextMenu': handle.hideMenu,\r\n                            'prevcommand.contextMenu': handle.prevItem,\r\n                            'nextcommand.contextMenu': handle.nextItem,\r\n                            'contextmenu.contextMenu': handle.abortevent,\r\n                            'mouseenter.contextMenu': handle.menuMouseenter,\r\n                            'mouseleave.contextMenu': handle.menuMouseleave\r\n                        }, '.context-menu-list')\r\n                        .on('mouseup.contextMenu', '.context-menu-input', handle.inputClick)\r\n                        .on(contextMenuItemObj, '.context-menu-item');\r\n\r\n                    initialized = true;\r\n                }\r\n\r\n                // engage native contextmenu event\r\n                $context\r\n                    .on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);\r\n\r\n                if (_hasContext) {\r\n                    // add remove hook, just in case\r\n                    $context.on('remove' + o.ns, function () {\r\n                        $(this).contextMenu('destroy');\r\n                    });\r\n                }\r\n\r\n                switch (o.trigger) {\r\n                    case 'hover':\r\n                        $context\r\n                            .on('mouseenter' + o.ns, o.selector, o, handle.mouseenter)\r\n                            .on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);\r\n                        break;\r\n\r\n                    case 'left':\r\n                        $context.on('click' + o.ns, o.selector, o, handle.click);\r\n                        break;\r\n\t\t\t\t    case 'touchstart':\r\n                        $context.on('touchstart' + o.ns, o.selector, o, handle.click);\r\n                        break;\r\n                    /*\r\n                     default:\r\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\r\n                     $document\r\n                     .on('mousedown' + o.ns, o.selector, o, handle.mousedown)\r\n                     .on('mouseup' + o.ns, o.selector, o, handle.mouseup);\r\n                     break;\r\n                     */\r\n                }\r\n\r\n                // create menu\r\n                if (!o.build) {\r\n                    op.create(o);\r\n                }\r\n                break;\r\n\r\n            case 'destroy':\r\n                var $visibleMenu;\r\n                if (_hasContext) {\r\n                    // get proper options\r\n                    var context = o.context;\r\n                    $.each(menus, function (ns, o) {\r\n\r\n                        if (!o) {\r\n                            return true;\r\n                        }\r\n\r\n                        // Is this menu equest to the context called from\r\n                        if (!$(context).is(o.selector)) {\r\n                            return true;\r\n                        }\r\n\r\n                        $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\r\n                            $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n                        }\r\n\r\n                        try {\r\n                            if (menus[o.ns].$menu) {\r\n                                menus[o.ns].$menu.remove();\r\n                            }\r\n\r\n                            delete menus[o.ns];\r\n                        } catch (e) {\r\n                            menus[o.ns] = null;\r\n                        }\r\n\r\n                        $(o.context).off(o.ns);\r\n\r\n                        return true;\r\n                    });\r\n                } else if (!o.selector) {\r\n                    $document.off('.contextMenu .contextMenuAutoHide');\r\n                    $.each(menus, function (ns, o) {\r\n                        $(o.context).off(o.ns);\r\n                    });\r\n\r\n                    namespaces = {};\r\n                    menus = {};\r\n                    counter = 0;\r\n                    initialized = false;\r\n\r\n                    $('#context-menu-layer, .context-menu-list').remove();\r\n                } else if (namespaces[o.selector]) {\r\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\r\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n                    }\r\n\r\n                    try {\r\n                        if (menus[namespaces[o.selector]].$menu) {\r\n                            menus[namespaces[o.selector]].$menu.remove();\r\n                        }\r\n\r\n                        delete menus[namespaces[o.selector]];\r\n                    } catch (e) {\r\n                        menus[namespaces[o.selector]] = null;\r\n                    }\r\n\r\n                    $document.off(namespaces[o.selector]);\r\n                }\r\n                break;\r\n\r\n            case 'html5':\r\n                // if <command> or <menuitem> are not handled by the browser,\r\n                // or options was a bool true,\r\n                // initialize $.contextMenu for them\r\n                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {\r\n                    $('menu[type=\"context\"]').each(function () {\r\n                        if (this.id) {\r\n                            $.contextMenu({\r\n                                selector: '[contextmenu=' + this.id + ']',\r\n                                items: $.contextMenu.fromMenu(this)\r\n                            });\r\n                        }\r\n                    }).css('display', 'none');\r\n                }\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown operation \"' + operation + '\"');\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n// import values into <input> commands\r\n    $.contextMenu.setInputValues = function (opt, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(opt.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                    item.value = data[key] || '';\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    item.selected = data[key] ? true : false;\r\n                    break;\r\n\r\n                case 'radio':\r\n                    item.selected = (data[item.radio] || '') === item.value;\r\n                    break;\r\n\r\n                case 'select':\r\n                    item.selected = data[key] || '';\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n\r\n// export values from <input> commands\r\n    $.contextMenu.getInputValues = function (opt, data) {\r\n        if (typeof data === 'undefined') {\r\n            data = {};\r\n        }\r\n\r\n        $.each(opt.inputs, function (key, item) {\r\n            switch (item.type) {\r\n                case 'text':\r\n                case 'textarea':\r\n                case 'select':\r\n                    data[key] = item.$input.val();\r\n                    break;\r\n\r\n                case 'checkbox':\r\n                    data[key] = item.$input.prop('checked');\r\n                    break;\r\n\r\n                case 'radio':\r\n                    if (item.$input.prop('checked')) {\r\n                        data[item.radio] = item.value;\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return data;\r\n    };\r\n\r\n// find <label for=\"xyz\">\r\n    function inputLabel(node) {\r\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\r\n    }\r\n\r\n// convert <menu> to items object\r\n    function menuChildren(items, $children, counter) {\r\n        if (!counter) {\r\n            counter = 0;\r\n        }\r\n\r\n        $children.each(function () {\r\n            var $node = $(this),\r\n                node = this,\r\n                nodeName = this.nodeName.toLowerCase(),\r\n                label,\r\n                item;\r\n\r\n            // extract <label><input>\r\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\r\n                label = $node.text();\r\n                $node = $node.children().first();\r\n                node = $node.get(0);\r\n                nodeName = node.nodeName.toLowerCase();\r\n            }\r\n\r\n            /*\r\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\r\n             * Not being the sadistic kind, $.contextMenu only accepts:\r\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\r\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\r\n             */\r\n\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\r\n            switch (nodeName) {\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\r\n                case 'menu':\r\n                    item = {name: $node.attr('label'), items: {}};\r\n                    counter = menuChildren(item.items, $node.children(), counter);\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\r\n                case 'a':\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\r\n                case 'button':\r\n                    item = {\r\n                        name: $node.text(),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        callback: (function () {\r\n                            return function () {\r\n                                $node.get(0).click()\r\n                            };\r\n                        })()\r\n                    };\r\n                    break;\r\n\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\r\n                case 'menuitem':\r\n                case 'command':\r\n                    switch ($node.attr('type')) {\r\n                        case undefined:\r\n                        case 'command':\r\n                        case 'menuitem':\r\n                            item = {\r\n                                name: $node.attr('label'),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                icon: $node.attr('icon'),\r\n                                callback: (function () {\r\n                                    return function () {\r\n                                        $node.get(0).click()\r\n                                    };\r\n                                })()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                disabled: !!$node.attr('disabled'),\r\n                                name: $node.attr('label'),\r\n                                radio: $node.attr('radiogroup'),\r\n                                value: $node.attr('id'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                    }\r\n                    break;\r\n\r\n                case 'hr':\r\n                    item = '-------';\r\n                    break;\r\n\r\n                case 'input':\r\n                    switch ($node.attr('type')) {\r\n                        case 'text':\r\n                            item = {\r\n                                type: 'text',\r\n                                name: label || inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                value: $node.val()\r\n                            };\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            item = {\r\n                                type: 'checkbox',\r\n                                name: label || inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        case 'radio':\r\n                            item = {\r\n                                type: 'radio',\r\n                                name: label || inputLabel(node),\r\n                                disabled: !!$node.attr('disabled'),\r\n                                radio: !!$node.attr('name'),\r\n                                value: $node.val(),\r\n                                selected: !!$node.attr('checked')\r\n                            };\r\n                            break;\r\n\r\n                        default:\r\n                            item = undefined;\r\n                            break;\r\n                    }\r\n                    break;\r\n\r\n                case 'select':\r\n                    item = {\r\n                        type: 'select',\r\n                        name: label || inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        selected: $node.val(),\r\n                        options: {}\r\n                    };\r\n                    $node.children().each(function () {\r\n                        item.options[this.value] = $(this).text();\r\n                    });\r\n                    break;\r\n\r\n                case 'textarea':\r\n                    item = {\r\n                        type: 'textarea',\r\n                        name: label || inputLabel(node),\r\n                        disabled: !!$node.attr('disabled'),\r\n                        value: $node.val()\r\n                    };\r\n                    break;\r\n\r\n                case 'label':\r\n                    break;\r\n\r\n                default:\r\n                    item = {type: 'html', html: $node.clone(true)};\r\n                    break;\r\n            }\r\n\r\n            if (item) {\r\n                counter++;\r\n                items['key' + counter] = item;\r\n            }\r\n        });\r\n\r\n        return counter;\r\n    }\r\n\r\n// convert html5 menu\r\n    $.contextMenu.fromMenu = function (element) {\r\n        var $this = $(element),\r\n            items = {};\r\n\r\n        menuChildren(items, $this.children());\r\n\r\n        return items;\r\n    };\r\n\r\n// make defaults accessible\r\n    $.contextMenu.defaults = defaults;\r\n    $.contextMenu.types = types;\r\n// export internal functions - undocumented, for hacking only!\r\n    $.contextMenu.handle = handle;\r\n    $.contextMenu.op = op;\r\n    $.contextMenu.menus = menus;\r\n});"]}