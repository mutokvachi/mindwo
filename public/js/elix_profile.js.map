{"version":3,"sources":["freeform.js","inlineform.js","empl_links_fix.js","personal_docs.js","notes.js","timeoff.js","jquery.counterup.min.js","jquery.waypoints.min.js"],"names":[],"mappingsaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjafile":"elix_profile.js","sourcesContent":["(function($)\r\n{\r\n\t/**\r\n\t * FreeForm - a jQuery plugin for working with arbitrary forms\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.FreeForm = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.FreeForm.defaults, opts);\r\n\t\t\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.FreeForm(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.FreeForm.defaults = {\r\n\t\teditBtnSelector: '.dx-edit-general',\r\n\t\tsaveBtnSelector: '.dx-save-general',\r\n\t\tcancelBtnSelector: '.dx-cancel-general',\r\n\t\tnames: []\r\n\t};\r\n\t\r\n\t/**\r\n\t * FreeForm constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.FreeForm = function(root, opts)\r\n\t{\r\n\t\t// store object instance along with a root DOM element\r\n\t\t$.data(root, 'FreeForm', this);\r\n\t\t\r\n\t\tvar self = this;\r\n\t\tthis.root = $(root);\r\n\t\tthis.options = opts;\r\n\t\tthis.fields = $('[data-name]', this.root).filter(function()\r\n\t\t{\r\n\t\t\tif(self.options.names.length == 0 || self.options.names.indexOf($(this).data('name')) != -1)\r\n\t\t\t\treturn true;\r\n\t\t});\r\n\t\tthis.originalData = {};\r\n\t\tthis.editButton = $(this.options.editBtnSelector, this.root);\r\n\t\tthis.saveButton = $(this.options.saveBtnSelector, this.root);\r\n\t\tthis.cancelButton = $(this.options.cancelBtnSelector, this.root);\r\n\t\t\r\n\t\t// Bind callbacks to buttons\r\n\t\tthis.editButton.click(function() { self.edit(); });\r\n\t\tthis.saveButton.click(function() { self.save(); });\r\n\t\tthis.cancelButton.click(function() { self.cancel(); });\r\n\t};\r\n\t\r\n\t/**\r\n\t * FreeForm methods\r\n\t */\r\n\t$.extend($.FreeForm.prototype, {\r\n\t\t/**\r\n\t\t * Replace HTML with form input fields\r\n\t\t */\r\n\t\tedit: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// a structure for JSON request\r\n\t\t\tvar request = {\r\n\t\t\t\tmodel: this.root.data('model'),\r\n\t\t\t\titem_id: this.root.data('item_id'),\r\n\t\t\t\tlist_id: this.root.data('list_id'),\r\n\t\t\t\tfields: []\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t// collect names of input fields marked with data-name attribute\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\tself.originalData[$(this).data('name')] = $(this).html();\r\n\t\t\t\trequest.fields.push({\r\n\t\t\t\t\tname: $(this).data('name'),\r\n\t\t\t\t\tdisplay: ($(this).data('display') ? $(this).data('display') : 'raw')\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// perform a request to the server\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '/edit',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.hide();\r\n\t\t\t\t\tself.saveButton.show();\r\n\t\t\t\t\tself.cancelButton.show();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar name = data.fields[i].name;\r\n\t\t\t\t\t\tvar input = data.fields[i].input;\r\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(input);\r\n\t\t\t\t\t}\r\n\t\t\t\t\thide_page_splash(1);                                        \r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\tconsole.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Submit input field values to the server\r\n\t\t */\r\n\t\tsave: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\tvar fieldMetadata = {};\r\n\t\t\tvar formData = process_data_fields(this.root.attr('id'));\r\n\t\t\tformData.append('model', this.root.data('model'));\r\n\t\t\tformData.append('item_id', this.root.data('item_id'));\r\n\t\t\tformData.append('list_id', this.root.data('list_id'));\r\n\t\t\tformData.append('edit_form_id', this.root.data('form_id'));\r\n\t\t\t\r\n\t\t\t// collect metadata of input fields\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\tfieldMetadata[$(this).data('name')] = {\r\n\t\t\t\t\tdisplay: $(this).data('display') ? $(this).data('display') : 'raw'\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tformData.append('field_metadata', JSON.stringify(fieldMetadata));\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// submit a request\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + this.root.data('item_id') + '?_method=PUT',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tprocessData: false,\r\n\t\t\t\tcontentType: false,\r\n\t\t\t\tdata: formData,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.show();\r\n\t\t\t\t\tself.saveButton.hide();\r\n\t\t\t\t\tself.cancelButton.hide();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace input fields with html data from server response\r\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar name = data.fields[i].name;\r\n\t\t\t\t\t\tvar html = data.fields[i].html;\r\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(html);\r\n\t\t\t\t\t}\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\tconsole.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove input fields and display original HTML\r\n\t\t */\r\n\t\tcancel: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\tthis.editButton.show();\r\n\t\t\tthis.saveButton.hide();\r\n\t\t\tthis.cancelButton.hide();\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\t$(this).html(self.originalData[$(this).data('name')]);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(jQuery);","/**\r\n * Author:  Eugene Ostapenko <evo@olympsoft.com>\r\n * License: MIT\r\n * Created: 04.11.16, 19:33\r\n */\r\n(function($)\r\n{\r\n\t/**\r\n\t * InlineForm - a jQuery plugin that provides a way to work with AJAX form embedded into a page\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.InlineForm = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.InlineForm.defaults, opts);\r\n\t\t\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.InlineForm(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.InlineForm.defaults = {\r\n\t\tbeforeSave: null,\r\n\t\tafterSave: null,\r\n\t\templ_search_page_url: \"/search\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * InlineForm constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.InlineForm = function(root, opts)\r\n\t{\r\n\t\t$.data(root, 'InlineForm', this);\r\n\t\tvar self = this;\r\n\t\tthis.options = opts;\r\n\t\tthis.root = $(root);\r\n\t\tthis.tabs = $('.tab-pane', this.root).not(\".dx-grid-tab-pane\");\r\n\t\t\r\n\t\t// detached fields, that are custom placed outside of main form (e.g. avatar in employee profile)\r\n\t\tthis.fields = $('[data-name]', this.root);\r\n\t\tthis.fieldNames = [];\r\n\t\t\r\n\t\tthis.fields.each(function()\r\n\t\t{\r\n\t\t\tself.fieldNames.push($(this).data('name'));\r\n\t\t});\r\n\t\t\r\n\t\tthis.originalTabs = {};\r\n\t\tthis.originalFields = {};\r\n\t\tthis.editButton = $('.dx-edit-profile', this.root);\r\n\t\tthis.saveButton = $('.dx-save-profile', this.root);\r\n\t\tthis.cancelButton = $('.dx-cancel-profile', this.root);\r\n\t\tthis.deleteButton = $('.dx-delete-profile', this.root);\r\n\t\tthis.requests = {};\r\n\t\tthis.onRequestSuccess = [];\r\n\t\tthis.onRequestFailed = [];\r\n\t\t\r\n\t\t// Bind callbacks to buttons\r\n\t\tthis.editButton.click(function()\r\n\t\t{\r\n\t\t\tself.edit();\r\n\t\t});\r\n\t\tthis.saveButton.click(function()\r\n\t\t{\r\n\t\t\tself.save();\r\n\t\t});\r\n\t\tthis.cancelButton.click(function()\r\n\t\t{\r\n\t\t\tself.cancel();\r\n\t\t});\r\n\t\tthis.deleteButton.click(function()\r\n\t\t{\r\n\t\t\tself.destroy();\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * InlineForm methods\r\n\t */\r\n\t$.extend($.InlineForm.prototype, {\r\n\t\t/**\r\n\t\t * Resets and initializes all async request processing parameters\r\n\t\t * @param {integer} total Total count of processes which will be processed asynchronously\r\n\t\t */\r\n\t\tinitRequest: function(total)\r\n\t\t{\r\n\t\t\tthis.requests = {\r\n\t\t\t\ttotal: total,\r\n\t\t\t\tsucceeded: 0,\r\n\t\t\t\tfailed: 0\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.onRequestSuccess = [];\r\n\t\t\tthis.onRequestFailed = [];\r\n\t\t},\r\n\t\t/**\r\n\t\t * Saves completed request status. If all request are finished, then execute success commands\r\n\t\t * @param {boolean} is_success Parmeter if process was successful\r\n\t\t */\r\n\t\tsetRequestStatus: function(is_success)\r\n\t\t{\r\n\t\t\tif(is_success)\r\n\t\t\t{\r\n\t\t\t\tthis.requests.succeeded++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthis.requests.failed++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.requests.total === (this.requests.succeeded + this.requests.failed))\r\n\t\t\t{\r\n\t\t\t\tif(this.requests.failed === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < this.onRequestSuccess.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.onRequestSuccess[i].func(this.onRequestSuccess[i].args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(var i = 0; i < this.onRequestFailed.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.onRequestFailed[i].func(this.onRequestFailed[i].args);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\thide_page_splash(1);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tstoreOriginalData: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\tthis.fields = $('[data-name]', this.root);\r\n\t\t\t\r\n\t\t\tthis.tabs.each(function()\r\n\t\t\t{\r\n\t\t\t\tself.originalTabs[$(this).data('tabTitle')] = $(this).html();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\tself.originalFields[$(this).data('name')] = $(this).html();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Replace HTML with form input fields\r\n\t\t */\r\n\t\tedit: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// a structure for JSON request\r\n\t\t\tvar request = {\r\n\t\t\t\tlist_id: this.root.data('list_id'),\r\n\t\t\t\ttab_list: [],\r\n\t\t\t\tfield_list: this.fieldNames\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.storeOriginalData();\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// perform a request to the server\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '/edit',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.hide();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane').not(\".dx-grid-tab-pane\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar tab = $(tabs[i]);\r\n\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(tab.html());\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var name in data.fields)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$('[data-name=\"' + name + '\"]').html(data.fields[name]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(self.root.data('has_users_documents_access') == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twindow.DxEmpPersDocs.toggleDisable(false);\r\n\t\t\t\t\t}\r\n                                        \r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$('.dx-stick-footer').show();\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Submit input field values to the server\r\n\t\t */\r\n\t\tsave: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\tvar formData = process_data_fields(this.root.attr('id'));\r\n\t\t\tformData.append('item_id', this.root.data('item_id'));\r\n\t\t\tformData.append('list_id', this.root.data('list_id'));\r\n\t\t\tformData.append('edit_form_id', this.root.data('form_id'));\r\n\t\t\tformData.append('redirect_url', this.root.data('redirect_url'));\r\n\t\t\tformData.append('field_list', JSON.stringify(this.fieldNames));\r\n\t\t\t\r\n\t\t\tvar url = DX_CORE.site_url + 'inlineform';\r\n\t\t\tif(this.root.data('mode') != 'create')\r\n\t\t\t{\r\n\t\t\t\turl += '/' + this.root.data('item_id') + '?_method=PUT';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// submit a request\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: url,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tprocessData: false,\r\n\t\t\t\tcontentType: false,\r\n\t\t\t\tdata: formData,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(self.root.data('mode') == 'create')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(self.root.data('has_users_documents_access') == 1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.DxEmpPersDocs.userId = data.item_id;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Custom tab\r\n\t\t\t\t\t\t\twindow.DxEmpPersDocs.onClickSaveDocs(function()\r\n\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\t\t\t$('.dx-stick-footer').hide();\r\n\t\t\t\t\t\t\t\twindow.location = data.redirect;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{                                                    \r\n\t\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\t\t$('.dx-stick-footer').hide();\r\n\t\t\t\t\t\t\twindow.location = data.redirect;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(self.root.data('has_users_documents_access') == 1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Custom tab\r\n\t\t\t\t\t\twindow.DxEmpPersDocs.onClickSaveDocs(function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twindow.DxEmpPersDocs.toggleDisable(true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tself.editButton.show();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane').not(\".dx-grid-tab-pane\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar tab = $(tabs[i]);\r\n\t\t\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n\t\t\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\t\t\telem.html(tab.html());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(self.options.afterSave)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tself.options.afterSave();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\t\t$('.dx-stick-footer').hide();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tself.editButton.show();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane').not(\".dx-grid-tab-pane\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar tab = $(tabs[i]);\r\n\t\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n\t\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\t\telem.html(tab.html());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor(var name in data.fields)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$('[data-name=\"' + name + '\"]').html(data.fields[name]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(self.options.afterSave)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tself.options.afterSave();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\t$('.dx-stick-footer').hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\tconsole.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove input fields and display original HTML\r\n\t\t */\r\n\t\tcancel: function()\r\n\t\t{\r\n\t\t\tif(this.root.data('mode') == 'create')\r\n\t\t\t{\r\n\t\t\t\tshow_page_splash(1);\r\n\t\t\t\twindow.location = this.options.empl_search_page_url;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.editButton.show();\r\n\t\t\t\r\n\t\t\tfor(var k in this.originalTabs)\r\n\t\t\t{\r\n\t\t\t\tthis.tabs.filter('[data-tab-title=\"' + k + '\"]').html(this.originalTabs[k]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var name in this.originalFields)\r\n\t\t\t{\r\n\t\t\t\tthis.fields.filter('[data-name=\"' + name + '\"]').html(this.originalFields[name]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$('.dx-stick-footer').hide();\r\n\t\t\t\r\n\t\t\tif(this.root.data('has_users_documents_access') == 1)\r\n\t\t\t{\r\n\t\t\t\twindow.DxEmpPersDocs.cancelEditMode();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Delete an item from storage.\r\n\t\t */\r\n\t\tdestroy: function()\r\n\t\t{\r\n\t\t\tif(!confirm(Lang.get('frame.confirm_delete')))\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tvar request = {\r\n\t\t\t\tedit_form_id: this.root.data('form_id'),\r\n\t\t\t\titem_id: this.root.data('item_id')\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '?_method=DELETE',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.location = data.redirect;\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(jQuery);\r\n","(function($)\r\n{\r\n\t/**\r\n\t * EmplLinksFix - a jQuery plugin that fix (re-init) links to other employees (manager, reporting manager)\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.EmplLinksFix = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.EmplLinksFix.defaults, opts);\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.EmplLinksFix(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.EmplLinksFix.defaults = {\r\n\t\tprofile_url: \"/employee/profile/\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * EmplLinksFix constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.EmplLinksFix = function(root, opts)\r\n\t{\r\n\t\t$.data(root, 'EmplLinksFix', this);\r\n\t\tvar self = this;\r\n\t\tthis.options = opts;\r\n\t\tthis.root = $(root);\r\n                \r\n\t\tthis.flds_managers = $('.dx-autocompleate-field[data-item-field=manager_id], .dx-autocompleate-field[data-item-field=reporting_manager_id]', this.root);\r\n\t\tthis.tiles_managers = $('.employee-manager-tile', this.root);\r\n                \r\n                this.tiles_managers.each(function()\r\n                {\r\n                    if (!$(this).data(\"is-fix-init\")) {\r\n                        \r\n                        $(this).click(function() {\r\n                            self.show_tile_manager($(this).data(\"empl-id\"));\r\n                        });\r\n                    \r\n                        $(this).data(\"is-fix-init\", 1);\r\n                    }\r\n                });\r\n                                \r\n                this.flds_managers.each(function()\r\n                {\r\n                    if (!$(this).data(\"is-fix-init\")) {\r\n                        var fld = $(this);\r\n                        fld.find(\".dx-rel-id-add-btn\").off(\"click\"); //remove original event handler which will open CMS form\r\n                        \r\n                        fld.find(\".dx-rel-id-add-btn\").click(function() {\r\n                            self.show_manager(fld);\r\n                        });\r\n                        \r\n                        // Reset tooltip from edit to view hint\r\n                        fld.find(\".dx-rel-id-add-btn\").tooltipster('destroy');\r\n                        fld.find(\".dx-rel-id-add-btn\").attr(\"title\", Lang.get('empl_profile.hint_view_profile'));\r\n                        \r\n                        fld.find(\".dx-rel-id-add-btn\").tooltipster({\r\n                            theme: 'tooltipster-light',\r\n                            animation: 'grow',\r\n                            maxWidth: 300\r\n                        });\r\n        \r\n                        $(this).data(\"is-fix-init\", 1);\r\n                    }\r\n                });\r\n\t};\r\n\t\r\n\t/**\r\n\t * EmplLinksFix methods\r\n\t */\r\n\t$.extend($.EmplLinksFix.prototype, {\r\n\t\t/**\r\n\t\t * Show manager profile\r\n\t\t */\r\n\t\tshow_manager: function(fld)\r\n\t\t{\r\n                    var item_id = fld.find(\".dx-auto-input-id\").val();\r\n                    \r\n                    if (item_id == 0) {\r\n                        return;\r\n                    }\r\n                    show_page_splash(1);\r\n                    window.location = this.options.profile_url + item_id;\r\n\t\t},\r\n                show_tile_manager: function(empl_id)\r\n                {\r\n                    show_page_splash(1);\r\n                    window.location = this.options.profile_url + empl_id;\r\n                }\r\n\t});\r\n})(jQuery);\r\n\r\n$(document).ajaxComplete(function() {\r\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\r\n});\r\n\r\n$(document).ready(function() {\r\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\r\n});","/**\r\n * Contains logic for viewing and editing employee's documents\r\n * @type Window.DxEmpPersDocs|window.DxEmpPersDocs \r\n */\r\nwindow.DxEmpPersDocs = window.DxEmpPersDocs || {\r\n    /**\r\n     * Row counter, used to identify rows\r\n     */\r\n    rowCount: 0,\r\n    /**\r\n     * User ID which is loaded\r\n     */\r\n    userId: 0,\r\n    /**\r\n     * Date format used in system. This format is used to initialize date picker\r\n     */\r\n    dateFormat: '',\r\n    /**\r\n     * Locale used in system. This format is used to initializes date picker\r\n     */\r\n    locale: 'en',\r\n    /**\r\n     * Registers ID for table where documents are saved\r\n     */\r\n    empDocListId: 0,\r\n    /**\r\n     * Registers field ID where documents are saved\r\n     */\r\n    empDocFldId: 0,\r\n    /**\r\n     * Parameter if component is initialized\r\n     */\r\n    isInit: false,\r\n    /**\r\n     * Clone of view which contains view state with data saved in database.\r\n     * If edit mode is canceled, then this view is replaced with edit view and all made changes are lost\r\n     */\r\n    viewClone: '',\r\n    /**\r\n     * Callback function which is called after successful components initialization\r\n     * @param {type} data Data which is sent to callback function\r\n     */\r\n    callbackOnInitiSuccess: function (data) {},\r\n    /**\r\n     * Callback function which is called after successful data save\r\n     * @param {type} data Data which is sent to callback function\r\n     */\r\n    callbackOnSaveSuccess: function (data) {},\r\n    /**\r\n     * Callback function which is called after process is exited with error\r\n     * @param {type} data Data which is sent to callback function\r\n     */\r\n    callbackOnError: function (data) {},\r\n    /**\r\n     * Initializes component\r\n     */\r\n    init: function (callbackOnInitiSuccess) {\r\n        if (callbackOnInitiSuccess) {\r\n            window.DxEmpPersDocs.callbackOnInitiSuccess = callbackOnInitiSuccess;\r\n        } else {\r\n            window.DxEmpPersDocs.callbackOnInitiSuccess = function () {};\r\n        }\r\n\r\n        window.DxEmpPersDocs.userId = ($('#dx-emp-pers-docs-panel').attr('data-user-id') == '' ? 0 : $('#dx-emp-pers-docs-panel').attr('data-user-id'));\r\n        window.DxEmpPersDocs.dateFormat = $('#dx-emp-pers-docs-panel').attr('data-date-format');\r\n        window.DxEmpPersDocs.locale = $('#dx-emp-pers-docs-panel').attr('data-locale');\r\n        window.DxEmpPersDocs.empDocListId = $('#dx-emp-pers-docs-panel').attr('data-emp-docs-list-id');\r\n        window.DxEmpPersDocs.empDocFldId = $('#dx-emp-pers-docs-panel').attr('data-emp-docs-fld-id');\r\n        $(\"#dx-emp-pers-docs-country\").change(window.DxEmpPersDocs.onChangeCountry);\r\n        window.DxEmpPersDocs.loadEmployeeData();\r\n    },\r\n    /**\r\n     * Enter edit mode by saving view state in memory. \r\n     * It is needed to revert changes if edit mode is canceled\r\n     */\r\n    enterEditMode: function () {\r\n        window.DxEmpPersDocs.viewClone = $('#dx-emp-pers-docs-panel').clone(true, true);\r\n    },\r\n    /**\r\n     * Cancels edit mode by loading previous view state\r\n     */\r\n    cancelEditMode: function () {\r\n        $('#dx-emp-pers-docs-panel').replaceWith(window.DxEmpPersDocs.viewClone);\r\n        window.DxEmpPersDocs.viewClone = null;\r\n        window.DxEmpPersDocs.toggleDisable(true);\r\n    },\r\n    /**\r\n     * Loads employee document data from server\r\n     */\r\n    loadEmployeeData: function () {\r\n        $.ajax({\r\n            url: '/employee/personal_docs/get/employee_docs/' + window.DxEmpPersDocs.userId,\r\n            type: \"get\",\r\n            success: window.DxEmpPersDocs.onSuccessLoadEmployeeData,\r\n            error: window.DxEmpPersDocs.onAjaxError\r\n        });\r\n    },\r\n    /**\r\n     * Evenet ahndler on successful employee data retrieval\r\n     * @param {array} data Employee document data which ir retrieved\r\n     */\r\n    onSuccessLoadEmployeeData: function (data) {\r\n        if (data != '') {\r\n            var data_rows = JSON.parse(data);\r\n            // Prepares dropdown list options\r\n            for (var i = 0; i < data_rows.length; i++) {\r\n                window.DxEmpPersDocs.createNewDocRow(false, data_rows[i]);\r\n            }\r\n        }\r\n\r\n        $(\"#dx-emp-pers-docs-country\").trigger('change');\r\n    },\r\n    /**\r\n     * Draws document row\r\n     * @param {boolean} is_new Argument if row is new and doesnt contain any data\r\n     * @param {array} data Data which will be used to draw row. Can contains saved data or if new then document type\r\n     */\r\n    createNewDocRow: function (is_new, data) {\r\n        // Gets template for row and converts it as jquery object\r\n        var new_row_html = $($('#dx-emp-pers-docs-new-row').html());\r\n        if (is_new) {\r\n            new_row_html = window.DxEmpPersDocs.setDocTypeValue(new_row_html, data);\r\n        } else {\r\n            new_row_html = window.DxEmpPersDocs.setValues(new_row_html, data);\r\n        }\r\n\r\n        // Append row to table\r\n        if (is_new) {\r\n            $('#dx-emp-pers-docs-table').append(new_row_html);\r\n        } else {\r\n            $('#dx-emp-pers-docs-table-history').append(new_row_html);\r\n        }\r\n\r\n        // Bind all rquired events for row elements\r\n        window.DxEmpPersDocs.bindDocRowEvenets(new_row_html);\r\n        // Increase row counter\r\n        window.DxEmpPersDocs.rowCount++;\r\n    },\r\n    /**\r\n     * Initiates date picker control in row\r\n     * @param {DOMElement} new_row_html Row's DOM elemenet\r\n     * @param {string} value Date which will be set in date picker\r\n     * @returns {DOMElement} Edited row with initialized date picker\r\n     */\r\n    initValidToDatePicker: function (new_row_html, value) {\r\n        var picker = new_row_html.find('.dx-emp-pers-docs-validto-input');\r\n        picker.attr('id', 'dx-emp-pers-docs-validto-input-' + window.DxEmpPersDocs.rowCount);\r\n        picker.val(value);\r\n        picker.datetimepicker({\r\n            lang: window.DxEmpPersDocs.locale,\r\n            format: window.DxEmpPersDocs.dateFormat,\r\n            timepicker: 0,\r\n            dayOfWeekStart: 1,\r\n            closeOnDateSelect: true\r\n        });\r\n        new_row_html.find('.dx-emp-pers-docs-validto-input-calc').click({picker_num: window.DxEmpPersDocs.rowCount}, function (e) {\r\n            jQuery('#dx-emp-pers-docs-validto-input-' + e.data.picker_num).datetimepicker('show');\r\n        });\r\n        return new_row_html;\r\n    },\r\n    /**\r\n     * Sets data for new document row\r\n     * @param {DOMElement} new_row_html Row's DOM elemenet\r\n     * @param {array} data_row Data array for input values\r\n     * @returns {DOMElement} Row containing values\r\n     */\r\n    setDocTypeValue: function (new_row_html, data_row) {\r\n        // Prepare \"valid to\" date picker            \r\n        new_row_html = window.DxEmpPersDocs.initValidToDatePicker(new_row_html, '');\r\n        new_row_html.attr('id', 'dx-emp-pers-docs-row-' + data_row.id);\r\n        new_row_html.find('.dx-emp-pers-docs-type-input').val(data_row.id);\r\n        new_row_html.find('.dx-emp-pers-docs-type-label').html(data_row.name);\r\n        return new_row_html;\r\n    },\r\n    /**\r\n     * Sets data for already saved document row\r\n     * @param {DOMElement} new_row_html Row's DOM elemenet\r\n     * @param {array} data_row Data array for input values\r\n     * @returns {DOMElement} Row containing values\r\n     */\r\n    setValues: function (new_row_html, data_row) {\r\n        new_row_html = window.DxEmpPersDocs.initValidToDatePicker(new_row_html, data_row.valid_to);\r\n        new_row_html.attr('id', 'dx-emp-pers-docs-row-' + data_row.doc_id);\r\n        new_row_html.find('.dx-emp-pers-docs-id-input').val(data_row.id);\r\n        new_row_html.find('.dx-emp-pers-docs-type-input').val(data_row.doc_id);\r\n        new_row_html.find('.dx-emp-pers-docs-type-label').html(data_row.personal_document.name);\r\n        new_row_html.find('.dx-emp-pers-docs-docnr-input').val(data_row.doc_nr);\r\n        new_row_html.find('.dx-emp-pers-docs-publisher-input').val(data_row.publisher);\r\n        window.DxEmpPersDocs.setFileValue(new_row_html, data_row.id, data_row.file_name);\r\n\r\n        return new_row_html;\r\n    },\r\n    /**\r\n     * Sets saved document link in file input box\r\n     * @param {DOMElement} new_row_html Row's DOM elemenet\r\n     * @param {integer} row_id ID for document row in database\r\n     * @param {string} file_name Saved name for the file\r\n     */\r\n    setFileValue: function (new_row_html, row_id, file_name) {\r\n        if (file_name && file_name != null) {\r\n            var file_link = \"<a href='JavaScript: download_file(\" + row_id + \" , \" + window.DxEmpPersDocs.empDocListId + \", \" + window.DxEmpPersDocs.empDocFldId + \");'>\" + file_name + \"</a>\";\r\n            new_row_html.find('.dx-emp-pers-docs-file-input-download').html(file_link);\r\n            new_row_html.find('.dx-emp-pers-docs-file-input-isset').val(1);\r\n        }\r\n    },\r\n    /**\r\n     * Clears documents row data\r\n     * @param {object} e Event arguments which contains event caller\r\n     */\r\n    clearDocRow: function (e) {\r\n        var row = $(e.target).parents('.dx-emp-pers-docs-row');\r\n        row.find('.dx-emp-pers-docs-id-input').val(0);\r\n        row.find('.dx-emp-pers-docs-docnr-input').val('');\r\n        row.find('.dx-emp-pers-docs-validto-input').val('');\r\n        row.find('.dx-emp-pers-docs-publisher-input').val('');\r\n        row.find('.dx-emp-pers-docs-file-input-remove-btn').trigger('click');\r\n    },\r\n    /**\r\n     * Gets data from inputs for data saving\r\n     * @returns {FormData} Data retrieved from input fields\r\n     */\r\n    getDataForSave: function () {\r\n        var rows = $('#dx-emp-pers-docs-table .dx-emp-pers-docs-row');\r\n        var data = {\r\n            user_id: window.DxEmpPersDocs.userId,\r\n            rows: []\r\n        };\r\n        var formData = new FormData();\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var row = $(rows[i]);\r\n            var row_data = {};\r\n            row_data.id = row.find('.dx-emp-pers-docs-id-input').val();\r\n            row_data.document_type = row.find('.dx-emp-pers-docs-type-input').val();\r\n            row_data.publisher = row.find('.dx-emp-pers-docs-publisher-input').val();\r\n            row_data.valid_to = row.find('.dx-emp-pers-docs-validto-input').val();\r\n            row_data.doc_nr = row.find('.dx-emp-pers-docs-docnr-input').val();\r\n            row_data.file_remove = $.trim(row.find('.dx-emp-pers-docs-file-input-download').html()) === '';\r\n            var file = row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0];\r\n            formData.append('file' + i, file);\r\n            data.rows.push(row_data);\r\n        }\r\n\r\n\r\n        formData.append('doc_country_id', $('#dx-emp-pers-docs-country').val());\r\n        formData.append('data', JSON.stringify(data));\r\n        return formData;\r\n    },\r\n    /**\r\n     * Binds click event for clear button\r\n     * @param {DOMElement} new_row_html Row's DOM elemenet\r\n     */\r\n    bindDocRowEvenets: function (new_row_html) {\r\n        new_row_html.find('.dx-emp-pers-docs-clear-btn').click(window.DxEmpPersDocs.clearDocRow);\r\n    },\r\n    /**\r\n     * Event when changing country from dropdown which requests document types associated with selected country\r\n     * @param {object} e Event arguments which contains event caller\r\n     */\r\n    onChangeCountry: function (e) {\r\n        var country_id = $(e.target).val();\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/personal_docs/get/docs_by_country/' + country_id,\r\n            type: \"get\",\r\n            success: window.DxEmpPersDocs.onSuccessChangeCountry,\r\n            error: window.DxEmpPersDocs.onAjaxError\r\n        });\r\n    },\r\n    /**\r\n     * Event on successful document type retrieval when changing country\r\n     * @param {array} data Document types associated with country\r\n     */\r\n    onSuccessChangeCountry: function (data) {\r\n        var docs = JSON.parse(data);\r\n        window.DxEmpPersDocs.drawRows(docs);\r\n        window.DxEmpPersDocs.finishInit();\r\n    },\r\n    /**\r\n     * Draws rows when country is changed\r\n     * @param {array} docs Document types associated with selected country\r\n     */\r\n    drawRows: function (docs) {\r\n        // Moves all existing rows to hidden history div\r\n        $('#dx-emp-pers-docs-table').contents().appendTo('#dx-emp-pers-docs-table-history');\r\n        // Iterates through all the document types\r\n        for (var d = 0; d < docs.length; d++) {\r\n            var doc = docs[d];\r\n            var existing_row = $('#dx-emp-pers-docs-row-' + doc.id);\r\n            // Check if row exist in history div\r\n            if (existing_row.length > 0) {\r\n                // Move existing document type row into visible view\r\n                existing_row.appendTo('#dx-emp-pers-docs-table');\r\n            } else {\r\n                // Creates new row if it doesn't exist for document type\r\n                window.DxEmpPersDocs.createNewDocRow(true, doc);\r\n            }\r\n        }\r\n        // Initiates tooltips because they are not initiated because rows are created dynamicaly\r\n        $('#dx-emp-pers-docs-table').find('[data-tooltip-title]').each(function (i, obj) {\r\n            $(obj).attr('title', $(obj).data('tooltip-title'));\r\n            $(obj).tooltip();\r\n        });\r\n    },\r\n    /**\r\n     * Finishes initialization\r\n     */\r\n    finishInit: function () {\r\n        if (!window.DxEmpPersDocs.isInit) {\r\n            window.DxEmpPersDocs.isInit = true;\r\n            if (window.DxEmpPersDocs.userId == 0) {\r\n                window.DxEmpPersDocs.toggleDisable(false);\r\n            } else {\r\n                window.DxEmpPersDocs.toggleDisable(true);\r\n            }\r\n            window.DxEmpPersDocs.callbackOnInitiSuccess();\r\n        }\r\n    },\r\n    /**\r\n     * Saves data\r\n     * @param {function} callbackOnSaveSuccess Callback function for successful saving\r\n     * @param {function} callbackOnError Callback function when error happens on data save\r\n     */\r\n    onClickSaveDocs: function (callbackOnSaveSuccess, callbackOnError) {\r\n        if (callbackOnSaveSuccess) {\r\n            window.DxEmpPersDocs.callbackOnSaveSuccess = callbackOnSaveSuccess;\r\n        } else {\r\n            window.DxEmpPersDocs.callbackOnSaveSuccess = function () {};\r\n        }\r\n        if (callbackOnError) {\r\n            window.DxEmpPersDocs.callbackOnError = callbackOnError;\r\n        } else {\r\n            window.DxEmpPersDocs.callbackOnError = function () {};\r\n        }\r\n\r\n        var form_data = window.DxEmpPersDocs.getDataForSave();\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/personal_docs/save',\r\n            data: form_data,\r\n            type: \"post\",\r\n            processData: false,\r\n            dataType: \"json\",\r\n            contentType: false,\r\n            success: window.DxEmpPersDocs.onSuccessSave,\r\n            error: window.DxEmpPersDocs.onAjaxError\r\n        });\r\n    },\r\n    /**\r\n     * Event on successful data save\r\n     * @param {array} data_rows Data returned about saved document rows\r\n     */\r\n    onSuccessSave: function (data_rows) {\r\n        // Set id for rows and update file input control value\r\n        for (var i = 0; i < data_rows.length; i++) {\r\n            var data_row = data_rows[i];\r\n            var row = $('#dx-emp-pers-docs-row-' + data_row.doc_id);\r\n\r\n            if (row.length > 0) {\r\n                row.find('.dx-emp-pers-docs-id-input').val(data_row.id);\r\n                row.find('.dx-emp-pers-docs-file-input-remove-btn').trigger('click');\r\n                window.DxEmpPersDocs.setFileValue(row, data_row.id, data_row.file_name);\r\n            }\r\n        }\r\n\r\n        $('#dx-emp-pers-docs-table-history').empty();\r\n        window.DxEmpPersDocs.callbackOnSaveSuccess();\r\n    },\r\n    /**\r\n     * Event when ajax request gets error\r\n     * @param {array} data Data containing error information\r\n     */\r\n    onAjaxError: function (data) {\r\n        window.DxEmpPersDocs.finishInit();\r\n        window.DxEmpPersDocs.callbackOnError();\r\n    },\r\n    /**\r\n     * Swicthed edit and view modes\r\n     * @param {boolean} is_disabled If true then view mode is set else edit mode is set\r\n     */\r\n    toggleDisable: function (is_disabled) {\r\n        if (!is_disabled) {\r\n            window.DxEmpPersDocs.enterEditMode();\r\n        }\r\n\r\n        var rows = $('#dx-emp-pers-docs-table .dx-emp-pers-docs-row');\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var row = $(rows[i]);\r\n            row.find('.dx-emp-pers-docs-publisher-input').prop('disabled', is_disabled);\r\n            row.find('.dx-emp-pers-docs-validto-input').prop('disabled', is_disabled);\r\n            row.find('.dx-emp-pers-docs-validto-input-calc').prop('disabled', is_disabled);\r\n            row.find('.dx-emp-pers-docs-docnr-input').prop('disabled', is_disabled);\r\n            if (is_disabled) {\r\n                row.find('.dx-emp-pers-docs-file-input-set-btn').hide();\r\n                if (row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0]) {\r\n                    row.find('.dx-emp-pers-docs-file-input-remove-btn').hide();\r\n                }\r\n\r\n                row.find('.dx-emp-pers-docs-clear-btn').hide();\r\n            } else {\r\n                row.find('.dx-emp-pers-docs-validto-input').datetimepicker('destroy');\r\n                row.find('.dx-emp-pers-docs-validto-input').datetimepicker({\r\n                    lang: window.DxEmpPersDocs.locale,\r\n                    format: window.DxEmpPersDocs.dateFormat,\r\n                    timepicker: 0,\r\n                    dayOfWeekStart: 1,\r\n                    closeOnDateSelect: true\r\n                });\r\n\r\n                row.find('.dx-emp-pers-docs-file-input-set-btn').show();\r\n                if (row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0]) {\r\n                    row.find('.dx-emp-pers-docs-file-input-remove-btn').show();\r\n                }\r\n\r\n                row.find('.dx-emp-pers-docs-clear-btn').show();\r\n            }\r\n        }\r\n\r\n        $('#dx-emp-pers-docs-country').prop('disabled', is_disabled);\r\n    }\r\n};","/**\r\n * Contains logic for viewing and editing employee's notes\r\n * @type Window.DxEmpNotes|window.DxEmpNotes \r\n */\r\nwindow.DxEmpNotes = window.DxEmpNotes || {\r\n    /**\r\n     * User ID which is loaded\r\n     */\r\n    userId: 0,\r\n    /**\r\n     * Parameter if control is loaded\r\n     */\r\n    isLoaded: false,\r\n    /**\r\n     * Parameter if note is sending to server\r\n     */\r\n    isSending: false,\r\n    /**\r\n     * Default color for chat form background\r\n     */\r\n    chatFormColorDefault: 'white',\r\n    /**\r\n     * Initializes component\r\n     */\r\n    init: function (userId) {\r\n        window.DxEmpNotes.userId = userId;\r\n\r\n    },\r\n    /**\r\n     * Loads view\r\n     * @returns {undefined}\r\n     */\r\n    loadView: function () {\r\n        if (window.DxEmpNotes.isLoaded) {\r\n            return;\r\n        }\r\n\r\n        show_page_splash(1);\r\n\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/notes/get/view/' + window.DxEmpNotes.userId,\r\n            type: \"get\",\r\n            success: window.DxEmpNotes.onLoadViewSuccess,\r\n            error: function (data) {\r\n                hide_page_splash(1);\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * Evnet handler when view is successfully loaded\r\n     * @returns {string} View's HTML\r\n     */\r\n    onLoadViewSuccess: function (data) {\r\n        $('#dx-tab_notes').html(data);\r\n\r\n        window.DxEmpNotes.chatFormColorDefault = $('.dx-emp-notes-chat-form').css(\"background-color\");\r\n\r\n        $('.dx-emp-notes-btn').click(window.DxEmpNotes.onNoteEnter);\r\n        $('.dx-emp-notes-input-text').keyup(function (e) {\r\n            if (e.keyCode == 13) {\r\n                window.DxEmpNotes.onNoteEnter();\r\n            }\r\n        });\r\n\r\n        $('.dx-emp-notes-chat').on('click', '.dx-emp-notes-btn-link-edit', {}, window.DxEmpNotes.onEditClick);\r\n        $('.dx-emp-notes-chat').on('click', '.dx-emp-notes-btn-link-delete', {}, window.DxEmpNotes.onDeleteClick);\r\n\r\n        window.DxEmpNotes.isLoaded = true;\r\n\r\n        hide_page_splash(1);\r\n    },\r\n    /**\r\n     * Retrieve data for saving\r\n     * @returns {object} Prepared data\r\n     */\r\n    getDataForSave: function () {\r\n        var data = {};\r\n\r\n        data.note_id = $('.dx-emp-notes-input-id').val();\r\n        data.user_id = window.DxEmpNotes.userId;\r\n        data.note_text = $('.dx-emp-notes-input-text').val();\r\n\r\n        return data;\r\n    },\r\n    /**\r\n     * Event handler when note saving is initiated\r\n     * @returns {undefined}\r\n     */\r\n    onNoteEnter: function () {\r\n        if (window.DxEmpNotes.isSending) {\r\n            return;\r\n        }\r\n\r\n        window.DxEmpNotes.showLoading();\r\n\r\n        var data = window.DxEmpNotes.getDataForSave();\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/notes/save',\r\n            data: data,\r\n            type: \"post\",\r\n            success: window.DxEmpNotes.onSuccessSave,\r\n            error: window.DxEmpNotes.onAjaxError\r\n        });\r\n    },\r\n    /**\r\n     * Load selected note's data into note input boxes\r\n     * @param {object} e Evenet caller\r\n     * @returns {undefined}\r\n     */\r\n    onEditClick: function (e) {\r\n        var edit_btn = $(e.target);\r\n\r\n        var note_id = edit_btn.closest('.message').find('.dx-emp-notes-edit-id').val();\r\n        var note_text = edit_btn.closest('.message').find('.dx-emp-notes-edit-body').html();\r\n\r\n        $('.dx-emp-notes-input-id').val(note_id);\r\n        $('.dx-emp-notes-input-text').val(note_text);\r\n        $('.dx-emp-notes-input-text').focus();\r\n\r\n        // Animate \r\n        var chat_form = $('.dx-emp-notes-chat-form');\r\n\r\n        chat_form.animate({backgroundColor: '#7bb6de'}, 'slow', function () {\r\n            chat_form.animate({backgroundColor: window.DxEmpNotes.chatFormColorDefault}, 'slow');\r\n        });\r\n\r\n    },\r\n    /**\r\n     * Event handler for delete click. Opens modal confirmation window\r\n     * @param {object} e Event arguments\r\n     * @returns {undefined}\r\n     */\r\n    onDeleteClick: function (e) {\r\n        var del_btn = $(e.target);\r\n\r\n        var note_id = del_btn.closest('.message').find('.dx-emp-notes-edit-id').val();\r\n\r\n        PageMain.showConfirm(window.DxEmpNotes.onDeleteConfirm,\r\n                note_id,\r\n                Lang.get('employee.notes.delete_note_title'),\r\n                Lang.get('employee.notes.delete_note_text'),\r\n                Lang.get('form.btn_delete'),\r\n                '');\r\n    },\r\n    /**\r\n     * Event handler when delete operation is confirmed\r\n     * @param {integer} id Note's ID which will be deleted\r\n     * @returns {undefined}\r\n     */\r\n    onDeleteConfirm: function (id) {\r\n        if (window.DxEmpNotes.isSending) {\r\n            return;\r\n        }\r\n\r\n        window.DxEmpNotes.showLoading();\r\n        \r\n         var data = {\r\n             note_id: id\r\n         };\r\n        \r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/notes/delete',\r\n            data: data,\r\n            type: \"delete\",\r\n            success: window.DxEmpNotes.onSuccessDelete,\r\n            error: window.DxEmpNotes.onAjaxError\r\n        });\r\n    },\r\n    /**\r\n     * Shows loading box\r\n     * @returns {undefined}\r\n     */\r\n    showLoading: function () {\r\n        window.DxEmpNotes.isSending = true;\r\n        show_page_splash(1);\r\n    },\r\n    /**\r\n     * Hides loading box\r\n     * @returns {undefined}\r\n     */\r\n    hideLoading: function () {\r\n        window.DxEmpNotes.isSending = false;\r\n        hide_page_splash(1);\r\n    },\r\n    /**\r\n     * Event on successful note delete\r\n     * @param {integer} note_id Note id which was deleted\r\n     */\r\n    onSuccessDelete: function (note_id) {\r\n        if (note_id) {\r\n            $('.dx-emp-notes-edit-id[value=' + note_id + ']').closest('li').remove();\r\n        }\r\n\r\n        window.DxEmpNotes.hideLoading();\r\n    },\r\n    /**\r\n     * Event on successful data save\r\n     * @param {array} data Data returned about saved noted. Contains view for new note\r\n     */\r\n    onSuccessSave: function (data) {\r\n        // Removes old noted if existed, because it will be moved to top of the list as latest note\r\n        var note_id = $('.dx-emp-notes-input-id').val();\r\n        if (note_id) {\r\n            $('.dx-emp-notes-edit-id[value=' + note_id + ']').closest('li').remove();\r\n        }\r\n        $('.dx-emp-notes-input-id').val('');\r\n        $('.dx-emp-notes-input-text').val('');\r\n\r\n        window.DxEmpNotes.hideLoading();\r\n\r\n        if (data.view) {\r\n            $('.dx-emp-notes-chat').prepend($(data.view).fadeIn());\r\n        }\r\n    },\r\n    /**\r\n     * Event when ajax request gets error\r\n     * @param {array} data Data containing error information\r\n     */\r\n    onAjaxError: function (data) {\r\n        window.DxEmpNotes.hideLoading();\r\n    }\r\n};","/**\r\n * Contains logic for viewing and editing employee's time off data\r\n * @type Window.DxEmpTimeoff|window.DxEmpTimeoff \r\n */\r\nwindow.DxEmpTimeoff = window.DxEmpTimeoff || {\r\n    /**\r\n     * User ID which is loaded\r\n     */\r\n    userId: 0,\r\n    /**\r\n     * Parameter if control is loaded\r\n     */\r\n    isLoaded: false,\r\n    /**\r\n     * Parameter if data is sending to server\r\n     */\r\n    isSending: false,\r\n    /**\r\n     * Parameter if table has been initialized\r\n     */\r\n    isTableInit: false,\r\n    /**\r\n     * Parameter if chart has been initialized\r\n     */\r\n    isChartInit: false,\r\n    /**\r\n     * Parameter if table needs to be reloaded when gets focus\r\n     */\r\n    doTableRefresh: true,\r\n    /**\r\n     * Parameter if chart needs to be reloaded when gets focus\r\n     */\r\n    doChartRefresh: true,\r\n    /**\r\n     * Current tab index. 0 - focus on chart tab, 1 - focus on table tab\r\n     */\r\n    currentTab: 0,\r\n    /**\r\n     * Current filter's date from value\r\n     */\r\n    dateFrom: '',\r\n    /**\r\n     * Current filter's date to value\r\n     */\r\n    dateTo: '',\r\n    /**\r\n     * Current filter's time off value\r\n     */\r\n    timeoff: 1,\r\n    /**\r\n     * Date format used in system. This format is used to initialize date picker\r\n     */\r\n    dateFormat: '',\r\n    /**\r\n     * Initializes component\r\n     * @param {integer} userId User's ID which is opened\r\n     * @returns {undefined}\r\n     */\r\n    init: function (userId) {\r\n        window.DxEmpTimeoff.userId = userId;\r\n    },\r\n    /**\r\n     * Get filter parameters for adding to request when getting table or  chart\r\n     * @returns {String} Reteived URL part containign parameters\r\n     */\r\n    getFilterParams: function () {\r\n        return window.DxEmpTimeoff.userId + '/' + window.DxEmpTimeoff.timeoff + '/' + (window.DxEmpTimeoff.dateFrom / 1000) + '/' + (window.DxEmpTimeoff.dateTo / 1000);\r\n    },\r\n    /**\r\n     * Loads view\r\n     * @returns {undefined}\r\n     */\r\n    loadView: function () {\r\n        if (window.DxEmpTimeoff.isLoaded) {\r\n            return;\r\n        }\r\n\r\n        window.DxEmpTimeoff.showLoading();\r\n\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/timeoff/get/view/' + window.DxEmpTimeoff.userId,\r\n            type: \"get\",\r\n            success: window.DxEmpTimeoff.onLoadViewSuccess,\r\n            error: function (data) {\r\n                window.DxEmpTimeoff.hideLoading();\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * Reloads year filter\r\n     * @returns {undefined}\r\n     */\r\n    loadFilterYear: function () {\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/timeoff/get/filter/year/' + window.DxEmpTimeoff.userId,\r\n            type: \"get\",\r\n            success: window.DxEmpTimeoff.onLoadFilterYearSuccess,\r\n            error: function (data) {\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * On successfully retrieved filter HTML\r\n     * @param {string} data  HTML of the filter\r\n     * @returns {undefined}\r\n     */\r\n    onLoadFilterYearSuccess: function (data) {\r\n        $('.dx-emp-timeoff-filter-year-list').html(data);\r\n    },\r\n    /**\r\n     * Evnet handler when view is successfully loaded\r\n     * @returns {string} View's HTML\r\n     */\r\n    onLoadViewSuccess: function (data) {\r\n        $('#dx-tab_timeoff').html(data);\r\n\r\n        window.DxEmpTimeoff.dateFormat = $('#dx-emp-timeoff-panel').data('date_format').toUpperCase();\r\n        window.DxEmpTimeoff.dateFrom = new Date($('#dx-emp-timeoff-panel').data('date_from'));\r\n        window.DxEmpTimeoff.dateTo = new Date($('#dx-emp-timeoff-panel').data('date_to'));\r\n        window.DxEmpTimeoff.timeoff = $('#dx-emp-timeoff-panel').data('timeoff');\r\n        window.DxEmpTimeoff.timeoffTitle = $('#dx-emp-timeoff-panel').data('timeoff_title');\r\n\r\n        $(\"#dx-tab_timeoff [data-counter='counterup']\").counterUp({delay: 10, time: 700});\r\n\r\n        $(\".dx-accrual-calc\").click(function () {\r\n            window.DxEmpTimeoff.showLoading();\r\n            var a_elem = $(this);\r\n            $.ajax({\r\n                url: DX_CORE.site_url + 'employee/timeoff/get/calculate/' + window.DxEmpTimeoff.userId + \"/\" + a_elem.data('timeoff'),\r\n                type: \"get\",\r\n                success: function (data) {\r\n                    window.DxEmpTimeoff.onCalculateSuccess(a_elem, data);\r\n                }\r\n            });\r\n        });\r\n\r\n        $(\".dx-accrual-delete\").click(function () {\r\n            PageMain.showConfirm(window.DxEmpTimeoff.deleteCalculation, $(this), Lang.get('form.modal_confirm_title'), Lang.get('empl_profile.timeoff.delete_confirm'), Lang.get('form.btn_delete'), Lang.get('form.btn_cancel'));\r\n        });\r\n\r\n        $(\".dx-accrual-policy\").click(function () {\r\n            window.DxEmpTimeoff.showLoading();\r\n            view_list_item(\"form\", $(this).data('policy-id'), $(this).data('policy-list-id'), $(this).data('policy-user-field-id'), window.DxEmpTimeoff.userId, \"\", \"\");\r\n        });\r\n\r\n        $('.dx-emp-timeoff-sel-timeoff').click(window.DxEmpTimeoff.timeoffSelect);\r\n\r\n        $('.dx-emp-timeoff-tab-chart-btn').click(function () {\r\n            window.DxEmpTimeoff.switchTab(0);\r\n        });\r\n        $('.dx-emp-timeoff-tab-table-btn').click(function () {\r\n            window.DxEmpTimeoff.switchTab(1);\r\n        });\r\n\r\n        window.DxEmpTimeoff.initFilterDatePicker();\r\n\r\n        // Initializes current tab by loadings its data (by default chart tab)\r\n        window.DxEmpTimeoff.reloadTabData();\r\n\r\n        window.DxEmpTimeoff.isLoaded = true;\r\n\r\n        window.DxEmpTimeoff.hideLoading();\r\n    },\r\n    /**\r\n     * Event handler on successful calculation\r\n     * @param {DOMObject} a_elem Button which triggered event\r\n     * @param {array} data Data returned from server\r\n     * @returns {undefined}\r\n     */\r\n    onCalculateSuccess: function (a_elem, data) {\r\n        var thumb = a_elem.closest(\"div.widget-thumb\");\r\n        var cnt_elem = thumb.find(\".widget-thumb-body-stat\").first();\r\n\r\n        cnt_elem.attr(\"data-value\", data.balance);\r\n\r\n        cnt_elem.html(data.balance);\r\n\r\n        thumb.find(\".widget-thumb-subtitle\").first().html(data.unit);\r\n        cnt_elem.counterUp({delay: 10, time: 700});\r\n\r\n        // This also refresh table after filter is reloaded\r\n        window.DxEmpTimeoff.loadFilterYear();\r\n\r\n        if (window.DxEmpTimeoff.timeoff == a_elem.data('timeoff')) {\r\n            window.DxEmpTimeoff.setDataRefreshRequest();\r\n        } else {\r\n            window.DxEmpTimeoff.hideLoading();\r\n        }\r\n    },\r\n    /**\r\n     * Deletes calculation\r\n     * @param {DOMObject} a_elem Button which triggered event\r\n     * @returns {undefined}\r\n     */\r\n    deleteCalculation: function (a_elem) {\r\n        window.DxEmpTimeoff.showLoading();\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/timeoff/get/delete_calculated/' + window.DxEmpTimeoff.userId + \"/\" + a_elem.data('timeoff'),\r\n            type: \"get\",\r\n            success: function (data) {\r\n                window.DxEmpTimeoff.onCalculateSuccess(a_elem, data);\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     * Sets parameters that data in tabs must be reloaded\r\n     * @returns {undefined}\r\n     */\r\n    setDataRefreshRequest: function () {\r\n        window.DxEmpTimeoff.doChartRefresh = true;\r\n        window.DxEmpTimeoff.doTableRefresh = true;\r\n\r\n        // After setting refresh request, refreshes current tab data\r\n        window.DxEmpTimeoff.reloadTabData();\r\n    },\r\n    /**\r\n     * Switches tab and reload data if needed\r\n     */\r\n    switchTab: function (tab_index) {\r\n        window.DxEmpTimeoff.currentTab = tab_index;\r\n\r\n        // After changing tab, chech if data must be resfreshed in current tab\r\n        window.DxEmpTimeoff.reloadTabData();\r\n    },\r\n    /**\r\n     * Reload cureent tab after filter has been changed\r\n     * @returns {undefined}\r\n     */\r\n    reloadTabData: function () {\r\n        if (window.DxEmpTimeoff.currentTab === 0) {\r\n            window.DxEmpTimeoff.loadChart();\r\n        } else {\r\n            window.DxEmpTimeoff.loadTable();\r\n        }\r\n    },\r\n    /**\r\n     * Reload table data. Initializes component if needed\r\n     * @returns {undefined}\r\n     */\r\n    loadTable: function () {\r\n        if (!window.DxEmpTimeoff.isTableInit) {\r\n            window.DxEmpTimeoff.initDataTable();\r\n            window.DxEmpTimeoff.isTableInit = true;\r\n        } else if (window.DxEmpTimeoff.doTableRefresh) {\r\n            window.DxEmpTimeoff.refreshDataTable();\r\n        }\r\n\r\n        // Resets parameter that table has been refreshed\r\n        window.DxEmpTimeoff.doTableRefresh = false;\r\n    },\r\n    /**\r\n     * Reload chart data. Initializes component if needed\r\n     * @returns {undefined}\r\n     */\r\n    loadChart: function () {\r\n        if (!window.DxEmpTimeoff.isChartInit) {\r\n            window.DxEmpTimeoff.initChart();\r\n            window.DxEmpTimeoff.isChartInit = true;\r\n        } else if (window.DxEmpTimeoff.doChartRefresh) {\r\n            window.DxEmpTimeoff.refreshChart();\r\n        }\r\n\r\n        // Resets parameter that chart has been refreshed\r\n        window.DxEmpTimeoff.doChartRefresh = false;\r\n    },\r\n    /**\r\n     * Initializes data table\r\n     * @returns {undefined}\r\n     */\r\n    initDataTable: function () {\r\n        if (!window.DxEmpTimeoff.dataTable) {\r\n            window.DxEmpTimeoff.dataTable = $('#dx-empt-datatable-timeoff').DataTable({\r\n                serverSide: true,\r\n                searching: false,\r\n                order: [[0, \"desc\"]],\r\n                ajax: DX_CORE.site_url + 'employee/timeoff/get/table/' + window.DxEmpTimeoff.getFilterParams(),\r\n                columns: [\r\n                    {data: 'calc_date', name: 'calc_date'},\r\n                    {data: 'from_date', name: 'from_date'},\r\n                    {data: 'to_date', name: 'to_date'},\r\n                    {data: 'timeoff_record_type.title', name: 'timeoffRecordType.title'},\r\n                    {data: 'notes', name: 'notes'},\r\n                    {data: 'amount', name: 'amount'},\r\n                    {data: 'balance', name: 'balance'}\r\n                ],\r\n                fnPreDrawCallback: function () {\r\n                    window.DxEmpTimeoff.showLoading();\r\n                },\r\n                fnDrawCallback: function () {\r\n                    window.DxEmpTimeoff.hideLoading();\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     * Refreshes data table\r\n     * @returns {undefined}\r\n     */\r\n    refreshDataTable: function () {\r\n        var url = DX_CORE.site_url + 'employee/timeoff/get/table/' + window.DxEmpTimeoff.getFilterParams();\r\n\r\n        window.DxEmpTimeoff.dataTable.ajax.url(url).load();\r\n    },\r\n    /**\r\n     * Initializes chart\r\n     * @returns {undefined}\r\n     */\r\n    initChart: function () {\r\n        window.DxEmpTimeoff.refreshChart();\r\n    },\r\n    /**\r\n     * Refreshes chart data\r\n     * @returns {undefined}\r\n     */\r\n    refreshChart: function () {\r\n        $.ajax({\r\n            url: DX_CORE.site_url + 'employee/timeoff/get/chart/' + window.DxEmpTimeoff.getFilterParams(),\r\n            type: \"get\",\r\n            success: window.DxEmpTimeoff.onGetChartDataSuccess,\r\n            error: function (data) {\r\n                $('#dx-emp-timeoff-chart').html(data);\r\n                window.DxEmpTimeoff.hideLoading();\r\n            }\r\n        });\r\n    },\r\n    onGetChartDataSuccess: function (data) {\r\n        $('#dx-emp-timeoff-chart').html(data);\r\n    },\r\n    initFilterDatePicker: function () {\r\n        $('.dx-emp-timeoff-filter-year-btn').click(function (event) {\r\n            $('#dx-emp-timeoff-filter-year-input').data('daterangepicker').toggle();\r\n        });\r\n\r\n        $('#dx-emp-timeoff-filter-year-input').daterangepicker({\r\n            locale: {\r\n                \"format\": window.DxEmpTimeoff.dateFormat,\r\n                \"separator\": \" - \",\r\n                \"applyLabel\": Lang.get('date_range.btn_set'),\r\n                \"cancelLabel\": Lang.get('date_range.btn_cancel'),\r\n                \"fromLabel\": Lang.get('date_range.lbl_from'),\r\n                \"toLabel\": Lang.get('date_range.lbl_to'),\r\n                \"customRangeLabel\": Lang.get('date_range.lbl_interval'),\r\n                \"daysOfWeek\": [\r\n                    Lang.get('date_range.d_7'),\r\n                    Lang.get('date_range.d_1'),\r\n                    Lang.get('date_range.d_2'),\r\n                    Lang.get('date_range.d_3'),\r\n                    Lang.get('date_range.d_4'),\r\n                    Lang.get('date_range.d_5'),\r\n                    Lang.get('date_range.d_6')\r\n                ],\r\n                \"monthNames\": [Lang.get('date_range.m_jan'), Lang.get('date_range.m_feb'), Lang.get('date_range.m_mar'), Lang.get('date_range.m_apr'), Lang.get('date_range.m_may'), Lang.get('date_range.m_jun'), Lang.get('date_range.m_jul'), Lang.get('date_range.m_aug'), Lang.get('date_range.m_sep'), Lang.get('date_range.m_oct'), Lang.get('date_range.m_nov'), Lang.get('date_range.m_dec')],\r\n                \"firstDay\": 1\r\n            },\r\n            \"startDate\": window.DxEmpTimeoff.dateFrom,\r\n            \"endDate\": window.DxEmpTimeoff.dateTo,\r\n            \"showDropdowns\": true\r\n        }, window.DxEmpTimeoff.yearSelect);\r\n    },\r\n    /**\r\n     * Event callback when filter's year value is selected\r\n     * @param {object} e Event caller\r\n     * @returns {undefined}\r\n     */\r\n    yearSelect: function (start, end, label) {\r\n        window.DxEmpTimeoff.dateFrom = start;\r\n        window.DxEmpTimeoff.dateTo = end;\r\n\r\n        $('.dx-emp-timeoff-curr-year').html(start.format(window.DxEmpTimeoff.dateFormat) + ' - ' + end.format(window.DxEmpTimeoff.dateFormat));\r\n\r\n        window.DxEmpTimeoff.setDataRefreshRequest();\r\n    },\r\n    /**\r\n     * Event callback when filter's time off type value is selected\r\n     * @param {object} e Event caller\r\n     * @returns {undefined}\r\n     */\r\n    timeoffSelect: function (e) {\r\n        var btn = $(e.target);\r\n\r\n        window.DxEmpTimeoff.timeoff = btn.data('value');\r\n        window.DxEmpTimeoff.timeoffTitle = btn.data('title');\r\n\r\n        $('.dx-emp-timeoff-curr-timeoff').html(window.DxEmpTimeoff.timeoffTitle);\r\n\r\n        window.DxEmpTimeoff.setDataRefreshRequest();\r\n    },\r\n    /**\r\n     * Shows loading box\r\n     * @returns {undefined}\r\n     */\r\n    showLoading: function () {\r\n        window.DxEmpTimeoff.inProgressCount++;\r\n        show_page_splash(1);\r\n    },\r\n    /**\r\n     * Hides loading box\r\n     * @returns {undefined}\r\n     */\r\n    hideLoading: function () {\r\n        window.DxEmpTimeoff.isSending = false;\r\n        hide_page_splash(1);\r\n    },\r\n    /**\r\n     * Event when ajax request gets error\r\n     * @param {array} data Data containing error information\r\n     * @returns {undefined}\r\n     */\r\n    onAjaxError: function (data) {\r\n        window.DxEmpTimeoff.hideLoading();\r\n    }\r\n};","/*!\r\n* jquery.counterup.js 1.0\r\n*\r\n* Copyright 2013, Benjamin Intal http://gambit.ph @bfintal\r\n* Released under the GPL v2 License\r\n*\r\n* Date: Nov 26, 2013\r\n*/\r\n!function(t){\"use strict\";t.fn.counterUp=function(e){var n=t.extend({time:400,delay:10},e);return this.each(function(){var e=t(this),u=n,a=function(){var t=u.time/u.delay,n=e.attr(\"data-value\"),a=[n],r=/[0-9]+,[0-9]+/.test(n);n=n.replace(/,/g,\"\");for(var o=(/^[0-9]+$/.test(n),/^[0-9]+\\.[0-9]+$/.test(n)),c=o?(n.split(\".\")[1]||[]).length:0,d=t;d>=1;d--){var i=parseInt(n/t*d);if(o&&(i=parseFloat(n/t*d).toFixed(c)),r)for(;/(\\d+)(\\d{3})/.test(i.toString());)i=i.toString().replace(/(\\d+)(\\d{3})/,\"$1,$2\");a.unshift(i)}e.data(\"counterup-nums\",a),e.text(\"0\");var s=function(){e.text(e.data(\"counterup-nums\").shift()),e.data(\"counterup-nums\").length?setTimeout(e.data(\"counterup-func\"),u.delay):(delete e.data(\"counterup-nums\"),e.data(\"counterup-nums\",null),e.data(\"counterup-func\",null))};e.data(\"counterup-func\",s),setTimeout(e.data(\"counterup-func\"),u.delay)};e.waypoint(a,{offset:\"100%\",triggerOnce:!0})})}}(jQuery);","// Generated by CoffeeScript 1.6.2\r\n/*\r\njQuery Waypoints - v2.0.3\r\nCopyright (c) 2011-2013 Caleb Troughton\r\nDual licensed under the MIT license and GPL license.\r\nhttps://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt\r\n*/\r\n(function(){var t=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++){if(e in this&&this[e]===t)return e}return-1},e=[].slice;(function(t,e){if(typeof define===\"function\"&&define.amd){return define(\"waypoints\",[\"jquery\"],function(n){return e(n,t)})}else{return e(t.jQuery,t)}})(this,function(n,r){var i,o,l,s,f,u,a,c,h,d,p,y,v,w,g,m;i=n(r);c=t.call(r,\"ontouchstart\")>=0;s={horizontal:{},vertical:{}};f=1;a={};u=\"waypoints-context-id\";p=\"resize.waypoints\";y=\"scroll.waypoints\";v=1;w=\"waypoints-waypoint-ids\";g=\"waypoint\";m=\"waypoints\";o=function(){function t(t){var e=this;this.$element=t;this.element=t[0];this.didResize=false;this.didScroll=false;this.id=\"context\"+f++;this.oldScroll={x:t.scrollLeft(),y:t.scrollTop()};this.waypoints={horizontal:{},vertical:{}};t.data(u,this.id);a[this.id]=this;t.bind(y,function(){var t;if(!(e.didScroll||c)){e.didScroll=true;t=function(){e.doScroll();return e.didScroll=false};return r.setTimeout(t,n[m].settings.scrollThrottle)}});t.bind(p,function(){var t;if(!e.didResize){e.didResize=true;t=function(){n[m](\"refresh\");return e.didResize=false};return r.setTimeout(t,n[m].settings.resizeThrottle)}})}t.prototype.doScroll=function(){var t,e=this;t={horizontal:{newScroll:this.$element.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.$element.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};if(c&&(!t.vertical.oldScroll||!t.vertical.newScroll)){n[m](\"refresh\")}n.each(t,function(t,r){var i,o,l;l=[];o=r.newScroll>r.oldScroll;i=o?r.forward:r.backward;n.each(e.waypoints[t],function(t,e){var n,i;if(r.oldScroll<(n=e.offset)&&n<=r.newScroll){return l.push(e)}else if(r.newScroll<(i=e.offset)&&i<=r.oldScroll){return l.push(e)}});l.sort(function(t,e){return t.offset-e.offset});if(!o){l.reverse()}return n.each(l,function(t,e){if(e.options.continuous||t===l.length-1){return e.trigger([i])}})});return this.oldScroll={x:t.horizontal.newScroll,y:t.vertical.newScroll}};t.prototype.refresh=function(){var t,e,r,i=this;r=n.isWindow(this.element);e=this.$element.offset();this.doScroll();t={horizontal:{contextOffset:r?0:e.left,contextScroll:r?0:this.oldScroll.x,contextDimension:this.$element.width(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:r?0:e.top,contextScroll:r?0:this.oldScroll.y,contextDimension:r?n[m](\"viewportHeight\"):this.$element.height(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};return n.each(t,function(t,e){return n.each(i.waypoints[t],function(t,r){var i,o,l,s,f;i=r.options.offset;l=r.offset;o=n.isWindow(r.element)?0:r.$element.offset()[e.offsetProp];if(n.isFunction(i)){i=i.apply(r.element)}else if(typeof i===\"string\"){i=parseFloat(i);if(r.options.offset.indexOf(\"%\")>-1){i=Math.ceil(e.contextDimension*i/100)}}r.offset=o-e.contextOffset+e.contextScroll-i;if(r.options.onlyOnScroll&&l!=null||!r.enabled){return}if(l!==null&&l<(s=e.oldScroll)&&s<=r.offset){return r.trigger([e.backward])}else if(l!==null&&l>(f=e.oldScroll)&&f>=r.offset){return r.trigger([e.forward])}else if(l===null&&e.oldScroll>=r.offset){return r.trigger([e.forward])}})})};t.prototype.checkEmpty=function(){if(n.isEmptyObject(this.waypoints.horizontal)&&n.isEmptyObject(this.waypoints.vertical)){this.$element.unbind([p,y].join(\" \"));return delete a[this.id]}};return t}();l=function(){function t(t,e,r){var i,o;r=n.extend({},n.fn[g].defaults,r);if(r.offset===\"bottom-in-view\"){r.offset=function(){var t;t=n[m](\"viewportHeight\");if(!n.isWindow(e.element)){t=e.$element.height()}return t-n(this).outerHeight()}}this.$element=t;this.element=t[0];this.axis=r.horizontal?\"horizontal\":\"vertical\";this.callback=r.handler;this.context=e;this.enabled=r.enabled;this.id=\"waypoints\"+v++;this.offset=null;this.options=r;e.waypoints[this.axis][this.id]=this;s[this.axis][this.id]=this;i=(o=t.data(w))!=null?o:[];i.push(this.id);t.data(w,i)}t.prototype.trigger=function(t){if(!this.enabled){return}if(this.callback!=null){this.callback.apply(this.element,t)}if(this.options.triggerOnce){return this.destroy()}};t.prototype.disable=function(){return this.enabled=false};t.prototype.enable=function(){this.context.refresh();return this.enabled=true};t.prototype.destroy=function(){delete s[this.axis][this.id];delete this.context.waypoints[this.axis][this.id];return this.context.checkEmpty()};t.getWaypointsByElement=function(t){var e,r;r=n(t).data(w);if(!r){return[]}e=n.extend({},s.horizontal,s.vertical);return n.map(r,function(t){return e[t]})};return t}();d={init:function(t,e){var r;if(e==null){e={}}if((r=e.handler)==null){e.handler=t}this.each(function(){var t,r,i,s;t=n(this);i=(s=e.context)!=null?s:n.fn[g].defaults.context;if(!n.isWindow(i)){i=t.closest(i)}i=n(i);r=a[i.data(u)];if(!r){r=new o(i)}return new l(t,r,e)});n[m](\"refresh\");return this},disable:function(){return d._invoke(this,\"disable\")},enable:function(){return d._invoke(this,\"enable\")},destroy:function(){return d._invoke(this,\"destroy\")},prev:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e>0){return t.push(n[e-1])}})},next:function(t,e){return d._traverse.call(this,t,e,function(t,e,n){if(e<n.length-1){return t.push(n[e+1])}})},_traverse:function(t,e,i){var o,l;if(t==null){t=\"vertical\"}if(e==null){e=r}l=h.aggregate(e);o=[];this.each(function(){var e;e=n.inArray(this,l[t]);return i(o,e,l[t])});return this.pushStack(o)},_invoke:function(t,e){t.each(function(){var t;t=l.getWaypointsByElement(this);return n.each(t,function(t,n){n[e]();return true})});return this}};n.fn[g]=function(){var t,r;r=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(d[r]){return d[r].apply(this,t)}else if(n.isFunction(r)){return d.init.apply(this,arguments)}else if(n.isPlainObject(r)){return d.init.apply(this,[null,r])}else if(!r){return n.error(\"jQuery Waypoints needs a callback function or handler option.\")}else{return n.error(\"The \"+r+\" method does not exist in jQuery Waypoints.\")}};n.fn[g].defaults={context:r,continuous:true,enabled:true,horizontal:false,offset:0,triggerOnce:false};h={refresh:function(){return n.each(a,function(t,e){return e.refresh()})},viewportHeight:function(){var t;return(t=r.innerHeight)!=null?t:i.height()},aggregate:function(t){var e,r,i;e=s;if(t){e=(i=a[n(t).data(u)])!=null?i.waypoints:void 0}if(!e){return[]}r={horizontal:[],vertical:[]};n.each(r,function(t,i){n.each(e[t],function(t,e){return i.push(e)});i.sort(function(t,e){return t.offset-e.offset});r[t]=n.map(i,function(t){return t.element});return r[t]=n.unique(r[t])});return r},above:function(t){if(t==null){t=r}return h._filter(t,\"vertical\",function(t,e){return e.offset<=t.oldScroll.y})},below:function(t){if(t==null){t=r}return h._filter(t,\"vertical\",function(t,e){return e.offset>t.oldScroll.y})},left:function(t){if(t==null){t=r}return h._filter(t,\"horizontal\",function(t,e){return e.offset<=t.oldScroll.x})},right:function(t){if(t==null){t=r}return h._filter(t,\"horizontal\",function(t,e){return e.offset>t.oldScroll.x})},enable:function(){return h._invoke(\"enable\")},disable:function(){return h._invoke(\"disable\")},destroy:function(){return h._invoke(\"destroy\")},extendFn:function(t,e){return d[t]=e},_invoke:function(t){var e;e=n.extend({},s.vertical,s.horizontal);return n.each(e,function(e,n){n[t]();return true})},_filter:function(t,e,r){var i,o;i=a[n(t).data(u)];if(!i){return[]}o=[];n.each(i.waypoints[e],function(t,e){if(r(i,e)){return o.push(e)}});o.sort(function(t,e){return t.offset-e.offset});return n.map(o,function(t){return t.element})}};n[m]=function(){var t,n;n=arguments[0],t=2<=arguments.length?e.call(arguments,1):[];if(h[n]){return h[n].apply(null,t)}else{return h.aggregate.call(null,n)}};n[m].settings={resizeThrottle:100,scrollThrottle:30};return i.load(function(){return n[m](\"refresh\")})})}).call(this);"]}