{"version":3,"sources":["freeform.js"],"names":[],"mappingsfile":"elix_freeform.js","sourcesContent":["/**\n * FreeForm - a jQuery plugin for working with arbitrary forms\n *\n * @param root\n * @returns {*}\n * @constructor\n */\n$.fn.FreeForm = function(root)\n{\n\treturn this.each(function(){\n\t\tnew $.FreeForm(this);\n\t});\n};\n\n/**\n * FreeForm constructor\n *\n * @param root\n * @constructor\n */\n$.FreeForm = function(root)\n{\n\t$.data(root, 'FreeForm', this);\n\tvar self = this;\n\tthis.root = $(root);\n\tthis.fields = $('[data-name]', this.root);\n\tthis.originalData = {};\n\tthis.editButton = $('.dx-edit-general', this.root);\n\tthis.saveButton = $('.dx-save-general', this.root);\n\tthis.cancelButton = $('.dx-cancel-general', this.root);\n\t\n\t// Bind callbacks to buttons\n\tthis.editButton.click(function() {\n\t\tself.edit();\n\t});\n\tthis.saveButton.click(function() {\n\t\tself.save();\n\t});\n\tthis.cancelButton.click(function() {\n\t\tself.cancel();\n\t});\n};\n\n/**\n * FreeForm methods\n */\n$.extend($.FreeForm.prototype, {\n\t/**\n\t * Replace HTML with form input fields\n\t */\n\tedit: function() {\n\t\tvar self = this;\n\t\t\n\t\t// a structure for JSON request\n\t\tvar request = {\n\t\t\tmodel: this.root.data('model'),\n\t\t\titem_id: this.root.data('item_id'),\n\t\t\tlist_id: this.root.data('list_id'),\n\t\t\tfields: []\n\t\t};\n\t\t\n\t\t// collect names of input fields marked with data-name attribute\n\t\tthis.fields.each(function() {\n\t\t\tself.originalData[$(this).data('name')] = $(this).html();\n\t\t\trequest.fields.push({\n\t\t\t\tname: $(this).data('name')\n\t\t\t});\n\t\t});\n\t\t\n\t\t// perform a request to the server\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '/edit',\n\t\t\tdataType: 'json',\n\t\t\tdata: request,\n\t\t\tsuccess: function(data)\n\t\t\t{\n\t\t\t\tself.editButton.hide();\n\t\t\t\tself.saveButton.show();\n\t\t\t\tself.cancelButton.show();\n\t\t\t\t\n\t\t\t\t// replace original html content of marked elements with input fields\n\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar name = data.fields[i].name;\n\t\t\t\t\tvar input = data.fields[i].input;\n\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\n\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\telem.html(input);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t{\n\t\t\t\tconsole.log(textStatus);\n\t\t\t\tconsole.log(jqXHR);\n\t\t\t}\n\t\t});\n\t},\n\t\n\t/**\n\t * Submit input field values to the server\n\t */\n\tsave: function() {\n\t\tvar self = this;\n\t\t\n\t\t// JSON structure\n\t\tvar request = {\n\t\t\tmodel: this.root.data('model'),\n\t\t\titem_id: this.root.data('item_id'),\n\t\t\tlist_id: this.root.data('list_id'),\n\t\t\tfields: []\n\t\t};\n\t\t\n\t\t// collect values of input fields\n\t\tthis.fields.each(function() {\n\t\t\trequest.fields.push({\n\t\t\t\tname: $(this).data('name'),\n\t\t\t\tdata: $(this).find('[name]').val()\n\t\t\t});\n\t\t});\n\t\t\n\t\t// submit a request\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '?_method=PUT',\n\t\t\tdataType: 'json',\n\t\t\tdata: request,\n\t\t\tsuccess: function(data)\n\t\t\t{\n\t\t\t\tself.editButton.show();\n\t\t\t\tself.saveButton.hide();\n\t\t\t\tself.cancelButton.hide();\n\t\t\t\t\n\t\t\t\t// replace input fields with html data from server response\n\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar name = data.fields[i].name;\n\t\t\t\t\tvar html = data.fields[i].html;\n\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\n\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\telem.html(html);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t{\n\t\t\t\tconsole.log(textStatus);\n\t\t\t\tconsole.log(jqXHR);\n\t\t\t}\n\t\t});\n\t},\n\t\n\t/**\n\t * Remove input fields and display original HTML\n\t */\n\tcancel: function() {\n\t\tvar self = this;\n\t\tthis.editButton.show();\n\t\tthis.saveButton.hide();\n\t\tthis.cancelButton.hide();\n\t\tthis.fields.each(function() {\n\t\t\t$(this).html(self.originalData[$(this).data('name')]);\n\t\t});\n\t}\n});\n    \n"]}