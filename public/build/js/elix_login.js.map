{"version":3,"sources":["cache_scripts.js"],"names":[],"mappingsfile":"elix_login.js","sourcesContent":["(function($)\n{\n\t/**\n\t * CacheScripts - a jQuery plugin that loads in background JavaScript plugins so they are stored in cache\n         * Next pages loaded should load faster because will use allready cached files\n\t *\n\t * @param root\n\t * @returns {*}\n\t * @constructor\n\t */\n\t$.fn.CacheScripts = function(opts)\n\t{\n\t\tvar options = $.extend({}, $.fn.CacheScripts.defaults, opts);\n\t\treturn this.each(function()\n\t\t{\n\t\t\tnew $.CacheScripts(this, options);\n\t\t});\n\t};\n\t\n\t$.fn.CacheScripts.defaults = {\n\t};\n\t\n\t/**\n\t * CacheScripts constructor\n\t *\n\t * @param root\n\t * @constructor\n\t */\n\t$.CacheScripts = function(root, opts)\n\t{\n            $.data(root, 'CacheScripts', this);\n            var self = this;\n            this.options = opts;\n            this.root = $(root);\n            \n            this.sources = $('.dx-source', this.root);\n            \n            \n            var arr = [];\n            \n            this.sources.each(function()\n            {\n                var src = $(this).text();\n                arr.push(src);\n            });\n                        \n            var scripts = new getScripts(\n                arr,\n                function(src) {\n                    /* Executed each time a script has loaded */\n                    console.log(\"Script loaded: \" + src);\n                },\n                function () {\n                    /* Executed when the entire list of scripts has been loaded */\n                    console.log(\"All scripts loaded\");\n                }\n            );\n    \n            scripts.fetch();\n            \n\t};\n})(jQuery);\n\nfunction getScripts( scripts, onScript, onComplete )\n{\n    var scriptHandler = this;\n    this.async = true;\n    this.cache = true;\n    this.data = null;\n    this.complete = function () { scriptHandler.loaded(); };\n    this.scripts = scripts;\n    this.onScript = onScript;\n    this.onComplete = onComplete;\n    this.total = scripts.length;\n    this.progress = 0;\n};\n\ngetScripts.prototype.fetch = function() {    \n    var src = this.scripts[ this.progress ];\n    console.log('%cFetching %s','color:#ffbc2e;', src);\n\n    $.ajax({\n        crossDomain:true,\n        async:this.async,\n        cache:this.cache,\n        type:'GET',\n        url: src,\n        data:this.data,\n        statusCode: {\n            200: this.complete\n        },\n        dataType: 'text'\n    });\n};\n\ngetScripts.prototype.loaded = function () {    \n    var src_loaded = this.scripts[ this.progress ];\n    this.progress++;\n    if( this.progress >= this.total ) {\n        if(this.onComplete) this.onComplete();\n    } else {\n        this.fetch();\n    };\n    if(this.onScript) this.onScript(src_loaded);\n};\n\n$(document).ready(function() {\n    setTimeout(function(){ $(\".dx-cache-container\").CacheScripts(); }, 200);    \n});\n\n"]}