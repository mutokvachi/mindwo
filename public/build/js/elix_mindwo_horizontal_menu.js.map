{"version":3,"sources":["horizontal_menu.js","horizontal_form_ui.js"],"names":[],"mappingsfile":"elix_mindwo_horizontal_menu.js","sourcesContent":["/**\n * JavaScript logic for horizontal menu UI\n *\n * @type _L4.Anonym$0|Function\n */\nvar HMenuUI = function()\n{\n\t/**\n\t * Izceļ aktivizēto izvēlni (jo cache glabājas sākotnējais izcēlums - to noņemam)\n\t *\n\t * @returns {undefined}\n\t */\n\tvar setActiveMenu = function()\n\t{\n\t\t$(\".dx-main-menu li\").removeClass(\"active\");\n\t\t\n\t\tvar active_item = $('.dx-main-menu li a[href=\"' + window.location.href + '\"]');\n\t\t\n\t\tif(active_item.length == 0)\n\t\t{\n\t\t\treturn; // nav ielādēta lapa no menu\n\t\t}\n\t\t\n\t\tif(parseInt(active_item.attr(\"data-level\")) == 0)\n\t\t{\n\t\t\tactive_item.parent().addClass(\"active\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetActiveParentMenu(parseInt(active_item.attr(\"data-level\")), active_item.parent());\n\t\t}\n\t};\n\t\n\t/**\n\t * Rekursīvi aktivizē menu elementa vecākos elementus līdz pašam pirmajam līmenim\n\t * @param {integer} level Līmenis\n\t * @param {object} elem Menu elements\n\t * @returns {undefined}\n\t */\n\tvar setActiveParentMenu = function(level, elem)\n\t{\n\t\tif(level == 0)\n\t\t{\n\t\t\telem.addClass(\"active\");\n\t\t\treturn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetActiveParentMenu(level - 1, elem.parent().parent());\n\t\t}\n\t};\n\t\n\t/**\n\t * Repositionate page content and employees search pane\n\t *\n\t * @returns {undefined}\n\t */\n\tvar setContentMargin = function()\n\t{\n\t\tvar menu_w = $(\".dx-top-menu\").outerWidth() - $(\"#dx-search-box-top-li\").outerWidth() - 40;\n\t\t$(\".dx-main-menu\").css(\"max-width\", menu_w + \"px\");\n\t\t\n\t\tvar height = $(\".dx-top-menu\").offset().top + $(\".dx-top-menu\").outerHeight() + \"px\";\n\t\t$(\".dx-employees-quick\").css(\"top\", height, \"important\");\n\t\t\n\t};\n\t\n\t/**\n\t * Hide images not loaded\n\t * @returns {undefined}\n\t */\n\tvar hideErrorImages = function()\n\t{\n\t\t$(\"img\").error(function()\n\t\t{\n\t\t\t$(this).hide();\n\t\t\tsetContentMargin();\n\t\t});\n\t};\n\t\n\tvar positionDIVs = function()\n\t{\n\t\tvar top = $(window).scrollTop();\n\t\tif(top > 50 && $(window).width() >= 768)\n\t\t{\n\t\t\t$(\".dx-top-menu\").removeClass(\"dx-nonfixed-top\").addClass(\"navbar-fixed-top\");\n\t\t\t$(\".dx-page-container\").css('margin-top', '50px');\n\t\t\t\t\t\t\n\t\t\tvar height = $(\".dx-top-menu\").outerHeight() + \"px\";\n\t\t\t$(\".dx-employees-quick\").css(\"top\", height, \"important\");\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$(\".dx-top-menu\").removeClass(\"navbar-fixed-top\").addClass(\"dx-nonfixed-top\");\n\t\t\t$(\".dx-page-container\").css('margin-top', '0px');\n\t\t\t\t\t\t\n\t\t\tvar height = ($(\".dx-top-menu\").offset().top + $(\".dx-top-menu\").outerHeight() - top) + \"px\";\n\t\t\t$(\".dx-employees-quick\").css(\"top\", height, \"important\");\n\t\t}\n\t};\n\t\n\t/**\n\t * Stick menu on scrolling\n\t * @returns {undefined}\n\t */\n\tvar handleScroll = function()\n\t{\n\t\t$(document).scroll(function()\n\t\t{\n\t\t\tpositionDIVs();\n\t\t});\n\t};\n\t\n\t/**\n\t * Make navigation behave correctly on mobiles.\n\t */\n\tvar handleTapEvent = function()\n\t{\n\t\t// select all dropdown toggles under the top level\n\t\t$('.dx-main-menu .dropdown-submenu > a.dropdown-toggle').each(function()\n\t\t{\n\t\t\t$(this).click(function(e)\n\t\t\t{\n\t\t\t\tif($(window).width() < 768)\n\t\t\t\t{\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\n\t\t\t\t\t// select the ul element next to the toggle (submenu itself)\n\t\t\t\t\tvar submenu = $(this).next();\n\t\t\t\t\t\n\t\t\t\t\tif(submenu.is(':visible'))\n\t\t\t\t\t{\n\t\t\t\t\t\t// hide submenu and all open sub-submenus of it\n\t\t\t\t\t\tsubmenu.add('.dropdown-menu', submenu).attr('style', '');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// hide already open submenus at the same level\n\t\t\t\t\t\t$(this).parent().siblings('.dropdown-submenu').find('.dropdown-menu:visible').attr('style', '');\n\t\t\t\t\t\tsubmenu.show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t\n\t\t// close open submenus when closing a top-level menu\n\t\t$('.dx-main-menu > li > a.dropdown-toggle').click(function()\n\t\t{\n\t\t\tif($(window).width() < 768)\n\t\t\t{\n\t\t\t\t// if user is closing menu, then hide submenus of it\n\t\t\t\tif($(this).attr('aria-expanded') == 'true')\n\t\t\t\t{\n\t\t\t\t\t$(this).next().find('.dropdown-menu:visible').attr('style', '');\n\t\t\t\t}\n\t\t\t\t// if user opens another menu, hide submenus of an already open menu\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$(this).parent().siblings('.open').find('.dropdown-submenu .dropdown-menu:visible').attr('style', '');\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\t$('.dx-main-menu').on('click', '.dropdown-submenu > a.dropdown-toggle', function(e)\n\t\t{\n\t\t\tif($(window).width() >= 768)\n\t\t\t{\n\t\t\t\te.stopPropagation();\n\t\t\t\t$(this).trigger('mouseenter');\n\t\t\t}\n\t\t});\n\t};\n\t\n\tvar hideSubmenus = function()\n\t{\n\t\tif($(window).width() > 768)\n\t\t{\n\t\t\t$('.dx-main-menu .dropdown-submenu .dropdown-menu:visible').attr('style', '');\n\t\t}\n\t};\n\t\n\tvar menu_ul = $('#navbar > ul');\n\tvar more_li = menu_ul.children('#more-items-wrap');\n\tvar more_ul = more_li.children('#more-items');\n\tvar more_li_width;\n\tvar widths = [];\n\t\n\t/**\n\t * Implementation of 'tabdrop' behavior for main navigation. When it is not enough place for all menu items,\n\t * display 'More' menu item, and move there all items that don't fit width of a container, and vice versa.\n\t */\n\tvar emulateTabdrop = function()\n\t{\n\t\t// extra small screen - remove 'more' item for collapsed menu to work\n\t\tif($(window).width() <= 768)\n\t\t{\n\t\t\tif(more_ul.children().length)\n\t\t\t{\n\t\t\t\tmore_ul.children().insertBefore(more_li).removeClass('dropdown-submenu');\n\t\t\t}\n\t\t\t\n\t\t\tmore_li.hide();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// small, medium and large screens\n\t\telse\n\t\t{\n\t\t\t// calculate widths\n\t\t\tif(!more_li_width)\n\t\t\t{\n\t\t\t\t// make sure that 'More' item is visible\n\t\t\t\tmore_li.show();\n\t\t\t\tmore_li_width = more_li.outerWidth();\n\t\t\t\t\n\t\t\t\t// calculate widths of all menu items except 'More' item\n\t\t\t\twidths = [];\n\t\t\t\tmenu_ul.children('li:not(:last-child)').each(function()\n\t\t\t\t{\n\t\t\t\t\twidths.push($(this).outerWidth());\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\t// wdith of a container\n\t\tvar width = menu_ul.parent().innerWidth() - more_li_width;\n\t\tvar items = menu_ul.children('li:not(:last-child)');\n\t\tvar count = items.length;\n\t\t\n\t\t// sum of widths of all menu items\n\t\tvar items_width = 0;\n\t\t\n\t\tfor(var i = 0; i < count; i++)\n\t\t{\n\t\t\titems_width += widths[i];\n\t\t}\n\t\t\n\t\t// not all items are visible - hide redundant items\n\t\tif(items_width > width)\n\t\t{\n\t\t\tmore_li.show();\n\t\t\t\n\t\t\t// place redundant items under the 'More' item\n\t\t\twhile(items_width > width)\n\t\t\t{\n\t\t\t\tvar current = $(items[count - 1]);\n\t\t\t\titems_width -= widths[count - 1];\n\t\t\t\tcount--;\n\t\t\t\tcurrent = current.prependTo(more_ul);\n\t\t\t\t// if the moved item has child nodes, add class dropdown-submenu (mandatory)\n\t\t\t\tif(current.children('ul').length)\n\t\t\t\t{\n\t\t\t\t\tcurrent.addClass('dropdown-submenu');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// all items are visible - get them out of the 'More' item and place back to the root level of the main menu\n\t\telse if(items_width < width)\n\t\t{\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tif(count == widths.length)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(items_width + widths[count] >= width)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar current = more_ul.children().first();\n\t\t\t\titems_width += widths[count];\n\t\t\t\tcount++;\n\t\t\t\tcurrent.removeClass('dropdown-submenu').insertBefore(more_li);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(more_ul.children().length)\n\t\t{\n\t\t\tmore_li.is(':visible') || more_li.show();\n\t\t}\n\t\t\n\t\telse\n\t\t{\n\t\t\tmore_li.is(':hidden') || more_li.hide();\n\t\t}\n\t};\n\t\n\t/**\n\t * Inits horizontal menu page UI\n\t *\n\t * @returns {undefined}\n\t */\n\tvar initUI = function()\n\t{\n\t\t//hideErrorImages();\n\t\tsetActiveMenu();\n\t\t\n\t\tif((typeof dx_is_cssonly === 'undefined') || !dx_is_cssonly)\n\t\t{\n\t\t\tsetContentMargin();\n\t\t\tPageMain.addResizeCallback(setContentMargin);\n\t\t}\n\t\t\n\t\thandleScroll();\n\t\thandleTapEvent();\n\t\t\n\t\tPageMain.addResizeCallback(positionDIVs);\n\t\tPageMain.addResizeCallback(hideSubmenus);\n\t\t\n\t\tif((typeof dx_is_cssonly !== 'undefined') && dx_is_cssonly)\n\t\t{\n\t\t\temulateTabdrop();\n\t\t\tPageMain.addResizeCallback(emulateTabdrop);\n\t\t}\n\t};\n\t\n\treturn {\n\t\tinit: function()\n\t\t{\n\t\t\tinitUI();\n\t\t}\n\t};\n}();\n\n$(document).ready(function()\n{\n    HMenuUI.init();\n});","/**\n * JavaScript logic for horizontal menu forms UI\n * \n * @type _L4.Anonym$0|Function\n */\nvar HFormUI = function()\n{ \n    var handleFormClose = function(grid_id) {\n        $(\".dx-form-fullscreen-frame .dx-form-close-btn\").click(function() {\n            $(\"#td_form_data\").html(\"\");\n            $(\"#td_data\").show();\n            stop_executing(grid_id);\n        });\n    };\n    \n    /**\n     * Inits horizontal menu page UI\n     * \n     * @returns {undefined}\n     */\n    var initUI = function(grid_id) {       \n       handleFormClose(grid_id);\n    };\n\n    return {\n        init: function(grid_id) {\n            initUI(grid_id);\n        }\n    };\n}();"]}