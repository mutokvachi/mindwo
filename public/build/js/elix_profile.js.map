{"version":3,"sources":["freeform.js","inlineform.js","empl_links_fix.js"],"names":[],"mappingstxfile":"elix_profile.js","sourcesContent":["(function($)\n{\n\t/**\n\t * FreeForm - a jQuery plugin for working with arbitrary forms\n\t *\n\t * @param root\n\t * @returns {*}\n\t * @constructor\n\t */\n\t$.fn.FreeForm = function(opts)\n\t{\n\t\tvar options = $.extend({}, $.fn.FreeForm.defaults, opts);\n\t\t\n\t\treturn this.each(function()\n\t\t{\n\t\t\tnew $.FreeForm(this, options);\n\t\t});\n\t};\n\t\n\t$.fn.FreeForm.defaults = {\n\t\t\n\t};\n\t\n\t/**\n\t * FreeForm constructor\n\t *\n\t * @param root\n\t * @constructor\n\t */\n\t$.FreeForm = function(root, opts)\n\t{\n\t\t// store object instance along with a root DOM element\n\t\t$.data(root, 'FreeForm', this);\n\t\t\n\t\tvar self = this;\n\t\tthis.root = $(root);\n\t\tthis.options = opts;\n\t\tthis.fields = $('[data-name]', this.root);\n\t\tthis.originalData = {};\n\t\tthis.editButton = $('.dx-edit-general', this.root);\n\t\tthis.saveButton = $('.dx-save-general', this.root);\n\t\tthis.cancelButton = $('.dx-cancel-general', this.root);\n\t\t\n\t\t// Bind callbacks to buttons\n\t\tthis.editButton.click(function() { self.edit(); });\n\t\tthis.saveButton.click(function() { self.save(); });\n\t\tthis.cancelButton.click(function() { self.cancel(); });\n\t};\n\t\n\t/**\n\t * FreeForm methods\n\t */\n\t$.extend($.FreeForm.prototype, {\n\t\t/**\n\t\t * Replace HTML with form input fields\n\t\t */\n\t\tedit: function()\n\t\t{\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t// a structure for JSON request\n\t\t\tvar request = {\n\t\t\t\tmodel: this.root.data('model'),\n\t\t\t\titem_id: this.root.data('item_id'),\n\t\t\t\tlist_id: this.root.data('list_id'),\n\t\t\t\tfields: []\n\t\t\t};\n\t\t\t\n\t\t\t// collect names of input fields marked with data-name attribute\n\t\t\tthis.fields.each(function()\n\t\t\t{\n\t\t\t\tself.originalData[$(this).data('name')] = $(this).html();\n\t\t\t\trequest.fields.push({\n\t\t\t\t\tname: $(this).data('name')\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tshow_page_splash(1);\n\t\t\t\n\t\t\t// perform a request to the server\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '/edit',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: request,\n\t\t\t\tsuccess: function(data)\n\t\t\t\t{\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnotify_err(data.error);\n\t\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tself.editButton.hide();\n\t\t\t\t\tself.saveButton.show();\n\t\t\t\t\tself.cancelButton.show();\n\t\t\t\t\t\n\t\t\t\t\t// replace original html content of marked elements with input fields\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar name = data.fields[i].name;\n\t\t\t\t\t\tvar input = data.fields[i].input;\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\n\t\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\t\telem.html(input);\n\t\t\t\t\t}\n\t\t\t\t\thide_page_splash(1);                                        \n\t\t\t\t},\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Submit input field values to the server\n\t\t */\n\t\tsave: function()\n\t\t{\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t// JSON structure\n\t\t\tvar request = {\n\t\t\t\tmodel: this.root.data('model'),\n\t\t\t\titem_id: this.root.data('item_id'),\n\t\t\t\tlist_id: this.root.data('list_id'),\n\t\t\t\tfields: []\n\t\t\t};\n\t\t\t\n\t\t\t// collect values of input fields\n\t\t\tthis.fields.each(function()\n\t\t\t{\n\t\t\t\trequest.fields.push({\n\t\t\t\t\tname: $(this).data('name'),\n\t\t\t\t\tdata: $(this).find('[name]').val()\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tshow_page_splash(1);\n\t\t\t\n\t\t\t// submit a request\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '?_method=PUT',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: request,\n\t\t\t\tsuccess: function(data)\n\t\t\t\t{\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnotify_err(data.error);\n\t\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tself.editButton.show();\n\t\t\t\t\tself.saveButton.hide();\n\t\t\t\t\tself.cancelButton.hide();\n\t\t\t\t\t\n\t\t\t\t\t// replace input fields with html data from server response\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar name = data.fields[i].name;\n\t\t\t\t\t\tvar html = data.fields[i].html;\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\n\t\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\t\telem.html(html);\n\t\t\t\t\t}\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t},\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Remove input fields and display original HTML\n\t\t */\n\t\tcancel: function()\n\t\t{\n\t\t\tvar self = this;\n\t\t\tthis.editButton.show();\n\t\t\tthis.saveButton.hide();\n\t\t\tthis.cancelButton.hide();\n\t\t\tthis.fields.each(function()\n\t\t\t{\n\t\t\t\t$(this).html(self.originalData[$(this).data('name')]);\n\t\t\t});\n\t\t}\n\t});\n})(jQuery);","/**\n * Author:  Eugene Ostapenko <evo@olympsoft.com>\n * License: MIT\n * Created: 04.11.16, 19:33\n */\n(function($)\n{\n\t/**\n\t * InlineForm - a jQuery plugin that provides a way to work with AJAX form embedded into a page\n\t *\n\t * @param root\n\t * @returns {*}\n\t * @constructor\n\t */\n\t$.fn.InlineForm = function(opts)\n\t{\n\t\tvar options = $.extend({}, $.fn.InlineForm.defaults, opts);\n\t\t\n\t\treturn this.each(function()\n\t\t{\n\t\t\tnew $.InlineForm(this, options);\n\t\t});\n\t};\n\t\n\t$.fn.InlineForm.defaults = {\n\t\tbeforeSave: null,\n\t\tafterSave: null,\n\t\templ_search_page_url: \"/search\"\n\t};\n\t\n\t/**\n\t * InlineForm constructor\n\t *\n\t * @param root\n\t * @constructor\n\t */\n\t$.InlineForm = function(root, opts)\n\t{\n\t\t$.data(root, 'InlineForm', this);\n\t\tvar self = this;\n\t\tthis.options = opts;\n\t\tthis.root = $(root);\n\t\tthis.tabs = $('.tab-pane', this.root);\n\t\tthis.originalTabs = {};\n\t\tthis.editButton = $('.dx-edit-profile', this.root);\n\t\tthis.saveButton = $('.dx-save-profile', this.root);\n\t\tthis.cancelButton = $('.dx-cancel-profile', this.root);\n\t\tthis.deleteButton = $('.dx-delete-profile', this.root);\n\t\t\n\t\t// Bind callbacks to buttons\n\t\tthis.editButton.click(function()\n\t\t{\n\t\t\tself.edit();\n\t\t});\n\t\tthis.saveButton.click(function()\n\t\t{\n\t\t\tself.save();\n\t\t});\n\t\tthis.cancelButton.click(function()\n\t\t{\n\t\t\tself.cancel();\n\t\t});\n\t\tthis.deleteButton.click(function()\n\t\t{\n\t\t\tself.destroy();\n\t\t});\n\t};\n\t\n\t/**\n\t * InlineForm methods\n\t */\n\t$.extend($.InlineForm.prototype, {\n\t\t/**\n\t\t * Replace HTML with form input fields\n\t\t */\n\t\tedit: function()\n\t\t{\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t// a structure for JSON request\n\t\t\tvar request = {\n\t\t\t\tlist_id: this.root.data('list_id'),\n\t\t\t\ttab_list: []\n\t\t\t};\n\t\t\t\n\t\t\tthis.tabs.each(function()\n\t\t\t{\n\t\t\t\tself.originalTabs[$(this).data('tabTitle')] = $(this).html();\n\t\t\t});\n\t\t\t\n\t\t\tshow_page_splash(1);\n\t\t\t\n\t\t\t// perform a request to the server\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '/edit',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: request,\n\t\t\t\tsuccess: function(data)\n\t\t\t\t{\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnotify_err(data.error);\n\t\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tself.editButton.hide();\n\t\t\t\t\t\n\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane');\n\t\t\t\t\t\n\t\t\t\t\t// replace original html content of marked elements with input fields\n\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tab = $(tabs[i]);\n\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\n\t\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\t\telem.html(tab.html());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\n\t\t\t\t\t$('.dx-stick-footer').show();\n\t\t\t\t},\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Submit input field values to the server\n\t\t */\n\t\tsave: function()\n\t\t{\n\t\t\tvar self = this;\n\t\t\tvar formData = process_data_fields(this.root.attr('id'));\n\t\t\tformData.append('item_id', this.root.data('item_id'));\n\t\t\tformData.append('list_id', this.root.data('list_id'));\n\t\t\tformData.append('edit_form_id', this.root.data('form_id'));\n\t\t\tformData.append('redirect_url', this.root.data('redirect_url'));\n\t\t\t\n\t\t\tvar url = DX_CORE.site_url + 'inlineform';\n\t\t\tif(this.root.data('mode') != 'create')\n\t\t\t{\n\t\t\t\turl += '/' + this.root.data('item_id') + '?_method=PUT';\n\t\t\t}\n\t\t\t\n\t\t\tshow_page_splash(1);\n\t\t\t\n\t\t\t// submit a request\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'json',\n\t\t\t\tprocessData: false,\n\t\t\t\tcontentType: false,\n\t\t\t\tdata: formData,\n\t\t\t\tsuccess: function(data)\n\t\t\t\t{\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnotify_err(data.error);\n\t\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(self.root.data('mode') == 'create')\n\t\t\t\t\t{\n\t\t\t\t\t\twindow.location = data.redirect;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tself.editButton.show();\n\t\t\t\t\t\n\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane');\n\t\t\t\t\t\n\t\t\t\t\t// replace original html content of marked elements with input fields\n\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tab = $(tabs[i]);\n\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\n\t\t\t\t\t\tif(elem.length)\n\t\t\t\t\t\t\telem.html(tab.html());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(self.options.afterSave)\n\t\t\t\t\t{\n\t\t\t\t\t\tself.options.afterSave();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t$('.dx-stick-footer').hide();\n\t\t\t\t},\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Remove input fields and display original HTML\n\t\t */\n\t\tcancel: function()\n\t\t{\n\t\t\tif(this.root.data('mode') == 'create')\n\t\t\t{\n\t\t\t\tshow_page_splash(1);\n\t\t\t\twindow.location = this.options.empl_search_page_url;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tthis.editButton.show();\n\t\t\t\n\t\t\tfor(var k in this.originalTabs)\n\t\t\t{\n\t\t\t\tthis.tabs.filter('[data-tab-title=\"' + k + '\"]').html(this.originalTabs[k]);\n\t\t\t}\n\t\t\t$('.dx-stick-footer').hide();\n\t\t},\n\t\t\n\t\tdestroy: function()\n\t\t{\n\t\t\tif(!confirm(Lang.get('frame.confirm_delete')))\n\t\t\t\treturn;\n\t\t\t\n\t\t\tvar request = {\n\t\t\t\tedit_form_id: this.root.data('form_id'),\n\t\t\t\titem_id: this.root.data('item_id')\n\t\t\t};\n\t\t\t\n\t\t\tshow_page_splash(1);\n\t\t\t\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '?_method=DELETE',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: request,\n\t\t\t\tsuccess: function(data)\n\t\t\t\t{\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnotify_err(data.error);\n\t\t\t\t\t\thide_page_splash(1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\twindow.location = data.redirect;\n\t\t\t\t},\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\thide_page_splash(1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n})(jQuery);","(function($)\n{\n\t/**\n\t * EmplLinksFix - a jQuery plugin that fix (re-init) links to other employees (manager, reporting manager)\n\t *\n\t * @param root\n\t * @returns {*}\n\t * @constructor\n\t */\n\t$.fn.EmplLinksFix = function(opts)\n\t{\n\t\tvar options = $.extend({}, $.fn.EmplLinksFix.defaults, opts);\n\t\treturn this.each(function()\n\t\t{\n\t\t\tnew $.EmplLinksFix(this, options);\n\t\t});\n\t};\n\t\n\t$.fn.EmplLinksFix.defaults = {\n\t\tprofile_url: \"/employee/profile/\"\n\t};\n\t\n\t/**\n\t * EmplLinksFix constructor\n\t *\n\t * @param root\n\t * @constructor\n\t */\n\t$.EmplLinksFix = function(root, opts)\n\t{\n\t\t$.data(root, 'EmplLinksFix', this);\n\t\tvar self = this;\n\t\tthis.options = opts;\n\t\tthis.root = $(root);\n                \n\t\tthis.flds_managers = $('.dx-autocompleate-field[data-item-field=manager_id], .dx-autocompleate-field[data-item-field=reporting_manager_id]', this.root);\n\t\tthis.tiles_managers = $('.employee-manager-tile', this.root);\n                \n                this.tiles_managers.each(function()\n                {\n                    if (!$(this).data(\"is-fix-init\")) {\n                        \n                        $(this).click(function() {\n                            self.show_tile_manager($(this).data(\"empl-id\"));\n                        });\n                    \n                        $(this).data(\"is-fix-init\", 1);\n                    }\n                });\n                                \n                this.flds_managers.each(function()\n                {\n                    if (!$(this).data(\"is-fix-init\")) {\n                        var fld = $(this);\n                        fld.find(\".dx-rel-id-add-btn\").off(\"click\"); //remove original event handler which will open CMS form\n                        \n                        fld.find(\".dx-rel-id-add-btn\").click(function() {\n                            self.show_manager(fld);\n                        });\n                        \n                        // Reset tooltip from edit to view hint\n                        fld.find(\".dx-rel-id-add-btn\").tooltipster('destroy');\n                        fld.find(\".dx-rel-id-add-btn\").attr(\"title\", Lang.get('empl_profile.hint_view_profile'));\n                        \n                        fld.find(\".dx-rel-id-add-btn\").tooltipster({\n                            theme: 'tooltipster-light',\n                            animation: 'grow',\n                            maxWidth: 300\n                        });\n        \n                        $(this).data(\"is-fix-init\", 1);\n                    }\n                });\n\t};\n\t\n\t/**\n\t * EmplLinksFix methods\n\t */\n\t$.extend($.EmplLinksFix.prototype, {\n\t\t/**\n\t\t * Show manager profile\n\t\t */\n\t\tshow_manager: function(fld)\n\t\t{\n                    var item_id = fld.find(\".dx-auto-input-id\").val();\n                    \n                    if (item_id == 0) {\n                        return;\n                    }\n                    show_page_splash(1);\n                    window.location = this.options.profile_url + item_id;\n\t\t},\n                show_tile_manager: function(empl_id)\n                {\n                    show_page_splash(1);\n                    window.location = this.options.profile_url + empl_id;\n                }\n\t});\n})(jQuery);\n\n$(document).ajaxComplete(function() {\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\n});\n\n$(document).ready(function() {\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\n});"]}