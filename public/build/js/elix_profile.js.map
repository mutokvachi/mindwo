{"version":3,"sources":["freeform.js","inlineform.js","empl_links_fix.js","personal_docs.js"],"names":[],"mappingstvfile":"elix_profile.js","sourcesContent":["(function($)\r\n{\r\n\t/**\r\n\t * FreeForm - a jQuery plugin for working with arbitrary forms\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.FreeForm = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.FreeForm.defaults, opts);\r\n\t\t\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.FreeForm(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.FreeForm.defaults = {\r\n\t\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * FreeForm constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.FreeForm = function(root, opts)\r\n\t{\r\n\t\t// store object instance along with a root DOM element\r\n\t\t$.data(root, 'FreeForm', this);\r\n\t\t\r\n\t\tvar self = this;\r\n\t\tthis.root = $(root);\r\n\t\tthis.options = opts;\r\n\t\tthis.fields = $('[data-name]', this.root);\r\n\t\tthis.originalData = {};\r\n\t\tthis.editButton = $('.dx-edit-general', this.root);\r\n\t\tthis.saveButton = $('.dx-save-general', this.root);\r\n\t\tthis.cancelButton = $('.dx-cancel-general', this.root);\r\n\t\t\r\n\t\t// Bind callbacks to buttons\r\n\t\tthis.editButton.click(function() { self.edit(); });\r\n\t\tthis.saveButton.click(function() { self.save(); });\r\n\t\tthis.cancelButton.click(function() { self.cancel(); });\r\n\t};\r\n\t\r\n\t/**\r\n\t * FreeForm methods\r\n\t */\r\n\t$.extend($.FreeForm.prototype, {\r\n\t\t/**\r\n\t\t * Replace HTML with form input fields\r\n\t\t */\r\n\t\tedit: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// a structure for JSON request\r\n\t\t\tvar request = {\r\n\t\t\t\tmodel: this.root.data('model'),\r\n\t\t\t\titem_id: this.root.data('item_id'),\r\n\t\t\t\tlist_id: this.root.data('list_id'),\r\n\t\t\t\tfields: []\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t// collect names of input fields marked with data-name attribute\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\tself.originalData[$(this).data('name')] = $(this).html();\r\n\t\t\t\trequest.fields.push({\r\n\t\t\t\t\tname: $(this).data('name')\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// perform a request to the server\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '/edit',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.hide();\r\n\t\t\t\t\tself.saveButton.show();\r\n\t\t\t\t\tself.cancelButton.show();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar name = data.fields[i].name;\r\n\t\t\t\t\t\tvar input = data.fields[i].input;\r\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(input);\r\n\t\t\t\t\t}\r\n\t\t\t\t\thide_page_splash(1);                                        \r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n                                        console.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Submit input field values to the server\r\n\t\t */\r\n\t\tsave: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// JSON structure\r\n\t\t\tvar request = {\r\n\t\t\t\tmodel: this.root.data('model'),\r\n\t\t\t\titem_id: this.root.data('item_id'),\r\n\t\t\t\tlist_id: this.root.data('list_id'),\r\n\t\t\t\tfields: []\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t// collect values of input fields\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\trequest.fields.push({\r\n\t\t\t\t\tname: $(this).data('name'),\r\n\t\t\t\t\tdata: $(this).find('[name]').val()\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// submit a request\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'freeform/' + request.item_id + '?_method=PUT',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.show();\r\n\t\t\t\t\tself.saveButton.hide();\r\n\t\t\t\t\tself.cancelButton.hide();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace input fields with html data from server response\r\n\t\t\t\t\tfor(var i = 0; i < data.fields.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar name = data.fields[i].name;\r\n\t\t\t\t\t\tvar html = data.fields[i].html;\r\n\t\t\t\t\t\tvar elem = $('[data-name=\"' + name + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(html);\r\n\t\t\t\t\t}\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\tconsole.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove input fields and display original HTML\r\n\t\t */\r\n\t\tcancel: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\tthis.editButton.show();\r\n\t\t\tthis.saveButton.hide();\r\n\t\t\tthis.cancelButton.hide();\r\n\t\t\tthis.fields.each(function()\r\n\t\t\t{\r\n\t\t\t\t$(this).html(self.originalData[$(this).data('name')]);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(jQuery);","/**\r\n * Author:  Eugene Ostapenko <evo@olympsoft.com>\r\n * License: MIT\r\n * Created: 04.11.16, 19:33\r\n */\r\n(function ($)\r\n{\r\n\t/**\r\n\t * InlineForm - a jQuery plugin that provides a way to work with AJAX form embedded into a page\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.InlineForm = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.InlineForm.defaults, opts);\r\n\t\t\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.InlineForm(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.InlineForm.defaults = {\r\n\t\tbeforeSave: null,\r\n\t\tafterSave: null,\r\n\t\templ_search_page_url: \"/search\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * InlineForm constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.InlineForm = function(root, opts)\r\n\t{\r\n\t\t$.data(root, 'InlineForm', this);\r\n\t\tvar self = this;\r\n\t\tthis.options = opts;\r\n\t\tthis.root = $(root);\r\n\t\tthis.tabs = $('.tab-pane', this.root);\r\n\t\tthis.originalTabs = {};\r\n\t\tthis.editButton = $('.dx-edit-profile', this.root);\r\n\t\tthis.saveButton = $('.dx-save-profile', this.root);\r\n\t\tthis.cancelButton = $('.dx-cancel-profile', this.root);\r\n\t\tthis.deleteButton = $('.dx-delete-profile', this.root);\r\n\t\tthis.requests;\r\n                this.onRequestSuccess;\r\n                this.onRequestFailed;\r\n        \r\n\t\t// Bind callbacks to buttons\r\n\t\tthis.editButton.click(function()\r\n\t\t{\r\n\t\t\tself.edit();\r\n\t\t});\r\n\t\tthis.saveButton.click(function()\r\n\t\t{\r\n\t\t\tself.save();\r\n\t\t});\r\n\t\tthis.cancelButton.click(function()\r\n\t\t{\r\n\t\t\tself.cancel();\r\n\t\t});\r\n\t\tthis.deleteButton.click(function()\r\n\t\t{\r\n\t\t\tself.destroy();\r\n\t\t});\r\n\t};\r\n\t\r\n\t/**\r\n\t * InlineForm methods\r\n\t */\r\n\t$.extend($.InlineForm.prototype, {\r\n                /**\r\n                 * Resets and initializes all async request processing parameters\r\n                 * @param {integer} total Total count of processes which will be processed asynchronously\r\n                 */\r\n                initRequest: function (total) {\r\n                    this.requests = {\r\n                        total: total,\r\n                        succeeded: 0,\r\n                        failed: 0\r\n                    };\r\n\r\n                    this.onRequestSuccess = [];\r\n                    this.onRequestFailed = [];\r\n                },\r\n                /**\r\n                 * Saves completed request status. If all request are finished, then execute success commands\r\n                 * @param {boolean} is_success Parmeter if process wass successful\r\n                 */\r\n                setRequestStatus: function (is_success) {\r\n                    if (is_success) {\r\n                        this.requests.succeeded++;\r\n                    } else {\r\n                        this.requests.failed++;\r\n                    }\r\n\r\n                    if (this.requests.total === (this.requests.succeeded + this.requests.failed)) {\r\n                        if (this.requests.failed === 0) {\r\n                            for (var i = 0; i < this.onRequestSuccess.length; i++) {\r\n                                this.onRequestSuccess[i].func(this.onRequestSuccess[i].args);\r\n                            }\r\n                        } else {\r\n                            for (var i = 0; i < this.onRequestFailed.length; i++) {\r\n                                this.onRequestFailed[i].func(this.onRequestFailed[i].args);\r\n                            }\r\n                        }\r\n\r\n                        hide_page_splash(1);\r\n                    }\r\n                },\r\n\t\t/**\r\n\t\t * Replace HTML with form input fields\r\n\t\t */\r\n\t\tedit: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\t\r\n\t\t\t// a structure for JSON request\r\n\t\t\tvar request = {\r\n\t\t\t\tlist_id: this.root.data('list_id'),\r\n\t\t\t\ttab_list: []\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.tabs.each(function()\r\n\t\t\t{\r\n\t\t\t\tself.originalTabs[$(this).data('tabTitle')] = $(this).html();\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// perform a request to the server\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '/edit',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tself.editButton.hide();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane');\r\n\t\t\t\t\t\r\n\t\t\t\t\t// replace original html content of marked elements with input fields\r\n\t\t\t\t\tfor(var i = 0; i < tabs.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar tab = $(tabs[i]);\r\n\t\t\t\t\t\tvar elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n\t\t\t\t\t\tif(elem.length)\r\n\t\t\t\t\t\t\telem.html(tab.html());\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n                                        if(self.root.data('has_users_documents_access') == 1){\r\n                                            window.DxEmpPersDocs.toggleDisable(false);\r\n                                        }\r\n                                        \r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\r\n\t\t\t\t\t$('.dx-stick-footer').show();\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Submit input field values to the server\r\n\t\t */\r\n\t\tsave: function()\r\n\t\t{\r\n\t\t\tvar self = this;\r\n\t\t\tvar formData = process_data_fields(this.root.attr('id'));\r\n\t\t\tformData.append('item_id', this.root.data('item_id'));\r\n\t\t\tformData.append('list_id', this.root.data('list_id'));\r\n\t\t\tformData.append('edit_form_id', this.root.data('form_id'));\r\n\t\t\tformData.append('redirect_url', this.root.data('redirect_url'));\r\n\t\t\t\r\n\t\t\tvar url = DX_CORE.site_url + 'inlineform';\r\n\t\t\tif(this.root.data('mode') != 'create')\r\n\t\t\t{\r\n\t\t\t\turl += '/' + this.root.data('item_id') + '?_method=PUT';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t// submit a request\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: url,\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tprocessData: false,\r\n\t\t\t\tcontentType: false,\r\n\t\t\t\tdata: formData,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n                                    if(typeof data.success != \"undefined\" && data.success == 0)\r\n                                    {\r\n                                            notify_err(data.error);\r\n                                            hide_page_splash(1);\r\n                                            return;\r\n                                    }\r\n\r\n                                    if(self.root.data('mode') == 'create')\r\n                                    {\r\n                                        if(self.root.data('has_users_documents_access') == 1){\r\n                                            window.DxEmpPersDocs.userId = data.item_id;\r\n\r\n                                            // Custom tab\r\n                                            window.DxEmpPersDocs.onClickSaveDocs(function () {\r\n                                                window.DxEmpPersDocs.toggleDisable(true);\r\n\r\n                                                hide_page_splash(1);\r\n                                                $('.dx-stick-footer').hide();\r\n                                                window.location = data.redirect;\r\n                                            });\r\n                                        } else {\r\n                                            hide_page_splash(1);\r\n                                            $('.dx-stick-footer').hide();\r\n                                            window.location = data.redirect;\r\n                                        }\r\n                                    \r\n                                        \r\n                                        return;\r\n                                    }\r\n\r\n                                    if(self.root.data('has_users_documents_access') == 1){\r\n                                        // Custom tab\r\n                                        window.DxEmpPersDocs.onClickSaveDocs(function () {\r\n                                            window.DxEmpPersDocs.toggleDisable(true);\r\n\r\n                                            self.editButton.show();\r\n\r\n                                            var tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane');\r\n\r\n                                            // replace original html content of marked elements with input fields\r\n                                            for(var i = 0; i < tabs.length; i++)\r\n                                            {\r\n                                                    var tab = $(tabs[i]);\r\n                                                    var elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n                                                    if(elem.length)\r\n                                                            elem.html(tab.html());\r\n                                            }\r\n\r\n                                            if(self.options.afterSave)\r\n                                            {\r\n                                                    self.options.afterSave();\r\n                                            }\r\n\r\n                                            hide_page_splash(1);\r\n                                            $('.dx-stick-footer').hide();\r\n\r\n                                        });\r\n                                    } else {\r\n                                        self.editButton.show();\r\n\r\n                                        var tabs = $($.parseHTML('<div>' + data.tabs + '</div>')).find('.tab-pane');\r\n\r\n                                        // replace original html content of marked elements with input fields\r\n                                        for(var i = 0; i < tabs.length; i++)\r\n                                        {\r\n                                                var tab = $(tabs[i]);\r\n                                                var elem = $('[data-tab-title=\"' + tab.data('tabTitle') + '\"]', self.root);\r\n                                                if(elem.length)\r\n                                                        elem.html(tab.html());\r\n                                        }\r\n\r\n                                        if(self.options.afterSave)\r\n                                        {\r\n                                                self.options.afterSave();\r\n                                        }\r\n\r\n                                        hide_page_splash(1);\r\n                                        $('.dx-stick-footer').hide();\r\n                                    }\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n                                        console.log(errorThrown);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Remove input fields and display original HTML\r\n\t\t */\r\n\t\tcancel: function()\r\n\t\t{\r\n\t\t\tif(this.root.data('mode') == 'create')\r\n\t\t\t{\r\n\t\t\t\tshow_page_splash(1);\r\n\t\t\t\twindow.location = this.options.empl_search_page_url;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.editButton.show();\r\n\t\t\t\r\n\t\t\tfor(var k in this.originalTabs)\r\n\t\t\t{\r\n\t\t\t\tthis.tabs.filter('[data-tab-title=\"' + k + '\"]').html(this.originalTabs[k]);\r\n\t\t\t}\r\n\t\t\t$('.dx-stick-footer').hide();\r\n                        if(this.root.data('has_users_documents_access') == 1){\r\n                            window.DxEmpPersDocs.cancelEditMode();\r\n                        }\r\n\t\t},\r\n\t\t\r\n\t\tdestroy: function()\r\n\t\t{\r\n\t\t\tif(!confirm(Lang.get('frame.confirm_delete')))\r\n\t\t\t\treturn;\r\n\t\t\t\r\n\t\t\tvar request = {\r\n\t\t\t\tedit_form_id: this.root.data('form_id'),\r\n\t\t\t\titem_id: this.root.data('item_id')\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tshow_page_splash(1);\r\n\t\t\t\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\turl: DX_CORE.site_url + 'inlineform/' + this.root.data('item_id') + '?_method=DELETE',\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tdata: request,\r\n\t\t\t\tsuccess: function(data)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(typeof data.success != \"undefined\" && data.success == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnotify_err(data.error);\r\n\t\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\twindow.location = data.redirect;\r\n\t\t\t\t},\r\n\t\t\t\terror: function(jqXHR, textStatus, errorThrown)\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(textStatus);\r\n\t\t\t\t\tconsole.log(jqXHR);\r\n\t\t\t\t\thide_page_splash(1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n})(jQuery);\r\n","(function($)\r\n{\r\n\t/**\r\n\t * EmplLinksFix - a jQuery plugin that fix (re-init) links to other employees (manager, reporting manager)\r\n\t *\r\n\t * @param root\r\n\t * @returns {*}\r\n\t * @constructor\r\n\t */\r\n\t$.fn.EmplLinksFix = function(opts)\r\n\t{\r\n\t\tvar options = $.extend({}, $.fn.EmplLinksFix.defaults, opts);\r\n\t\treturn this.each(function()\r\n\t\t{\r\n\t\t\tnew $.EmplLinksFix(this, options);\r\n\t\t});\r\n\t};\r\n\t\r\n\t$.fn.EmplLinksFix.defaults = {\r\n\t\tprofile_url: \"/employee/profile/\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * EmplLinksFix constructor\r\n\t *\r\n\t * @param root\r\n\t * @constructor\r\n\t */\r\n\t$.EmplLinksFix = function(root, opts)\r\n\t{\r\n\t\t$.data(root, 'EmplLinksFix', this);\r\n\t\tvar self = this;\r\n\t\tthis.options = opts;\r\n\t\tthis.root = $(root);\r\n                \r\n\t\tthis.flds_managers = $('.dx-autocompleate-field[data-item-field=manager_id], .dx-autocompleate-field[data-item-field=reporting_manager_id]', this.root);\r\n\t\tthis.tiles_managers = $('.employee-manager-tile', this.root);\r\n                \r\n                this.tiles_managers.each(function()\r\n                {\r\n                    if (!$(this).data(\"is-fix-init\")) {\r\n                        \r\n                        $(this).click(function() {\r\n                            self.show_tile_manager($(this).data(\"empl-id\"));\r\n                        });\r\n                    \r\n                        $(this).data(\"is-fix-init\", 1);\r\n                    }\r\n                });\r\n                                \r\n                this.flds_managers.each(function()\r\n                {\r\n                    if (!$(this).data(\"is-fix-init\")) {\r\n                        var fld = $(this);\r\n                        fld.find(\".dx-rel-id-add-btn\").off(\"click\"); //remove original event handler which will open CMS form\r\n                        \r\n                        fld.find(\".dx-rel-id-add-btn\").click(function() {\r\n                            self.show_manager(fld);\r\n                        });\r\n                        \r\n                        // Reset tooltip from edit to view hint\r\n                        fld.find(\".dx-rel-id-add-btn\").tooltipster('destroy');\r\n                        fld.find(\".dx-rel-id-add-btn\").attr(\"title\", Lang.get('empl_profile.hint_view_profile'));\r\n                        \r\n                        fld.find(\".dx-rel-id-add-btn\").tooltipster({\r\n                            theme: 'tooltipster-light',\r\n                            animation: 'grow',\r\n                            maxWidth: 300\r\n                        });\r\n        \r\n                        $(this).data(\"is-fix-init\", 1);\r\n                    }\r\n                });\r\n\t};\r\n\t\r\n\t/**\r\n\t * EmplLinksFix methods\r\n\t */\r\n\t$.extend($.EmplLinksFix.prototype, {\r\n\t\t/**\r\n\t\t * Show manager profile\r\n\t\t */\r\n\t\tshow_manager: function(fld)\r\n\t\t{\r\n                    var item_id = fld.find(\".dx-auto-input-id\").val();\r\n                    \r\n                    if (item_id == 0) {\r\n                        return;\r\n                    }\r\n                    show_page_splash(1);\r\n                    window.location = this.options.profile_url + item_id;\r\n\t\t},\r\n                show_tile_manager: function(empl_id)\r\n                {\r\n                    show_page_splash(1);\r\n                    window.location = this.options.profile_url + empl_id;\r\n                }\r\n\t});\r\n})(jQuery);\r\n\r\n$(document).ajaxComplete(function() {\r\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\r\n});\r\n\r\n$(document).ready(function() {\r\n    $(\".dx-employee-profile.freeform\").EmplLinksFix();\r\n});","window.DxEmpPersDocs = window.DxEmpPersDocs || {\n    rowCount: 0,\n    userId: 0,\n    dateFormat: '',\n    locale: 'en',\n    empDocListId: 0,\n    empDocFldId: 0,\n    isInit: false,\n    viewClone: '',\n    callbackOnInitiSuccess: function (data) {},\n    callbackOnSaveSuccess: function (data) {},\n    callbackOnError: function (data) {},\n    /**\n     * Initializes component\n     * @returns {undefined}\n     */\n    init: function (callbackOnInitiSuccess) {\n        if (callbackOnInitiSuccess) {\n            window.DxEmpPersDocs.callbackOnInitiSuccess = callbackOnInitiSuccess;\n        } else {\n            window.DxEmpPersDocs.callbackOnInitiSuccess = function () {};\n        }\n\n        window.DxEmpPersDocs.userId = ($('#dx-emp-pers-docs-panel').attr('data-user-id') == '' ? 0 : $('#dx-emp-pers-docs-panel').attr('data-user-id'));\n        window.DxEmpPersDocs.dateFormat = $('#dx-emp-pers-docs-panel').attr('data-date-format');\n        window.DxEmpPersDocs.locale = $('#dx-emp-pers-docs-panel').attr('data-locale');\n        window.DxEmpPersDocs.empDocListId = $('#dx-emp-pers-docs-panel').attr('data-emp-docs-list-id');\n        window.DxEmpPersDocs.empDocFldId = $('#dx-emp-pers-docs-panel').attr('data-emp-docs-fld-id');\n        $(\"#dx-emp-pers-docs-country\").change(window.DxEmpPersDocs.onChangeCountry);\n        window.DxEmpPersDocs.loadEmployeeData();\n    },\n    enterEditMode: function () {\n        window.DxEmpPersDocs.viewClone = $('#dx-emp-pers-docs-panel').clone(true, true);\n    },\n    cancelEditMode: function () {\n        $('#dx-emp-pers-docs-panel').replaceWith(window.DxEmpPersDocs.viewClone);\n        window.DxEmpPersDocs.viewClone = null;\n        window.DxEmpPersDocs.toggleDisable(true);\n    },\n    loadEmployeeData: function () {\n        $.ajax({\n            url: '/employee/personal_docs/get/employee_docs/' + window.DxEmpPersDocs.userId,\n            type: \"get\",\n            success: window.DxEmpPersDocs.onSuccessLoadEmployeeData,\n            error: window.DxEmpPersDocs.onAjaxError\n        });\n    },\n    onSuccessLoadEmployeeData: function (data) {\n        if (data != '') {\n            var data_rows = JSON.parse(data);\n            // Prepares dropdown list options\n            for (var i = 0; i < data_rows.length; i++) {\n                window.DxEmpPersDocs.createNewDocRow(false, data_rows[i]);\n            }\n        }\n\n        $(\"#dx-emp-pers-docs-country\").trigger('change');\n    },\n    createNewDocRow: function (is_new, data) {\n        // Gets template for row and converts it as jquery object\n        var new_row_html = $($('#dx-emp-pers-docs-new-row').html());\n        if (is_new) {\n            new_row_html = window.DxEmpPersDocs.setDocTypeValue(new_row_html, data);\n        } else {\n            new_row_html = window.DxEmpPersDocs.setValues(new_row_html, data);\n        }\n\n        // Append row to table\n        if (is_new) {\n            $('#dx-emp-pers-docs-table').append(new_row_html);\n        } else {\n            $('#dx-emp-pers-docs-table-history').append(new_row_html);\n        }\n\n        // Bind all rquired events for row elements\n        window.DxEmpPersDocs.bindDocRowEvenets(new_row_html);\n        // Increase row counter\n        window.DxEmpPersDocs.rowCount++;\n    },\n    initValidToDatePicker: function (new_row_html, value) {\n        var picker = new_row_html.find('.dx-emp-pers-docs-validto-input');\n        picker.attr('id', 'dx-emp-pers-docs-validto-input-' + window.DxEmpPersDocs.rowCount);\n        picker.val(value);\n        picker.datetimepicker({\n            lang: window.DxEmpPersDocs.locale,\n            format: window.DxEmpPersDocs.dateFormat,\n            timepicker: 0,\n            dayOfWeekStart: 1,\n            closeOnDateSelect: true\n        });\n        new_row_html.find('.dx-emp-pers-docs-validto-input-calc').click({picker_num: window.DxEmpPersDocs.rowCount}, function (e) {\n            jQuery('#dx-emp-pers-docs-validto-input-' + e.data.picker_num).datetimepicker('show');\n        });\n        return new_row_html;\n    },\n    setDocTypeValue: function (new_row_html, data_row) {\n        // Prepare \"valid to\" date picker            \n        new_row_html = window.DxEmpPersDocs.initValidToDatePicker(new_row_html, '');\n        new_row_html.attr('id', 'dx-emp-pers-docs-row-' + data_row.id);\n        new_row_html.find('.dx-emp-pers-docs-type-input').val(data_row.id);\n        new_row_html.find('.dx-emp-pers-docs-type-label').html(data_row.name);\n        return new_row_html;\n    },\n    setValues: function (new_row_html, data_row) {\n        new_row_html = window.DxEmpPersDocs.initValidToDatePicker(new_row_html, data_row.valid_to);\n        new_row_html.attr('id', 'dx-emp-pers-docs-row-' + data_row.doc_id);\n        new_row_html.find('.dx-emp-pers-docs-id-input').val(data_row.id);\n        new_row_html.find('.dx-emp-pers-docs-type-input').val(data_row.doc_id);\n        new_row_html.find('.dx-emp-pers-docs-type-label').html(data_row.personal_document.name);\n        new_row_html.find('.dx-emp-pers-docs-docnr-input').val(data_row.doc_nr);\n        new_row_html.find('.dx-emp-pers-docs-publisher-input').val(data_row.publisher);\n        window.DxEmpPersDocs.setFileValue(new_row_html, data_row.id, data_row.file_name);\n\n        return new_row_html;\n    },\n    setFileValue: function (new_row_html, row_id, file_name) {\n        if (file_name && file_name != null) {\n            var file_link = \"<a href='JavaScript: download_file(\" + row_id + \" , \" + window.DxEmpPersDocs.empDocListId + \", \" + window.DxEmpPersDocs.empDocFldId + \");'>\" + file_name + \"</a>\";\n            new_row_html.find('.dx-emp-pers-docs-file-input-download').html(file_link);\n            new_row_html.find('.dx-emp-pers-docs-file-input-isset').val(1);\n        }\n    },\n    clearDocRow: function (e) {\n        var row = $(e.target).parents('.dx-emp-pers-docs-row');\n        row.find('.dx-emp-pers-docs-id-input').val(0);\n        row.find('.dx-emp-pers-docs-docnr-input').val('');\n        row.find('.dx-emp-pers-docs-validto-input').val('');\n        row.find('.dx-emp-pers-docs-publisher-input').val('');\n        row.find('.dx-emp-pers-docs-file-input-remove-btn').trigger('click');\n    },\n    getDataForSave: function () {\n        var rows = $('#dx-emp-pers-docs-table .dx-emp-pers-docs-row');\n        var data = {\n            user_id: window.DxEmpPersDocs.userId,\n            rows: []\n        };\n        var formData = new FormData();\n        for (var i = 0; i < rows.length; i++) {\n            var row = $(rows[i]);\n            var row_data = {};\n            row_data.id = row.find('.dx-emp-pers-docs-id-input').val();\n            row_data.document_type = row.find('.dx-emp-pers-docs-type-input').val();\n            row_data.publisher = row.find('.dx-emp-pers-docs-publisher-input').val();\n            row_data.valid_to = row.find('.dx-emp-pers-docs-validto-input').val();\n            row_data.doc_nr = row.find('.dx-emp-pers-docs-docnr-input').val();\n            row_data.file_remove = $.trim(row.find('.dx-emp-pers-docs-file-input-download').html()) === '';\n            var file = row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0];\n            formData.append('file' + i, file);\n            data.rows.push(row_data);\n        }\n\n\n        formData.append('doc_country_id', $('#dx-emp-pers-docs-country').val());\n        formData.append('data', JSON.stringify(data));\n        return formData;\n    },\n    bindDocRowEvenets: function (new_row_html) {\n        new_row_html.find('.dx-emp-pers-docs-clear-btn').click(window.DxEmpPersDocs.clearDocRow);\n    },\n    onChangeCountry: function (e) {\n        var country_id = $(e.target).val();\n        $.ajax({\n            url: DX_CORE.site_url + 'employee/personal_docs/get/docs_by_country/' + country_id,\n            type: \"get\",\n            success: window.DxEmpPersDocs.onSuccessChangeCountry,\n            error: window.DxEmpPersDocs.onAjaxError\n        });\n    },\n    onSuccessChangeCountry: function (data) {\n        var docs = JSON.parse(data);\n        window.DxEmpPersDocs.drawRows(docs);\n        window.DxEmpPersDocs.finishInit();\n    },\n    drawRows: function (docs) {\n        // Moves all existing rows to hidden history div\n        $('#dx-emp-pers-docs-table').contents().appendTo('#dx-emp-pers-docs-table-history');\n        // Iterates through all the document types\n        for (var d = 0; d < docs.length; d++) {\n            var doc = docs[d];\n            var existing_row = $('#dx-emp-pers-docs-row-' + doc.id);\n            // Check if row exist in history div\n            if (existing_row.length > 0) {\n                // Move existing document type row into visible view\n                existing_row.appendTo('#dx-emp-pers-docs-table');\n            } else {\n                // Creates new row if it doesn't exist for document type\n                window.DxEmpPersDocs.createNewDocRow(true, doc);\n            }\n        }\n        // Initiates tooltips because they are not initiated because rows are created dynamicaly\n        $('#dx-emp-pers-docs-table').find('[data-tooltip-title]').each(function (i, obj) {\n            $(obj).attr('title', $(obj).data('tooltip-title'));\n            $(obj).tooltip();\n        });\n    },\n    finishInit: function () {\n        if (!window.DxEmpPersDocs.isInit) {\n            window.DxEmpPersDocs.isInit = true;\n            if (window.DxEmpPersDocs.userId == 0) {\n                window.DxEmpPersDocs.toggleDisable(false);\n            } else {\n                window.DxEmpPersDocs.toggleDisable(true);\n            }\n            window.DxEmpPersDocs.callbackOnInitiSuccess();\n        }\n    },\n    onClickSaveDocs: function (callbackOnSaveSuccess, callbackOnError) {\n        if (callbackOnSaveSuccess) {\n            window.DxEmpPersDocs.callbackOnSaveSuccess = callbackOnSaveSuccess;\n        } else {\n            window.DxEmpPersDocs.callbackOnSaveSuccess = function () {};\n        }\n        if (callbackOnError) {\n            window.DxEmpPersDocs.callbackOnError = callbackOnError;\n        } else {\n            window.DxEmpPersDocs.callbackOnError = function () {};\n        }\n\n        var form_data = window.DxEmpPersDocs.getDataForSave();\n        $.ajax({\n            url: DX_CORE.site_url + 'employee/personal_docs/save',\n            data: form_data,\n            type: \"post\",\n            processData: false,\n            dataType: \"json\",\n            contentType: false,\n            success: window.DxEmpPersDocs.onSuccessSave,\n            error: window.DxEmpPersDocs.onAjaxError\n        });\n    },\n    onSuccessSave: function (data_rows) {\n        // Set id for rows and update file input control value\n        for (var i = 0; i < data_rows.length; i++) {\n            var data_row = data_rows[i];\n            var row = $('#dx-emp-pers-docs-row-' + data_row.doc_id);\n\n            if (row.length > 0) {\n                row.find('.dx-emp-pers-docs-id-input').val(data_row.id);\n                row.find('.dx-emp-pers-docs-file-input-remove-btn').trigger('click');\n                window.DxEmpPersDocs.setFileValue(row, data_row.id, data_row.file_name);\n            }\n        }\n\n        $('#dx-emp-pers-docs-table-history').empty();\n        window.DxEmpPersDocs.callbackOnSaveSuccess();\n    },\n    onAjaxError: function (data) {\n        window.DxEmpPersDocs.finishInit();\n        window.DxEmpPersDocs.callbackOnError();\n    },\n    toggleDisable: function (is_disabled) {\n        if (!is_disabled) {\n            window.DxEmpPersDocs.enterEditMode();\n        }\n\n        var rows = $('#dx-emp-pers-docs-table .dx-emp-pers-docs-row');\n        for (var i = 0; i < rows.length; i++) {\n            var row = $(rows[i]);\n            row.find('.dx-emp-pers-docs-publisher-input').prop('disabled', is_disabled);\n            row.find('.dx-emp-pers-docs-validto-input').prop('disabled', is_disabled);\n            row.find('.dx-emp-pers-docs-validto-input-calc').prop('disabled', is_disabled);\n            row.find('.dx-emp-pers-docs-docnr-input').prop('disabled', is_disabled);\n            if (is_disabled) {\n                row.find('.dx-emp-pers-docs-file-input-set-btn').hide();\n                if (row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0]) {\n                    row.find('.dx-emp-pers-docs-file-input-remove-btn').hide();\n                }\n\n                row.find('.dx-emp-pers-docs-clear-btn').hide();\n            } else {\n                row.find('.dx-emp-pers-docs-validto-input').datetimepicker('destroy');\n                row.find('.dx-emp-pers-docs-validto-input').datetimepicker({\n                    lang: window.DxEmpPersDocs.locale,\n                    format: window.DxEmpPersDocs.dateFormat,\n                    timepicker: 0,\n                    dayOfWeekStart: 1,\n                    closeOnDateSelect: true\n                });\n\n                row.find('.dx-emp-pers-docs-file-input-set-btn').show();\n                if (row.find('.dx-emp-pers-docs-file-input-file').prop(\"files\")[0]) {\n                    row.find('.dx-emp-pers-docs-file-input-remove-btn').show();\n                }\n\n                row.find('.dx-emp-pers-docs-clear-btn').show();\n            }\n        }\n\n        $('#dx-emp-pers-docs-country').prop('disabled', is_disabled);\n    }\n}"]}